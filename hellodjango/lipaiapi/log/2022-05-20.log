2022-05-20 16:16:31,831 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-20 16:16:31,831 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-20 16:16:31,831 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:31,831 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:31,831 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-20 16:16:31,831 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,092 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-20 16:16:32,092 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HK9X"}
2022-05-20 16:16:32,092 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,092 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,092 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：27c73a6c43e348fa8471ffd613abb060
2022-05-20 16:16:32,092 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,102 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:32,102 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5645678324520'}
2022-05-20 16:16:32,102 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,103 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,103 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:32,103 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,141 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:32,141 INFO [root] [key.py (get:36] - 传的参数是：{'t': '4892743603643'}
2022-05-20 16:16:32,141 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,141 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,141 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:32,141 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,279 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:16:32,279 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2231776225472'}
2022-05-20 16:16:32,279 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,279 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,279 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:16:32,279 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,294 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:16:32,294 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-20 16:16:32,294 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,294 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,294 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-20 16:16:32,294 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,358 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:16:32,358 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:16:32,358 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,359 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,359 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-20 16:16:32,359 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,374 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:32,374 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:16:32,374 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,374 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,407 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,407 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:16:32,407 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,408 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,408 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1323
2022-05-20 16:16:32,408 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,425 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:16:32,425 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1323}
2022-05-20 16:16:32,426 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,426 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,426 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1323的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1323, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-20 16:16:32,426 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,449 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:32,449 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1323, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:16:32,450 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,450 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,474 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:16:32,474 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1323}
2022-05-20 16:16:32,474 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,474 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,474 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1323的记录已成功
2022-05-20 16:16:32,474 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,490 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:32,490 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-20 16:16:32,490 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,490 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,490 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-20 16:16:32,490 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,506 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:32,506 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1323]}
2022-05-20 16:16:32,506 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,506 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,507 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1323的记录
2022-05-20 16:16:32,507 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,515 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:32,515 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1323, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:16:32,515 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,516 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,529 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,529 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:16:32,529 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,529 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,529 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1324
2022-05-20 16:16:32,529 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,537 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:32,537 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1324, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:16:32,537 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,537 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,550 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,550 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-20 16:16:32,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,550 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,551 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1325
2022-05-20 16:16:32,551 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,564 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:32,564 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1324, 1325]}
2022-05-20 16:16:32,564 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,564 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,564 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1324, 1325的记录
2022-05-20 16:16:32,564 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,578 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:32,578 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:16:32,578 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,578 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,592 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,592 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:16:32,592 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,592 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,592 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1326
2022-05-20 16:16:32,592 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,603 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:32,603 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1285022569993'}
2022-05-20 16:16:32,603 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,603 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,603 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:32,603 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,750 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:16:32,751 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1551304098748'}
2022-05-20 16:16:32,751 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,751 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,751 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:16:32,751 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,766 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:16:32,767 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:16:32,767 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:32,767 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,767 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:16:32,767 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,796 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:16:32,796 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:16:32,797 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,797 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,797 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:16:32,797 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,811 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:32,811 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:16:32,812 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,812 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,812 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:16:32,812 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,824 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:32,824 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1326}
2022-05-20 16:16:32,824 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,824 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,858 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,859 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1326}, "name": "\u6c49EV"}}
2022-05-20 16:16:32,859 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,859 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,859 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1095
2022-05-20 16:16:32,859 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,873 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:16:32,873 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1095}
2022-05-20 16:16:32,874 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,874 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,874 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1095的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1326}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1095, 'nationalStandard': 255}
2022-05-20 16:16:32,874 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,886 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:16:32,887 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1095}
2022-05-20 16:16:32,887 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,887 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,887 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1095的记录已成功
2022-05-20 16:16:32,887 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,903 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:32,903 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-20 16:16:32,903 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,903 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,903 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-20 16:16:32,903 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,918 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:32,918 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-20 16:16:32,918 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,918 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,918 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-20 16:16:32,918 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,941 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:16:32,941 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-20 16:16:32,941 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,941 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,942 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1326]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1326}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-20 16:16:32,942 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,952 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:32,952 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1095]}
2022-05-20 16:16:32,952 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,952 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,952 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1095的记录
2022-05-20 16:16:32,953 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,959 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:32,959 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:16:32,959 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,959 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,959 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:16:32,959 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,968 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:32,968 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1326}
2022-05-20 16:16:32,968 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,968 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,981 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:32,982 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1326}, "name": "\u6c49EV"}}
2022-05-20 16:16:32,982 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,982 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,982 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1096
2022-05-20 16:16:32,982 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,990 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:32,990 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:16:32,990 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:32,990 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,990 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:16:32,991 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:32,999 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:33,000 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1326}
2022-05-20 16:16:33,000 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,000 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,011 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,011 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1326}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-20 16:16:33,011 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,011 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,011 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1097
2022-05-20 16:16:33,011 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,022 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,022 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1096, 1097]}
2022-05-20 16:16:33,022 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,022 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,023 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1096, 1097的记录
2022-05-20 16:16:33,023 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,033 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,034 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1326]}
2022-05-20 16:16:33,034 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,034 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,034 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1326的记录
2022-05-20 16:16:33,034 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,046 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:16:33,046 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1326, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:16:33,046 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,046 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,057 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,057 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:16:33,057 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,057 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,057 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1327
2022-05-20 16:16:33,057 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,067 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:33,067 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9763159260422'}
2022-05-20 16:16:33,067 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,067 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,067 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:33,067 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,217 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:16:33,217 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1731360428743'}
2022-05-20 16:16:33,218 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,218 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,218 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:16:33,218 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,231 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:16:33,231 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:16:33,231 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,232 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,232 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:16:33,232 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,276 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:16:33,276 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:16:33,276 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,276 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,277 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:16:33,277 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,285 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:33,285 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:16:33,286 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,286 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,286 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:16:33,286 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,295 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:33,295 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1327}
2022-05-20 16:16:33,295 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,295 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,306 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,306 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1327}, "name": "\u6c49EV"}}
2022-05-20 16:16:33,306 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,306 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,306 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1098
2022-05-20 16:16:33,307 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,316 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:33,317 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0154190284944'}
2022-05-20 16:16:33,317 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,317 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,317 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:33,317 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,462 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:16:33,462 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1728488538666'}
2022-05-20 16:16:33,462 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,462 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,463 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:16:33,463 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,478 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:16:33,478 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-20 16:16:33,478 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,478 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,479 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-20 16:16:33,479 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,525 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:16:33,525 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:16:33,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,525 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,525 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-20 16:16:33,526 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,534 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:33,534 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:16:33,534 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,534 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,534 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:16:33,534 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,544 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:33,545 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1098}
2022-05-20 16:16:33,545 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,545 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,570 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,570 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1098}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:16:33,570 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,570 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,570 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：886
2022-05-20 16:16:33,570 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,598 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:16:33,598 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 886}
2022-05-20 16:16:33,598 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,599 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,599 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：886的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1098}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 886}
2022-05-20 16:16:33,599 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,614 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:16:33,614 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 886}
2022-05-20 16:16:33,614 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,614 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,614 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：886的记录已成功
2022-05-20 16:16:33,614 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,628 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:33,628 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:16:33,628 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,628 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,628 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:16:33,629 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,643 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:33,643 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:16:33,643 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,643 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,643 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:16:33,643 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,655 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:33,655 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-20 16:16:33,655 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,655 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,655 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-20 16:16:33,655 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,673 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:33,673 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-20 16:16:33,673 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,673 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,673 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-20 16:16:33,673 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,686 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:33,686 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-20 16:16:33,686 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,686 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,686 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-20 16:16:33,687 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,740 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:16:33,740 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-20 16:16:33,740 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,740 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,742 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-20 16:16:33,742 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,803 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:16:33,803 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-20 16:16:33,804 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,804 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,804 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1098]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1098}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-20 16:16:33,804 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,816 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,816 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [886]}
2022-05-20 16:16:33,816 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,817 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,817 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：886的记录
2022-05-20 16:16:33,817 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,826 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:33,827 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:16:33,827 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,827 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,827 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:16:33,827 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,837 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:33,838 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1098}
2022-05-20 16:16:33,838 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,838 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,852 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,853 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1098}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:16:33,853 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,853 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,854 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：887
2022-05-20 16:16:33,854 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,863 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:33,864 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:16:33,864 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,864 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,864 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:16:33,864 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,877 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:16:33,877 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1098}
2022-05-20 16:16:33,877 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,878 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,901 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:33,901 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1098}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:16:33,902 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,902 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,902 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：888
2022-05-20 16:16:33,902 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,913 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,913 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [887, 888]}
2022-05-20 16:16:33,914 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,914 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,914 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：887, 888的记录
2022-05-20 16:16:33,914 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,926 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,926 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1098]}
2022-05-20 16:16:33,927 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,927 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,927 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1098的记录
2022-05-20 16:16:33,927 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,939 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:33,939 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1327]}
2022-05-20 16:16:33,939 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:33,939 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,939 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1327的记录
2022-05-20 16:16:33,940 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,951 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:16:33,951 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7352210354327'}
2022-05-20 16:16:33,951 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:33,952 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:33,952 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:16:33,952 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,099 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:16:34,100 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8115096245881'}
2022-05-20 16:16:34,100 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:34,100 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,100 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:16:34,100 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,120 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:16:34,120 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-20 16:16:34,120 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:16:34,120 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,120 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-20 16:16:34,120 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,169 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:16:34,169 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:16:34,169 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,169 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,170 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-20 16:16:34,170 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,179 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:34,179 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:16:34,179 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,179 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,179 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:16:34,179 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,201 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:34,201 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:16:34,201 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,201 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,201 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：808
2022-05-20 16:16:34,201 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,213 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:16:34,213 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 808}
2022-05-20 16:16:34,213 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,213 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,213 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：808的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 808, 'cardNo': '1568975633213', 'status': 0}
2022-05-20 16:16:34,213 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,225 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:16:34,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 808}
2022-05-20 16:16:34,225 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,225 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,225 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：808的记录已成功
2022-05-20 16:16:34,226 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,238 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:34,238 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-20 16:16:34,238 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,238 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,238 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-20 16:16:34,239 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,251 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:34,251 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-20 16:16:34,251 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,251 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,251 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:16:34,252 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,263 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:34,263 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-20 16:16:34,263 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,263 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,263 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:16:34,263 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,276 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:16:34,276 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-20 16:16:34,276 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,276 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,276 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-20 16:16:34,277 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,334 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:16:34,334 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-20 16:16:34,335 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,335 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,335 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-20 16:16:34,335 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,345 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:16:34,345 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-20 16:16:34,345 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,345 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,345 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-20 16:16:34,345 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,356 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:34,356 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [808]}
2022-05-20 16:16:34,357 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,357 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,357 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：808的记录
2022-05-20 16:16:34,357 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,364 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:34,364 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:16:34,364 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,364 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,364 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:16:34,365 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,378 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:34,378 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:16:34,378 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,379 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,379 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：809
2022-05-20 16:16:34,379 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,386 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:16:34,386 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:16:34,386 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,386 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,386 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:16:34,386 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,398 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:16:34,398 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-20 16:16:34,398 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,398 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,398 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：810
2022-05-20 16:16:34,399 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,410 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:16:34,410 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [809, 810]}
2022-05-20 16:16:34,410 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:16:34,410 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:16:34,410 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：809, 810的记录
2022-05-20 16:16:34,411 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,077 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-20 16:20:34,078 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-20 16:20:34,078 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,078 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,078 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-20 16:20:34,079 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,120 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-20 16:20:34,120 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HD85"}
2022-05-20 16:20:34,120 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,120 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,121 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：68fdfd0a992943809221b4a4b4dbecbe
2022-05-20 16:20:34,121 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,131 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:34,131 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5034073957464'}
2022-05-20 16:20:34,132 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,132 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,132 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:34,133 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,148 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:34,148 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7932825332442'}
2022-05-20 16:20:34,148 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,148 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,149 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:34,149 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,299 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:20:34,301 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1320405669864'}
2022-05-20 16:20:34,302 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,303 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,304 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:20:34,305 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,325 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:20:34,326 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-20 16:20:34,327 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,327 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,328 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-20 16:20:34,328 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,383 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:20:34,384 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:20:34,386 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,387 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,389 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-20 16:20:34,390 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,400 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:34,401 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:20:34,404 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,405 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,422 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:34,422 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:20:34,423 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,423 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,423 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1328
2022-05-20 16:20:34,423 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,436 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:20:34,436 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1328}
2022-05-20 16:20:34,437 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,437 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,437 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1328的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1328, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-20 16:20:34,438 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,445 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:34,445 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1328, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:20:34,446 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,446 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,457 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:20:34,457 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1328}
2022-05-20 16:20:34,457 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,458 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,458 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1328的记录已成功
2022-05-20 16:20:34,458 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,470 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:34,470 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-20 16:20:34,470 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,471 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,471 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-20 16:20:34,471 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,484 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:34,485 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1328]}
2022-05-20 16:20:34,486 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,486 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,486 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1328的记录
2022-05-20 16:20:34,486 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,494 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:34,494 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1328, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:20:34,494 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,495 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,506 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:34,507 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:20:34,507 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,507 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,507 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1329
2022-05-20 16:20:34,508 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,517 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:34,518 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1329, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:20:34,518 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,519 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,532 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:34,533 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-20 16:20:34,536 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,537 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,537 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1330
2022-05-20 16:20:34,538 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,549 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:34,549 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1329, 1330]}
2022-05-20 16:20:34,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,550 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,551 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1329, 1330的记录
2022-05-20 16:20:34,551 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,563 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:34,564 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:20:34,564 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,564 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,577 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:34,577 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:20:34,578 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,578 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,578 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1331
2022-05-20 16:20:34,578 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,586 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:34,587 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6492649631673'}
2022-05-20 16:20:34,587 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,587 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,587 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:34,588 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,737 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:20:34,737 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2347895084355'}
2022-05-20 16:20:34,737 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,737 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,738 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:20:34,738 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,753 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:20:34,754 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:20:34,754 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:34,754 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,754 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:20:34,755 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,820 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:20:34,836 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:20:34,837 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,838 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,838 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:20:34,839 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,847 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:34,848 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:20:34,849 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,849 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,850 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:20:34,850 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,860 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:34,861 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1331}
2022-05-20 16:20:34,861 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,861 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,874 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:34,874 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1331}, "name": "\u6c49EV"}}
2022-05-20 16:20:34,874 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,874 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,875 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1099
2022-05-20 16:20:34,875 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,885 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:20:34,885 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1099}
2022-05-20 16:20:34,886 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,886 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,886 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1099的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1331}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1099, 'nationalStandard': 255}
2022-05-20 16:20:34,887 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,903 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:20:34,904 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1099}
2022-05-20 16:20:34,905 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,905 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,905 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1099的记录已成功
2022-05-20 16:20:34,906 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,923 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:34,924 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-20 16:20:34,924 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,924 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,925 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-20 16:20:34,925 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,950 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:34,951 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-20 16:20:34,951 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,951 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,952 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-20 16:20:34,952 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,982 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:20:34,983 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-20 16:20:34,985 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:34,985 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:34,986 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1331]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1331}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-20 16:20:34,986 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,001 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:35,002 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1099]}
2022-05-20 16:20:35,003 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,003 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,003 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1099的记录
2022-05-20 16:20:35,003 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,011 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,012 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:20:35,012 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,012 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,012 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:20:35,013 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,025 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,025 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1331}
2022-05-20 16:20:35,026 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,026 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,038 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,039 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1331}, "name": "\u6c49EV"}}
2022-05-20 16:20:35,039 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,039 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,039 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1100
2022-05-20 16:20:35,039 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,047 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,048 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:20:35,048 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,050 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,052 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:20:35,053 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,061 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,062 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1331}
2022-05-20 16:20:35,062 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,062 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,073 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,073 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1331}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-20 16:20:35,074 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,074 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,074 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1101
2022-05-20 16:20:35,074 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,085 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:35,086 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1100, 1101]}
2022-05-20 16:20:35,086 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,086 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,087 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1100, 1101的记录
2022-05-20 16:20:35,087 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,096 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:35,097 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1331]}
2022-05-20 16:20:35,097 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,097 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,097 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1331的记录
2022-05-20 16:20:35,098 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,117 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:20:35,118 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1331, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:20:35,119 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,119 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,134 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,134 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:20:35,135 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,135 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,135 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1332
2022-05-20 16:20:35,136 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,145 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:35,145 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2297979207952'}
2022-05-20 16:20:35,146 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,146 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,146 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:35,146 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,288 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:20:35,289 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '9208215168130'}
2022-05-20 16:20:35,289 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,289 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,290 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:20:35,290 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,306 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:20:35,306 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:20:35,307 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,307 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,307 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:20:35,307 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,355 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:20:35,356 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:20:35,356 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,356 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,357 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:20:35,357 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,365 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,366 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:20:35,367 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,367 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,367 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:20:35,367 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,377 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,378 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1332}
2022-05-20 16:20:35,378 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,378 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,391 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,391 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1332}, "name": "\u6c49EV"}}
2022-05-20 16:20:35,391 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,392 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,392 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1102
2022-05-20 16:20:35,392 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,402 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:35,403 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0728111116040'}
2022-05-20 16:20:35,403 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,403 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,403 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:35,404 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,550 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:20:35,550 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0065277971009'}
2022-05-20 16:20:35,551 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,551 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,551 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:20:35,551 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,566 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:20:35,567 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-20 16:20:35,567 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:35,568 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,568 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-20 16:20:35,568 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,617 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:20:35,618 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:20:35,618 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,619 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,619 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-20 16:20:35,619 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,628 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,629 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:20:35,629 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,629 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,630 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:20:35,630 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,640 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,641 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1102}
2022-05-20 16:20:35,641 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,641 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,660 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,661 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1102}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:20:35,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,661 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：889
2022-05-20 16:20:35,662 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,673 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:20:35,674 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 889}
2022-05-20 16:20:35,674 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,674 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,675 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：889的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1102}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 889}
2022-05-20 16:20:35,675 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,688 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:20:35,688 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 889}
2022-05-20 16:20:35,689 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,689 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,689 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：889的记录已成功
2022-05-20 16:20:35,689 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,701 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:35,701 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:20:35,702 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,703 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,703 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:20:35,703 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,715 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:35,716 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:20:35,717 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,717 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,717 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:20:35,718 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,732 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:35,733 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-20 16:20:35,734 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,734 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,735 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-20 16:20:35,735 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,749 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:35,750 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-20 16:20:35,750 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,751 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,751 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-20 16:20:35,751 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,765 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:35,766 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-20 16:20:35,766 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,767 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,767 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-20 16:20:35,767 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,823 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:20:35,823 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-20 16:20:35,823 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,824 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,824 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-20 16:20:35,825 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,886 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:20:35,887 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-20 16:20:35,887 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,887 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,888 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1102]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1102}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-20 16:20:35,889 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,906 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:35,906 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [889]}
2022-05-20 16:20:35,906 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,907 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,907 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：889的记录
2022-05-20 16:20:35,907 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,915 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,915 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:20:35,916 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,916 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,917 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:20:35,917 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,930 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,930 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1102}
2022-05-20 16:20:35,930 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,930 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,945 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,946 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1102}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:20:35,946 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,946 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,946 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：890
2022-05-20 16:20:35,947 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,955 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:35,955 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:20:35,955 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,956 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,956 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:20:35,956 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,966 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:20:35,966 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1102}
2022-05-20 16:20:35,967 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,967 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,980 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:35,981 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1102}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:20:35,981 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,981 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,982 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：891
2022-05-20 16:20:35,982 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,995 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:35,996 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [890, 891]}
2022-05-20 16:20:35,996 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:35,996 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:35,997 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：890, 891的记录
2022-05-20 16:20:35,997 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,009 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:36,010 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1102]}
2022-05-20 16:20:36,010 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,010 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,011 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1102的记录
2022-05-20 16:20:36,011 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,022 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:36,023 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1332]}
2022-05-20 16:20:36,023 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,023 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,023 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1332的记录
2022-05-20 16:20:36,024 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,038 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:20:36,038 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2680681606313'}
2022-05-20 16:20:36,038 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:36,038 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,039 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:20:36,039 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,194 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:20:36,194 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8053472479419'}
2022-05-20 16:20:36,195 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:36,195 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,195 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:20:36,195 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,209 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:20:36,209 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-20 16:20:36,210 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:20:36,210 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,210 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-20 16:20:36,211 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,256 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:20:36,257 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:20:36,257 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,257 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,258 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-20 16:20:36,258 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,267 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:36,267 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:20:36,267 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,268 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,268 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:20:36,268 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,288 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:36,289 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:20:36,289 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,289 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,290 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：811
2022-05-20 16:20:36,290 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,301 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:20:36,301 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 811}
2022-05-20 16:20:36,301 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,302 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,302 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：811的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 811, 'cardNo': '1568975633213', 'status': 0}
2022-05-20 16:20:36,302 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,313 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:20:36,314 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 811}
2022-05-20 16:20:36,314 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,314 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,314 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：811的记录已成功
2022-05-20 16:20:36,315 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,328 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:36,329 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-20 16:20:36,329 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,329 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,330 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-20 16:20:36,330 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,342 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:36,342 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-20 16:20:36,343 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,343 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,343 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:20:36,343 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,355 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:36,356 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-20 16:20:36,356 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,356 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,356 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:20:36,357 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,369 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:20:36,369 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-20 16:20:36,370 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,370 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,370 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-20 16:20:36,370 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,420 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:20:36,421 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-20 16:20:36,421 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,421 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,422 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-20 16:20:36,422 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,434 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:20:36,435 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-20 16:20:36,435 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,435 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,435 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-20 16:20:36,436 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,447 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:36,447 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [811]}
2022-05-20 16:20:36,448 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,448 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,448 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：811的记录
2022-05-20 16:20:36,448 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,457 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:36,458 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:20:36,458 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,458 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,458 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:20:36,459 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,471 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:36,471 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:20:36,472 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,473 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,473 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：812
2022-05-20 16:20:36,473 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,480 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:20:36,480 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:20:36,481 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,481 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,481 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:20:36,481 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,495 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:20:36,495 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-20 16:20:36,495 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,496 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,496 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：813
2022-05-20 16:20:36,496 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,505 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:20:36,506 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [812, 813]}
2022-05-20 16:20:36,506 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:20:36,506 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:20:36,506 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：812, 813的记录
2022-05-20 16:20:36,507 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,669 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-20 16:22:53,670 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-20 16:22:53,670 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:53,670 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,670 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-20 16:22:53,670 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,706 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-20 16:22:53,707 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "J3W9"}
2022-05-20 16:22:53,707 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:53,707 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,707 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：faa064dd1f5342b5815f28d84c33af87
2022-05-20 16:22:53,708 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,717 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:53,717 INFO [root] [key.py (get:36] - 传的参数是：{'t': '4633461267433'}
2022-05-20 16:22:53,717 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:53,718 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,718 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:53,718 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,733 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:53,734 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0184528381946'}
2022-05-20 16:22:53,734 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:53,734 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,734 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:53,734 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,881 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:22:53,883 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8141391665453'}
2022-05-20 16:22:53,884 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:53,885 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,886 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:22:53,887 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,909 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:22:53,910 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-20 16:22:53,910 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:53,911 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,911 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-20 16:22:53,912 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,967 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:22:53,967 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:22:53,967 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:53,968 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,968 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-20 16:22:53,968 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:53,977 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:53,977 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:22:53,978 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:53,978 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,000 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,001 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:22:54,001 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,001 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,002 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1333
2022-05-20 16:22:54,002 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,012 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:22:54,013 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1333}
2022-05-20 16:22:54,013 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,013 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,013 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1333的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1333, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-20 16:22:54,014 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,023 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:54,023 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1333, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:22:54,024 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,024 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,036 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:22:54,036 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1333}
2022-05-20 16:22:54,036 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,036 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,037 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1333的记录已成功
2022-05-20 16:22:54,037 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,049 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:54,050 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-20 16:22:54,050 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,051 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,051 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-20 16:22:54,051 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,064 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:54,064 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1333]}
2022-05-20 16:22:54,064 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,064 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,065 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1333的记录
2022-05-20 16:22:54,065 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,073 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:54,073 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1333, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:22:54,074 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,074 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,087 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,087 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:22:54,087 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,087 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,088 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1334
2022-05-20 16:22:54,088 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,095 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:54,096 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1334, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:22:54,096 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,096 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,109 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,109 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-20 16:22:54,110 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,110 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,110 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1335
2022-05-20 16:22:54,110 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,124 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:54,125 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1334, 1335]}
2022-05-20 16:22:54,125 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,125 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,125 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1334, 1335的记录
2022-05-20 16:22:54,125 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,138 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:54,138 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:22:54,138 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,138 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,152 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,152 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:22:54,152 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,153 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,153 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1336
2022-05-20 16:22:54,153 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,166 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:54,166 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7941773374447'}
2022-05-20 16:22:54,166 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,167 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,167 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:54,167 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,311 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:22:54,312 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1296056324509'}
2022-05-20 16:22:54,312 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,313 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,313 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:22:54,313 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,329 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:22:54,330 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:22:54,331 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,332 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,332 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:22:54,333 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,381 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:22:54,382 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:22:54,384 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,386 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,387 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:22:54,388 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,404 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:54,404 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:22:54,405 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,406 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,407 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:22:54,407 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,421 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:54,422 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1336}
2022-05-20 16:22:54,422 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,422 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,437 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,438 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1336}, "name": "\u6c49EV"}}
2022-05-20 16:22:54,439 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,439 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,439 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1103
2022-05-20 16:22:54,440 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,451 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:22:54,452 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1103}
2022-05-20 16:22:54,453 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,453 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,454 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1103的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1336}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1103, 'nationalStandard': 255}
2022-05-20 16:22:54,454 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,466 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:22:54,467 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1103}
2022-05-20 16:22:54,467 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,467 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,468 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1103的记录已成功
2022-05-20 16:22:54,468 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,479 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:54,480 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-20 16:22:54,480 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,481 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,481 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-20 16:22:54,482 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,493 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:54,494 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-20 16:22:54,495 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,495 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,496 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-20 16:22:54,496 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,521 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:22:54,522 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-20 16:22:54,522 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,523 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,523 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1336]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1336}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-20 16:22:54,524 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,537 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:54,538 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1103]}
2022-05-20 16:22:54,538 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,539 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,539 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1103的记录
2022-05-20 16:22:54,540 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,549 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:54,549 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:22:54,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,550 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,550 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:22:54,551 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,561 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:54,562 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1336}
2022-05-20 16:22:54,562 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,563 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,577 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,578 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1336}, "name": "\u6c49EV"}}
2022-05-20 16:22:54,579 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,579 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,579 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1104
2022-05-20 16:22:54,580 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,590 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:54,591 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:22:54,592 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,592 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,592 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:22:54,593 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,605 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:54,606 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1336}
2022-05-20 16:22:54,606 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,606 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,621 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,621 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1336}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-20 16:22:54,621 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,622 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,622 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1105
2022-05-20 16:22:54,622 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,635 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:54,636 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1104, 1105]}
2022-05-20 16:22:54,636 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,636 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,636 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1104, 1105的记录
2022-05-20 16:22:54,636 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,652 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:54,652 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1336]}
2022-05-20 16:22:54,652 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,652 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,652 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1336的记录
2022-05-20 16:22:54,653 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,665 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:22:54,665 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1336, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:22:54,666 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,667 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,680 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,680 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:22:54,680 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,680 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,681 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1337
2022-05-20 16:22:54,681 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,691 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:54,691 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2048486354008'}
2022-05-20 16:22:54,692 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,692 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,692 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:54,692 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,828 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:22:54,830 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '7249176671953'}
2022-05-20 16:22:54,831 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,832 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,833 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:22:54,834 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,854 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:22:54,856 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:22:54,857 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,858 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,859 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:22:54,860 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,918 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:22:54,919 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:22:54,921 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,922 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,924 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:22:54,925 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,940 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:54,941 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:22:54,942 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,943 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,943 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:22:54,944 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,955 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:54,956 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1337}
2022-05-20 16:22:54,956 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,957 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,970 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:54,970 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1337}, "name": "\u6c49EV"}}
2022-05-20 16:22:54,970 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:54,970 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,971 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1106
2022-05-20 16:22:54,971 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,980 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:54,980 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5708648755708'}
2022-05-20 16:22:54,980 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:54,980 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:54,981 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:54,981 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,119 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:22:55,121 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '9830715126399'}
2022-05-20 16:22:55,122 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:55,124 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,125 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:22:55,126 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,150 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:22:55,151 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-20 16:22:55,152 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:55,153 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,154 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-20 16:22:55,154 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,195 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:22:55,196 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:22:55,197 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,197 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,198 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-20 16:22:55,199 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,209 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:55,210 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:22:55,210 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,211 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,211 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:22:55,212 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,221 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:55,222 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1106}
2022-05-20 16:22:55,223 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,223 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,234 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:55,235 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1106}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:22:55,236 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,237 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,237 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：892
2022-05-20 16:22:55,238 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,247 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:22:55,248 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 892}
2022-05-20 16:22:55,249 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,249 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,250 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：892的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1106}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 892}
2022-05-20 16:22:55,251 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,264 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:22:55,264 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 892}
2022-05-20 16:22:55,265 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,266 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,266 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：892的记录已成功
2022-05-20 16:22:55,266 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,278 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,278 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:22:55,278 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,279 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,280 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:22:55,280 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,290 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,290 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:22:55,291 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,291 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,291 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:22:55,291 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,303 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,304 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-20 16:22:55,305 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,307 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,307 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-20 16:22:55,310 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,326 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,327 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-20 16:22:55,329 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,330 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,332 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-20 16:22:55,332 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,347 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,347 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-20 16:22:55,348 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,348 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,348 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-20 16:22:55,349 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,400 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:22:55,401 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-20 16:22:55,401 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,402 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,402 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-20 16:22:55,404 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,461 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:22:55,462 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-20 16:22:55,462 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,462 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,463 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1106]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1106}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-20 16:22:55,464 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,473 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:55,474 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [892]}
2022-05-20 16:22:55,474 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,474 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,474 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：892的记录
2022-05-20 16:22:55,474 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,484 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:55,484 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:22:55,484 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,484 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,484 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:22:55,485 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,493 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:55,493 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1106}
2022-05-20 16:22:55,493 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,493 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,504 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:55,504 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1106}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:22:55,505 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,505 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,505 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：893
2022-05-20 16:22:55,505 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,511 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:55,512 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:22:55,512 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,512 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,513 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:22:55,513 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,522 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:22:55,522 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1106}
2022-05-20 16:22:55,523 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,523 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,534 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:55,536 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1106}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:22:55,536 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,536 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,536 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：894
2022-05-20 16:22:55,537 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,547 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:55,549 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [893, 894]}
2022-05-20 16:22:55,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,552 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,552 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：893, 894的记录
2022-05-20 16:22:55,553 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,564 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:55,564 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1106]}
2022-05-20 16:22:55,565 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,565 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,565 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1106的记录
2022-05-20 16:22:55,566 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,577 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:55,578 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1337]}
2022-05-20 16:22:55,578 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,578 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,578 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1337的记录
2022-05-20 16:22:55,579 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,592 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:22:55,592 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5674948463334'}
2022-05-20 16:22:55,593 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:55,593 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,593 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:22:55,593 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,720 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:22:55,722 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1550551528890'}
2022-05-20 16:22:55,723 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:55,724 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,725 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:22:55,726 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,746 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:22:55,747 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-20 16:22:55,748 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:22:55,749 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,749 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-20 16:22:55,750 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,801 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:22:55,801 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:22:55,801 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,802 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,802 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-20 16:22:55,802 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,810 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:55,810 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:22:55,811 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,811 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,811 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:22:55,811 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,823 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:55,824 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:22:55,824 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,824 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,825 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：814
2022-05-20 16:22:55,825 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,834 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:22:55,834 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 814}
2022-05-20 16:22:55,835 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,835 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,835 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：814的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 814, 'cardNo': '1568975633213', 'status': 0}
2022-05-20 16:22:55,835 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,847 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:22:55,847 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 814}
2022-05-20 16:22:55,847 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,849 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,849 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：814的记录已成功
2022-05-20 16:22:55,850 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,863 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,863 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-20 16:22:55,863 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,864 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,864 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-20 16:22:55,864 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,878 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,878 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-20 16:22:55,879 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,879 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,879 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:22:55,880 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,902 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,909 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-20 16:22:55,910 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,911 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,911 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:22:55,912 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,929 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:22:55,930 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-20 16:22:55,935 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,936 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,936 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-20 16:22:55,937 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,989 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:22:55,990 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-20 16:22:55,990 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:55,990 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:55,991 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-20 16:22:55,992 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,005 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:22:56,006 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-20 16:22:56,007 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,007 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,007 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-20 16:22:56,011 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,025 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:56,025 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [814]}
2022-05-20 16:22:56,026 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,026 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,027 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：814的记录
2022-05-20 16:22:56,027 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,037 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:56,037 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:22:56,038 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,038 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,038 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:22:56,038 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,052 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:56,053 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:22:56,054 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,055 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,055 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：815
2022-05-20 16:22:56,056 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,064 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:22:56,064 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:22:56,065 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,066 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,067 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:22:56,068 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,086 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:22:56,087 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-20 16:22:56,087 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,088 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,088 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：816
2022-05-20 16:22:56,088 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,106 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:22:56,107 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [815, 816]}
2022-05-20 16:22:56,107 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:22:56,109 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:22:56,110 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：815, 816的记录
2022-05-20 16:22:56,110 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,041 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-20 16:26:44,042 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-20 16:26:44,042 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,042 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,042 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-20 16:26:44,042 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,081 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-20 16:26:44,081 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "MS6Y"}
2022-05-20 16:26:44,082 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,082 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,082 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：ad9f6577d44149d18deb59fdbd6ed675
2022-05-20 16:26:44,082 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,096 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-20 16:26:44,096 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2293979282149'}
2022-05-20 16:26:44,097 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,097 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,097 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-20 16:26:44,097 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,231 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:26:44,233 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '3607598789501'}
2022-05-20 16:26:44,234 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,235 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,236 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:26:44,237 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,258 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:26:44,259 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-20 16:26:44,260 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,261 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,263 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-20 16:26:44,264 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,345 INFO [root] [key.py (post:18] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:26:44,347 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:26:44,349 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,350 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,351 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-20 16:26:44,352 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,369 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:44,369 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:26:44,370 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,370 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,384 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,385 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:26:44,385 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,386 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,386 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1338
2022-05-20 16:26:44,386 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,397 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:26:44,398 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1338}
2022-05-20 16:26:44,398 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,399 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,399 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1338的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1338, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-20 16:26:44,400 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,408 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:44,409 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1338, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:26:44,409 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,410 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,422 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:26:44,423 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1338}
2022-05-20 16:26:44,423 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,423 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,424 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1338的记录已成功
2022-05-20 16:26:44,424 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,438 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:44,439 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-20 16:26:44,439 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,440 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,440 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-20 16:26:44,441 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,454 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:44,455 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1338]}
2022-05-20 16:26:44,455 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,455 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,456 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1338的记录
2022-05-20 16:26:44,456 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,466 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:44,466 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1338, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:26:44,467 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,467 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,489 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,490 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:26:44,490 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,491 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,492 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1339
2022-05-20 16:26:44,492 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,505 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:44,505 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1339, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-20 16:26:44,506 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,506 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,521 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,522 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-20 16:26:44,522 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,522 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,523 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1340
2022-05-20 16:26:44,523 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,534 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:44,535 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1339, 1340]}
2022-05-20 16:26:44,535 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,535 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,535 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1339, 1340的记录
2022-05-20 16:26:44,536 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,548 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:44,548 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:26:44,549 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,549 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,561 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,562 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:26:44,562 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,562 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,562 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1341
2022-05-20 16:26:44,563 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,715 INFO [root] [key.py (get:35] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:26:44,716 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4446373693481'}
2022-05-20 16:26:44,718 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,718 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,718 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:26:44,719 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,734 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:26:44,735 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:26:44,735 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:44,735 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,735 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:26:44,735 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,783 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:26:44,784 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:26:44,785 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,785 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,786 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:26:44,787 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,798 INFO [root] [key.py (post:18] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:44,799 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:26:44,800 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,801 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,801 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:26:44,802 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,816 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:44,816 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1341}
2022-05-20 16:26:44,816 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,817 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,832 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,832 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1341}, "name": "\u6c49EV"}}
2022-05-20 16:26:44,833 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,833 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,834 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1107
2022-05-20 16:26:44,834 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,846 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:26:44,847 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1107}
2022-05-20 16:26:44,847 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,848 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,848 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1107的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1341}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1107, 'nationalStandard': 255}
2022-05-20 16:26:44,849 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,863 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:26:44,864 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1107}
2022-05-20 16:26:44,864 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,865 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,865 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1107的记录已成功
2022-05-20 16:26:44,866 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,880 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:44,881 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-20 16:26:44,881 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,882 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,882 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-20 16:26:44,883 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,903 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:44,904 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-20 16:26:44,905 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,906 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,907 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-20 16:26:44,908 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,939 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:26:44,939 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-20 16:26:44,939 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,940 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,940 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1341]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1341}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-20 16:26:44,941 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,952 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:44,953 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1107]}
2022-05-20 16:26:44,953 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,953 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,953 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1107的记录
2022-05-20 16:26:44,954 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,960 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:44,961 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:26:44,961 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,961 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,961 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:26:44,962 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,970 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:44,970 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1341}
2022-05-20 16:26:44,970 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,971 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,982 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:44,983 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1341}, "name": "\u6c49EV"}}
2022-05-20 16:26:44,983 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,983 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,984 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1108
2022-05-20 16:26:44,984 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,990 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:44,991 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:26:44,991 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:44,991 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:44,992 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:26:44,992 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,000 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:45,001 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1341}
2022-05-20 16:26:45,001 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,001 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,014 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,014 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1341}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-20 16:26:45,015 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,015 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,015 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1109
2022-05-20 16:26:45,015 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,026 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,027 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1108, 1109]}
2022-05-20 16:26:45,027 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,027 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,028 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1108, 1109的记录
2022-05-20 16:26:45,028 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,043 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,043 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1341]}
2022-05-20 16:26:45,044 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,044 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,044 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1341的记录
2022-05-20 16:26:45,044 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,058 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-20 16:26:45,058 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1341, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-20 16:26:45,058 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,059 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,071 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,072 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-20 16:26:45,072 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,073 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,073 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1342
2022-05-20 16:26:45,073 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,219 INFO [root] [key.py (get:35] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:26:45,219 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0845788881116'}
2022-05-20 16:26:45,219 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:45,220 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,220 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:26:45,220 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,234 INFO [root] [key.py (get:35] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:26:45,235 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-20 16:26:45,235 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:45,235 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,235 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-20 16:26:45,235 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,281 INFO [root] [key.py (post:18] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:26:45,282 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:26:45,282 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,283 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,283 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-20 16:26:45,283 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,291 INFO [root] [key.py (post:18] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:45,292 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-20 16:26:45,292 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,292 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,292 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-20 16:26:45,293 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,302 INFO [root] [key.py (post:18] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:45,302 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1342}
2022-05-20 16:26:45,302 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,303 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,315 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,315 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1342}, "name": "\u6c49EV"}}
2022-05-20 16:26:45,315 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,316 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,316 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1110
2022-05-20 16:26:45,316 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,460 INFO [root] [key.py (get:35] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:26:45,461 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0999195106869'}
2022-05-20 16:26:45,462 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:45,463 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,465 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:26:45,466 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,488 INFO [root] [key.py (get:35] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:26:45,489 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-20 16:26:45,490 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:45,491 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,492 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-20 16:26:45,493 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,546 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:26:45,547 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:26:45,549 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,550 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,551 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-20 16:26:45,551 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,560 INFO [root] [key.py (post:18] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:45,561 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:26:45,561 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,562 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,562 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:26:45,563 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,571 INFO [root] [key.py (post:18] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:45,572 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1110}
2022-05-20 16:26:45,572 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,572 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,584 INFO [root] [key.py (post:18] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,585 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1110}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:26:45,585 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,586 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,586 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：895
2022-05-20 16:26:45,586 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,594 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:26:45,594 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 895}
2022-05-20 16:26:45,594 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,595 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,595 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：895的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1110}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 895}
2022-05-20 16:26:45,595 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,604 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:26:45,605 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 895}
2022-05-20 16:26:45,605 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,605 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,605 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：895的记录已成功
2022-05-20 16:26:45,605 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,615 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:45,615 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:26:45,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,616 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,616 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:26:45,617 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,626 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:45,627 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-20 16:26:45,627 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,627 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,627 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-20 16:26:45,628 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,637 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:45,638 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-20 16:26:45,638 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,638 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,638 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-20 16:26:45,638 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,648 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:45,648 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-20 16:26:45,649 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,650 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,650 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-20 16:26:45,650 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,660 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:45,661 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-20 16:26:45,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,661 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-20 16:26:45,662 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,712 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:26:45,712 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-20 16:26:45,712 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,712 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,713 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-20 16:26:45,714 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,777 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:26:45,777 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-20 16:26:45,777 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,777 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,778 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1110]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1110}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-20 16:26:45,779 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,792 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,792 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [895]}
2022-05-20 16:26:45,792 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,792 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,792 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：895的记录
2022-05-20 16:26:45,793 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,801 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:45,801 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:26:45,801 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,801 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,802 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:26:45,802 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,812 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:45,813 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1110}
2022-05-20 16:26:45,813 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,813 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,824 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,825 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1110}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:26:45,825 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,825 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,825 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：896
2022-05-20 16:26:45,826 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,833 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:45,833 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-20 16:26:45,834 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,834 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,834 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-20 16:26:45,834 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,844 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-20 16:26:45,844 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1110}
2022-05-20 16:26:45,845 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,845 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,857 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:45,858 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1110}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-20 16:26:45,858 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,858 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,858 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：897
2022-05-20 16:26:45,858 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,870 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,871 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [896, 897]}
2022-05-20 16:26:45,871 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,871 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,871 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：896, 897的记录
2022-05-20 16:26:45,872 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,885 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,885 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1110]}
2022-05-20 16:26:45,885 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,885 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,886 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1110的记录
2022-05-20 16:26:45,886 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,903 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:45,903 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1342]}
2022-05-20 16:26:45,903 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:45,903 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:45,904 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1342的记录
2022-05-20 16:26:45,904 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,046 INFO [root] [key.py (get:35] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-20 16:26:46,048 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4122777410560'}
2022-05-20 16:26:46,050 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:46,051 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,052 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-20 16:26:46,053 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,067 INFO [root] [key.py (get:35] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-20 16:26:46,068 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-20 16:26:46,068 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-20 16:26:46,068 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,068 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-20 16:26:46,069 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,117 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-20 16:26:46,118 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-20 16:26:46,118 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,118 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,119 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-20 16:26:46,120 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,129 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:46,130 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:26:46,130 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,131 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,131 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:26:46,132 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,146 INFO [root] [key.py (post:18] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:46,147 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:26:46,147 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,148 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,148 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：817
2022-05-20 16:26:46,149 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,160 INFO [root] [key.py (post:18] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-20 16:26:46,161 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 817}
2022-05-20 16:26:46,161 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,162 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,162 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：817的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 817, 'cardNo': '1568975633213', 'status': 0}
2022-05-20 16:26:46,163 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,178 INFO [root] [key.py (post:18] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-20 16:26:46,179 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 817}
2022-05-20 16:26:46,179 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,180 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,180 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：817的记录已成功
2022-05-20 16:26:46,181 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,197 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:46,198 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-20 16:26:46,199 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,199 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,200 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-20 16:26:46,200 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,215 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:46,216 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-20 16:26:46,216 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,217 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,218 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:26:46,218 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,233 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:46,234 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-20 16:26:46,234 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,235 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,235 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-20 16:26:46,236 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,251 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-20 16:26:46,252 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-20 16:26:46,252 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,253 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,253 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-20 16:26:46,254 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,324 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:26:46,325 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-20 16:26:46,327 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,328 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,330 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-20 16:26:46,335 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,353 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-20 16:26:46,354 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-20 16:26:46,356 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,357 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,358 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-20 16:26:46,359 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,377 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:46,378 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [817]}
2022-05-20 16:26:46,379 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,380 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,380 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：817的记录
2022-05-20 16:26:46,381 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,397 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:46,398 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:26:46,399 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,400 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,401 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:26:46,402 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,419 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:46,420 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-20 16:26:46,420 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,421 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,422 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：818
2022-05-20 16:26:46,423 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,460 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-20 16:26:46,461 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-20 16:26:46,462 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,462 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,463 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-20 16:26:46,464 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,483 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-20 16:26:46,484 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-20 16:26:46,485 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,486 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,486 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：819
2022-05-20 16:26:46,487 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,504 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-20 16:26:46,505 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [818, 819]}
2022-05-20 16:26:46,505 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-20 16:26:46,505 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-20 16:26:46,506 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：818, 819的记录
2022-05-20 16:26:46,507 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
