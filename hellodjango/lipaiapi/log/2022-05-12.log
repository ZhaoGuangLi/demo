2022-05-12 09:26:57,414 INFO [root] [key.py (login:115] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/validate/image?t=0.029693380014191195
2022-05-12 09:26:57,415 INFO [root] [key.py (login:116] - 接口返回的响应头中的status_code是： 200
2022-05-12 09:26:57,667 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/login
2022-05-12 09:26:57,668 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "URXL"}
2022-05-12 09:26:57,668 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:57,668 INFO [root] [key.py (login:125] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"36da9d58628e4cc4aed23be3f8dbff9c"}
2022-05-12 09:26:57,868 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:57,869 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 09:26:57,870 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:57,935 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 09:26:57,936 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 09:26:57,937 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:57,938 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1083
2022-05-12 09:26:58,011 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,012 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,012 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,046 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 09:26:58,047 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1083}
2022-05-12 09:26:58,047 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,047 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：1083的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1083, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-12 09:26:58,077 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:58,077 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1083, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 09:26:58,077 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,107 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/write
2022-05-12 09:26:58,107 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1083}
2022-05-12 09:26:58,107 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,108 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：1083的记录已成功
2022-05-12 09:26:58,164 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,164 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,164 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,184 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:58,184 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-12 09:26:58,185 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,185 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-12 09:26:58,253 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/unlink
2022-05-12 09:26:58,253 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1083]}
2022-05-12 09:26:58,253 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,253 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1083的记录
2022-05-12 09:26:58,265 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:58,266 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1083, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 09:26:58,267 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,292 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/create
2022-05-12 09:26:58,292 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 09:26:58,292 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,292 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1084
2022-05-12 09:26:58,303 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:58,303 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1084, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 09:26:58,303 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,317 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/create
2022-05-12 09:26:58,317 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-12 09:26:58,318 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,318 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1085
2022-05-12 09:26:58,333 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/unlink
2022-05-12 09:26:58,334 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1084, 1085]}
2022-05-12 09:26:58,334 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,334 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：1084, 1085的记录
2022-05-12 09:26:58,377 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:58,378 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 09:26:58,378 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,394 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 09:26:58,394 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 09:26:58,395 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,395 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1086
2022-05-12 09:26:58,450 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,450 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,451 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,472 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 09:26:58,472 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 09:26:58,473 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,473 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 09:26:58,501 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/name_get
2022-05-12 09:26:58,502 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1086}
2022-05-12 09:26:58,502 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,538 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 09:26:58,538 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1086}, "name": "\u6c49EV"}}
2022-05-12 09:26:58,539 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,539 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：903
2022-05-12 09:26:58,684 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,685 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,685 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,695 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 09:26:58,696 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 903}
2022-05-12 09:26:58,697 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,697 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：903的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1086}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 903, 'nationalStandard': 255}
2022-05-12 09:26:58,710 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 09:26:58,711 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 903}
2022-05-12 09:26:58,711 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,712 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：903的记录已成功
2022-05-12 09:26:58,752 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,752 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,753 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,765 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:58,765 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-12 09:26:58,765 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,766 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-12 09:26:58,801 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,802 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,802 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,819 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:58,820 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-12 09:26:58,820 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,821 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-12 09:26:58,855 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,856 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,857 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,894 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/read_group
2022-05-12 09:26:58,895 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-12 09:26:58,896 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,898 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1086]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1086}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-12 09:26:58,915 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/unlink
2022-05-12 09:26:58,916 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [903]}
2022-05-12 09:26:58,917 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,917 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：903的记录
2022-05-12 09:26:58,965 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:58,966 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:58,967 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,976 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/default_get
2022-05-12 09:26:58,977 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 09:26:58,977 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:58,978 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 09:26:58,988 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 09:26:58,989 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1086}
2022-05-12 09:26:58,990 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,004 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/create
2022-05-12 09:26:59,005 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1086}, "name": "\u6c49EV"}}
2022-05-12 09:26:59,005 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,006 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：904
2022-05-12 09:26:59,060 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,060 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,061 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,071 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/default_get
2022-05-12 09:26:59,072 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 09:26:59,072 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,073 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 09:26:59,084 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/name_get
2022-05-12 09:26:59,085 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1086}
2022-05-12 09:26:59,085 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,100 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/create
2022-05-12 09:26:59,101 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1086}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-12 09:26:59,101 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,102 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：905
2022-05-12 09:26:59,116 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/unlink
2022-05-12 09:26:59,116 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [904, 905]}
2022-05-12 09:26:59,117 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,117 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：904, 905的记录
2022-05-12 09:26:59,137 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/unlink
2022-05-12 09:26:59,138 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1086]}
2022-05-12 09:26:59,138 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,138 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1086的记录
2022-05-12 09:26:59,157 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/onchange
2022-05-12 09:26:59,157 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1086, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 09:26:59,157 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,183 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/create
2022-05-12 09:26:59,183 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 09:26:59,184 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,184 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1087
2022-05-12 09:26:59,229 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,230 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,230 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,239 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 09:26:59,239 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 09:26:59,239 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,240 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 09:26:59,250 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/name_get
2022-05-12 09:26:59,250 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1087}
2022-05-12 09:26:59,250 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,263 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 09:26:59,264 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1087}, "name": "\u6c49EV"}}
2022-05-12 09:26:59,264 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,264 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：906
2022-05-12 09:26:59,317 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,317 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,317 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,334 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 09:26:59,334 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 09:26:59,335 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,335 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 09:26:59,348 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 09:26:59,349 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 906}
2022-05-12 09:26:59,349 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,540 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 09:26:59,541 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 906}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 09:26:59,541 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,541 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：738
2022-05-12 09:26:59,587 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,587 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,588 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,600 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 09:26:59,601 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 738}
2022-05-12 09:26:59,601 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,601 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：738的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 906}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 738}
2022-05-12 09:26:59,611 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 09:26:59,612 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 738}
2022-05-12 09:26:59,612 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,612 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：738的记录已成功
2022-05-12 09:26:59,652 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,653 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,653 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,667 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:59,668 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-12 09:26:59,669 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,669 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 09:26:59,729 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,730 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,732 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,754 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:59,755 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-12 09:26:59,755 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,755 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 09:26:59,788 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,789 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,789 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,813 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:59,814 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-12 09:26:59,814 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,814 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-12 09:26:59,863 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,864 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,864 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,879 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:59,879 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-12 09:26:59,879 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,880 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-12 09:26:59,926 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/load_views
2022-05-12 09:26:59,927 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:26:59,927 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,944 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/search_read
2022-05-12 09:26:59,945 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-12 09:26:59,945 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:26:59,945 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-12 09:27:00,001 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,001 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,002 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,070 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/read_group
2022-05-12 09:27:00,071 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-12 09:27:00,071 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,079 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-12 09:27:00,133 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,133 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,134 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,208 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/read_group
2022-05-12 09:27:00,208 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-12 09:27:00,208 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,209 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 906]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 906}, '_total': 1}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 24}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 7}], 'length': 20}
2022-05-12 09:27:00,223 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:00,223 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [738]}
2022-05-12 09:27:00,224 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,295 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：738的记录
2022-05-12 09:27:00,359 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,360 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,360 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,369 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/default_get
2022-05-12 09:27:00,370 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 09:27:00,370 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,370 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 09:27:00,401 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/name_get
2022-05-12 09:27:00,401 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 906}
2022-05-12 09:27:00,402 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,418 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/create
2022-05-12 09:27:00,419 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 906}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 09:27:00,419 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,419 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：739
2022-05-12 09:27:00,462 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,463 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,463 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,472 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第27个接口: http://192.168.1.61/api/default_get
2022-05-12 09:27:00,473 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 09:27:00,473 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,474 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 09:27:00,495 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/name_get
2022-05-12 09:27:00,495 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 906}
2022-05-12 09:27:00,496 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,509 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第28个接口: http://192.168.1.61/api/create
2022-05-12 09:27:00,509 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 906}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 09:27:00,509 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,510 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：740
2022-05-12 09:27:00,527 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第29个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:00,527 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [739, 740]}
2022-05-12 09:27:00,528 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,528 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：739, 740的记录
2022-05-12 09:27:00,542 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:00,542 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [906]}
2022-05-12 09:27:00,542 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,543 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：906的记录
2022-05-12 09:27:00,563 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:00,563 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1087]}
2022-05-12 09:27:00,563 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,564 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1087的记录
2022-05-12 09:27:00,616 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,617 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,617 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,634 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 09:27:00,635 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 09:27:00,635 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,635 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 09:27:00,670 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 09:27:00,670 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 09:27:00,670 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,671 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：708
2022-05-12 09:27:00,722 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,723 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,723 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,741 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 09:27:00,742 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 708}
2022-05-12 09:27:00,742 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,743 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：708的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 708, 'cardNo': '1568975633213', 'status': 0}
2022-05-12 09:27:00,757 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 09:27:00,758 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 708}
2022-05-12 09:27:00,758 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,759 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：708的记录已成功
2022-05-12 09:27:00,806 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,806 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,807 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,824 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 09:27:00,824 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-12 09:27:00,824 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,824 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-12 09:27:00,870 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,870 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,870 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,884 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 09:27:00,884 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-12 09:27:00,885 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,885 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 09:27:00,931 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:00,931 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:00,932 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,945 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/search_read
2022-05-12 09:27:00,945 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-12 09:27:00,946 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:00,946 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 09:27:01,002 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:01,003 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:01,003 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,020 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/search_read
2022-05-12 09:27:01,021 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-12 09:27:01,021 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,022 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-12 09:27:01,068 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:01,069 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:01,069 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,110 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/read_group
2022-05-12 09:27:01,110 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-12 09:27:01,111 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,111 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 17}
2022-05-12 09:27:01,173 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:01,173 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:01,174 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,185 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/read_group
2022-05-12 09:27:01,185 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-12 09:27:01,185 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,186 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-12 09:27:01,197 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:01,197 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [708]}
2022-05-12 09:27:01,197 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,198 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：708的记录
2022-05-12 09:27:01,252 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:01,253 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:01,253 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,261 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/default_get
2022-05-12 09:27:01,262 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 09:27:01,262 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,262 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 09:27:01,274 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/create
2022-05-12 09:27:01,275 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 09:27:01,275 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,276 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：709
2022-05-12 09:27:01,316 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/load_views
2022-05-12 09:27:01,317 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 09:27:01,319 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,332 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/default_get
2022-05-12 09:27:01,332 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 09:27:01,333 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,333 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 09:27:01,345 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/create
2022-05-12 09:27:01,345 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-12 09:27:01,345 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,345 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：710
2022-05-12 09:27:01,362 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第27个接口: http://192.168.1.61/api/unlink
2022-05-12 09:27:01,362 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [709, 710]}
2022-05-12 09:27:01,362 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 09:27:01,363 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：709, 710的记录
2022-05-12 10:06:18,278 INFO [root] [key.py (login:115] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/validate/image?t=0.029693380014191195
2022-05-12 10:06:18,278 INFO [root] [key.py (login:116] - 接口返回的响应头中的status_code是： 200
2022-05-12 10:06:18,494 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/login
2022-05-12 10:06:18,495 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "FWXE"}
2022-05-12 10:06:18,495 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,495 INFO [root] [key.py (login:125] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"46bc5fe3c8ef4fd89145e859ac00f744"}
2022-05-12 10:06:18,687 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:18,688 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:06:18,690 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,767 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 10:06:18,769 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:06:18,770 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,771 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1088
2022-05-12 10:06:18,843 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:18,843 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:18,844 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,880 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 10:06:18,881 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1088}
2022-05-12 10:06:18,882 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,883 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：1088的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1088, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-12 10:06:18,902 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:18,903 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1088, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 10:06:18,904 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,945 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/write
2022-05-12 10:06:18,946 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1088}
2022-05-12 10:06:18,947 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:18,948 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：1088的记录已成功
2022-05-12 10:06:19,037 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,037 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,038 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,092 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:19,093 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-12 10:06:19,094 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,095 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-12 10:06:19,128 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:19,129 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1088]}
2022-05-12 10:06:19,129 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,130 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1088的记录
2022-05-12 10:06:19,141 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:19,141 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1088, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:06:19,141 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,157 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,157 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:06:19,158 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,158 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1089
2022-05-12 10:06:19,169 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:19,170 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1089, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 10:06:19,170 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,201 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,202 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-12 10:06:19,202 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,202 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1090
2022-05-12 10:06:19,225 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:19,225 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1089, 1090]}
2022-05-12 10:06:19,225 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,226 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：1089, 1090的记录
2022-05-12 10:06:19,258 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:19,258 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:06:19,259 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,273 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,273 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:06:19,274 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,274 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1091
2022-05-12 10:06:19,309 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,309 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,310 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,340 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:19,340 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:06:19,340 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,340 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:06:19,365 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:19,365 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1091}
2022-05-12 10:06:19,366 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,416 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,417 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1091}, "name": "\u6c49EV"}}
2022-05-12 10:06:19,419 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,420 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：907
2022-05-12 10:06:19,473 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,475 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,478 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,498 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 10:06:19,499 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 907}
2022-05-12 10:06:19,500 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,502 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：907的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1091}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 907, 'nationalStandard': 255}
2022-05-12 10:06:19,519 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 10:06:19,520 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 907}
2022-05-12 10:06:19,520 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,521 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：907的记录已成功
2022-05-12 10:06:19,560 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,561 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,562 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,577 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:19,578 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-12 10:06:19,578 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,579 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-12 10:06:19,633 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,633 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,635 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,663 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:19,664 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-12 10:06:19,665 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,666 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-12 10:06:19,721 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,722 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,722 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,789 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/read_group
2022-05-12 10:06:19,789 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-12 10:06:19,790 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,790 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1091]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1091}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-12 10:06:19,808 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:19,809 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [907]}
2022-05-12 10:06:19,809 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,809 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：907的记录
2022-05-12 10:06:19,875 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,876 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,876 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,887 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:19,887 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:06:19,887 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,888 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:06:19,901 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:19,902 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1091}
2022-05-12 10:06:19,902 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,915 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,916 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1091}, "name": "\u6c49EV"}}
2022-05-12 10:06:19,916 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,917 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：908
2022-05-12 10:06:19,949 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:19,949 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:19,950 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,960 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:19,960 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:06:19,961 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,962 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:06:19,972 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:19,973 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1091}
2022-05-12 10:06:19,973 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,993 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/create
2022-05-12 10:06:19,994 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1091}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-12 10:06:19,994 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:19,995 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：909
2022-05-12 10:06:20,009 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:20,009 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [908, 909]}
2022-05-12 10:06:20,010 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,011 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：908, 909的记录
2022-05-12 10:06:20,029 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:20,029 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1091]}
2022-05-12 10:06:20,030 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,031 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1091的记录
2022-05-12 10:06:20,047 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/onchange
2022-05-12 10:06:20,047 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1091, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:06:20,047 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,070 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/create
2022-05-12 10:06:20,071 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:06:20,072 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,072 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1092
2022-05-12 10:06:20,129 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,129 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,130 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,142 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:20,143 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:06:20,143 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,144 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:06:20,162 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:20,162 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1092}
2022-05-12 10:06:20,163 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,182 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 10:06:20,183 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1092}, "name": "\u6c49EV"}}
2022-05-12 10:06:20,183 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,184 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：910
2022-05-12 10:06:20,219 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,220 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,220 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,238 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:20,239 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:06:20,239 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,240 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:06:20,259 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:20,259 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 910}
2022-05-12 10:06:20,260 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,414 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 10:06:20,415 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 910}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:06:20,417 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,417 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：741
2022-05-12 10:06:20,477 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,478 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,479 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,504 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 10:06:20,505 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 741}
2022-05-12 10:06:20,506 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,507 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：741的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 910}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 741}
2022-05-12 10:06:20,529 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 10:06:20,530 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 741}
2022-05-12 10:06:20,531 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,531 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：741的记录已成功
2022-05-12 10:06:20,596 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,597 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,598 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,630 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:20,631 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-12 10:06:20,633 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,634 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 10:06:20,696 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,697 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,699 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,720 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:20,721 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-12 10:06:20,721 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,722 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 10:06:20,775 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,776 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,777 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,804 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:20,805 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-12 10:06:20,806 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,806 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-12 10:06:20,868 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,869 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,869 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,888 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:20,888 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-12 10:06:20,889 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,889 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-12 10:06:20,953 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:20,954 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:20,954 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,975 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:20,975 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-12 10:06:20,976 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:20,977 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-12 10:06:21,043 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:21,044 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:21,046 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,122 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/read_group
2022-05-12 10:06:21,122 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-12 10:06:21,123 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,134 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-12 10:06:21,196 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:21,197 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:21,197 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,281 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/read_group
2022-05-12 10:06:21,282 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-12 10:06:21,283 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,285 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 910]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 910}, '_total': 1}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 24}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 7}], 'length': 20}
2022-05-12 10:06:21,307 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:21,308 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [741]}
2022-05-12 10:06:21,308 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,309 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：741的记录
2022-05-12 10:06:21,369 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:21,370 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:21,370 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,382 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:21,383 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:06:21,383 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,383 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:06:21,398 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:21,398 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 910}
2022-05-12 10:06:21,399 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,423 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/create
2022-05-12 10:06:21,424 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 910}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:06:21,424 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,425 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：742
2022-05-12 10:06:21,490 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:21,492 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:21,494 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,529 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第27个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:21,530 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:06:21,530 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,531 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:06:21,553 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/name_get
2022-05-12 10:06:21,553 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 910}
2022-05-12 10:06:21,554 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,574 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第28个接口: http://192.168.1.61/api/create
2022-05-12 10:06:21,575 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 910}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:06:21,575 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,575 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：743
2022-05-12 10:06:21,618 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第29个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:21,618 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [742, 743]}
2022-05-12 10:06:21,618 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,619 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：742, 743的记录
2022-05-12 10:06:21,646 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:21,646 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [910]}
2022-05-12 10:06:21,647 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,647 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：910的记录
2022-05-12 10:06:21,658 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:21,658 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1092]}
2022-05-12 10:06:21,658 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,659 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1092的记录
2022-05-12 10:06:21,713 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:21,714 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:21,714 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,755 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:21,756 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:06:21,756 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,757 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:06:21,874 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/create
2022-05-12 10:06:21,875 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 10:06:21,875 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:21,876 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：711
2022-05-12 10:06:22,033 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,035 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,037 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,102 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/read
2022-05-12 10:06:22,102 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 711}
2022-05-12 10:06:22,105 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,106 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：711的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 711, 'cardNo': '1568975633213', 'status': 0}
2022-05-12 10:06:22,157 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 10:06:22,158 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 711}
2022-05-12 10:06:22,158 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,158 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：711的记录已成功
2022-05-12 10:06:22,205 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,206 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,206 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,220 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:22,221 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-12 10:06:22,221 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,221 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-12 10:06:22,258 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,259 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,260 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,274 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:22,275 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-12 10:06:22,275 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,276 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 10:06:22,313 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,314 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,315 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,335 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:22,336 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-12 10:06:22,337 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,337 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 10:06:22,394 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,395 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,396 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,410 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/search_read
2022-05-12 10:06:22,410 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-12 10:06:22,411 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,412 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-12 10:06:22,467 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,467 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,468 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,513 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/read_group
2022-05-12 10:06:22,514 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-12 10:06:22,514 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,515 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 17}
2022-05-12 10:06:22,552 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,553 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,554 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,568 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/read_group
2022-05-12 10:06:22,569 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-12 10:06:22,570 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,570 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-12 10:06:22,585 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:22,586 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [711]}
2022-05-12 10:06:22,586 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,587 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：711的记录
2022-05-12 10:06:22,623 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,624 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,624 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,636 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:22,637 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:06:22,637 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,638 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:06:22,650 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/create
2022-05-12 10:06:22,651 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 10:06:22,651 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,652 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：712
2022-05-12 10:06:22,686 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/load_views
2022-05-12 10:06:22,686 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:06:22,687 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,696 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/default_get
2022-05-12 10:06:22,696 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:06:22,696 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,697 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:06:22,710 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/create
2022-05-12 10:06:22,710 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-12 10:06:22,710 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,711 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：713
2022-05-12 10:06:22,722 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第27个接口: http://192.168.1.61/api/unlink
2022-05-12 10:06:22,722 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [712, 713]}
2022-05-12 10:06:22,722 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:06:22,722 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：712, 713的记录
2022-05-12 10:32:38,539 INFO [root] [key.py (login:115] - 正在测试前置获取登录验证码接口: http://192.168.1.61/api/validate/image?t=0.029693380014191195
2022-05-12 10:32:38,540 INFO [root] [key.py (login:116] - 接口返回的响应头中的status_code是： 200
2022-05-12 10:32:38,586 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/login
2022-05-12 10:32:38,586 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HW8F"}
2022-05-12 10:32:38,587 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,587 INFO [root] [key.py (login:125] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"eb715ddffd8c4a0d97a35c112021949e"}
2022-05-12 10:32:38,712 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:38,713 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:32:38,714 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,768 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:32:38,769 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:32:38,770 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,770 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1093
2022-05-12 10:32:38,828 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:38,829 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:38,831 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,866 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/read
2022-05-12 10:32:38,867 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1093}
2022-05-12 10:32:38,868 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,869 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：1093的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1093, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-12 10:32:38,890 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:38,891 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1093, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 10:32:38,892 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,916 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/write
2022-05-12 10:32:38,917 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1093}
2022-05-12 10:32:38,918 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:38,919 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：1093的记录已成功
2022-05-12 10:32:38,980 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:38,981 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:38,983 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,002 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:39,003 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-12 10:32:39,004 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,005 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-12 10:32:39,053 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:39,054 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1093]}
2022-05-12 10:32:39,055 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,056 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1093的记录
2022-05-12 10:32:39,072 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:39,073 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1093, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:32:39,074 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,102 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,103 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:32:39,104 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,105 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1094
2022-05-12 10:32:39,119 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:39,120 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1094, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-12 10:32:39,121 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,145 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,146 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-12 10:32:39,147 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,148 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1095
2022-05-12 10:32:39,166 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:39,166 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1094, 1095]}
2022-05-12 10:32:39,167 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,168 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：1094, 1095的记录
2022-05-12 10:32:39,197 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:39,197 INFO [root] [key.py (post:22] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:32:39,198 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,212 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,213 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:32:39,213 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,213 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1096
2022-05-12 10:32:39,261 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,261 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,262 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,277 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:39,277 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:32:39,277 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,278 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:32:39,290 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:39,291 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1096}
2022-05-12 10:32:39,291 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,324 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,326 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1096}, "name": "\u6c49EV"}}
2022-05-12 10:32:39,327 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,329 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：911
2022-05-12 10:32:39,375 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,376 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,376 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,388 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/read
2022-05-12 10:32:39,389 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 911}
2022-05-12 10:32:39,389 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,390 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：911的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1096}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 911, 'nationalStandard': 255}
2022-05-12 10:32:39,404 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/write
2022-05-12 10:32:39,405 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 911}
2022-05-12 10:32:39,405 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,405 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：911的记录已成功
2022-05-12 10:32:39,467 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,469 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,471 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,493 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:39,493 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-12 10:32:39,494 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,495 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-12 10:32:39,551 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,552 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,553 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,576 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:39,577 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-12 10:32:39,577 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,577 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-12 10:32:39,653 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,654 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,654 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,723 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/read_group
2022-05-12 10:32:39,724 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-12 10:32:39,725 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,726 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1096]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1096}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-12 10:32:39,745 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:39,745 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [911]}
2022-05-12 10:32:39,746 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,746 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：911的记录
2022-05-12 10:32:39,795 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,796 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,797 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,805 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:39,805 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:32:39,805 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,806 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:32:39,815 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:39,815 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1096}
2022-05-12 10:32:39,816 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,828 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,828 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1096}, "name": "\u6c49EV"}}
2022-05-12 10:32:39,829 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,829 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：912
2022-05-12 10:32:39,912 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:39,914 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:39,915 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,933 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:39,934 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:32:39,935 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,936 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:32:39,952 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:39,953 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1096}
2022-05-12 10:32:39,955 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,973 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/create
2022-05-12 10:32:39,974 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1096}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-12 10:32:39,975 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,976 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：913
2022-05-12 10:32:39,989 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:39,990 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [912, 913]}
2022-05-12 10:32:39,991 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:39,992 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：912, 913的记录
2022-05-12 10:32:40,003 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:40,004 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1096]}
2022-05-12 10:32:40,005 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,005 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1096的记录
2022-05-12 10:32:40,023 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/onchange
2022-05-12 10:32:40,024 INFO [root] [key.py (post:22] - 传的参数是：{"id": 1096, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-12 10:32:40,024 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,041 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/create
2022-05-12 10:32:40,041 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-12 10:32:40,042 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,042 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：1097
2022-05-12 10:32:40,098 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,098 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,099 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,111 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:40,112 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-12 10:32:40,112 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,113 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-12 10:32:40,126 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:40,126 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 1097}
2022-05-12 10:32:40,127 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,145 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:32:40,146 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1097}, "name": "\u6c49EV"}}
2022-05-12 10:32:40,146 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,147 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：914
2022-05-12 10:32:40,202 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,204 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,205 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,230 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:40,231 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:32:40,232 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,233 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:32:40,251 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:40,252 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 914}
2022-05-12 10:32:40,254 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,413 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:32:40,414 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 914}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:32:40,414 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,414 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：744
2022-05-12 10:32:40,463 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,463 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,464 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,477 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/read
2022-05-12 10:32:40,478 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 744}
2022-05-12 10:32:40,478 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,479 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：744的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 914}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 744}
2022-05-12 10:32:40,491 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/write
2022-05-12 10:32:40,491 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 744}
2022-05-12 10:32:40,492 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,492 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：744的记录已成功
2022-05-12 10:32:40,532 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,533 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,534 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,552 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:40,552 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-12 10:32:40,553 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,553 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 10:32:40,595 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,596 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,596 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,609 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:40,610 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-12 10:32:40,610 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,611 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-12 10:32:40,654 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,655 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,656 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,678 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:40,679 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-12 10:32:40,680 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,681 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-12 10:32:40,724 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,725 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,727 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,747 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:40,748 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-12 10:32:40,749 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,750 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-12 10:32:40,791 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,793 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,794 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,810 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:40,811 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-12 10:32:40,812 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,813 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-12 10:32:40,849 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,849 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,851 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,911 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/read_group
2022-05-12 10:32:40,912 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-12 10:32:40,914 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:40,916 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-12 10:32:40,962 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:40,963 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:40,965 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,039 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/read_group
2022-05-12 10:32:41,040 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-12 10:32:41,041 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,042 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 914]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 914}, '_total': 1}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 24}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 7}], 'length': 20}
2022-05-12 10:32:41,063 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:41,064 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [744]}
2022-05-12 10:32:41,065 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,066 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：744的记录
2022-05-12 10:32:41,122 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,123 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,124 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,137 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:41,138 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:32:41,138 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,138 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:32:41,149 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:41,151 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 914}
2022-05-12 10:32:41,152 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,171 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/create
2022-05-12 10:32:41,173 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 914}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:32:41,174 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,176 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：745
2022-05-12 10:32:41,215 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,217 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,219 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,233 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:41,234 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-12 10:32:41,235 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,235 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-12 10:32:41,248 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/name_get
2022-05-12 10:32:41,249 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 914}
2022-05-12 10:32:41,250 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,268 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第27个接口: http://192.168.1.61/api/create
2022-05-12 10:32:41,269 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 914}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-12 10:32:41,270 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,270 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：746
2022-05-12 10:32:41,280 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第28个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:41,281 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [745, 746]}
2022-05-12 10:32:41,281 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,282 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：745, 746的记录
2022-05-12 10:32:41,296 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:41,297 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [914]}
2022-05-12 10:32:41,298 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,298 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：914的记录
2022-05-12 10:32:41,314 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:41,315 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [1097]}
2022-05-12 10:32:41,315 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,316 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：1097的记录
2022-05-12 10:32:41,375 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第1个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,376 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,376 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,398 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第2个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:41,399 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:32:41,399 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,399 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:32:41,430 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第3个接口: http://192.168.1.61/api/create
2022-05-12 10:32:41,431 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 10:32:41,431 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,431 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：714
2022-05-12 10:32:41,477 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第4个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,478 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,478 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,494 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第5个接口: http://192.168.1.61/api/read
2022-05-12 10:32:41,494 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 714}
2022-05-12 10:32:41,495 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,495 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：714的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 714, 'cardNo': '1568975633213', 'status': 0}
2022-05-12 10:32:41,511 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第6个接口: http://192.168.1.61/api/write
2022-05-12 10:32:41,511 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 714}
2022-05-12 10:32:41,512 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,512 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：714的记录已成功
2022-05-12 10:32:41,565 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第7个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,566 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,567 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,581 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第8个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:41,582 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-12 10:32:41,582 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,583 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-12 10:32:41,637 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第9个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,639 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,641 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,662 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第10个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:41,663 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-12 10:32:41,664 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,665 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 10:32:41,719 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第11个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,719 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,720 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,739 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第12个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:41,740 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-12 10:32:41,742 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,743 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-12 10:32:41,804 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第13个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,805 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,807 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,828 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第14个接口: http://192.168.1.61/api/search_read
2022-05-12 10:32:41,829 INFO [root] [key.py (post:22] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-12 10:32:41,830 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,831 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-12 10:32:41,896 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第15个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:41,897 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:41,899 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,957 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第16个接口: http://192.168.1.61/api/read_group
2022-05-12 10:32:41,958 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-12 10:32:41,958 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:41,959 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 17}
2022-05-12 10:32:42,006 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第17个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:42,007 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:42,007 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,029 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第18个接口: http://192.168.1.61/api/read_group
2022-05-12 10:32:42,030 INFO [root] [key.py (post:22] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-12 10:32:42,030 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,031 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-12 10:32:42,045 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第19个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:42,046 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [714]}
2022-05-12 10:32:42,046 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,047 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：714的记录
2022-05-12 10:32:42,098 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第20个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:42,099 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:42,100 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,115 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第21个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:42,116 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:32:42,117 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,118 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:32:42,136 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第22个接口: http://192.168.1.61/api/create
2022-05-12 10:32:42,137 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-12 10:32:42,138 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,138 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：715
2022-05-12 10:32:42,290 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第23个接口: http://192.168.1.61/api/load_views
2022-05-12 10:32:42,292 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-12 10:32:42,294 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,303 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第24个接口: http://192.168.1.61/api/default_get
2022-05-12 10:32:42,303 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-12 10:32:42,303 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,303 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-12 10:32:42,331 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第25个接口: http://192.168.1.61/api/create
2022-05-12 10:32:42,332 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-12 10:32:42,332 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,332 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：716
2022-05-12 10:32:42,358 INFO [root] [key.py (post:21] - 正在测试本组合用例中的第26个接口: http://192.168.1.61/api/unlink
2022-05-12 10:32:42,359 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_card", "ids": [715, 716]}
2022-05-12 10:32:42,359 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-05-12 10:32:42,360 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：715, 716的记录
