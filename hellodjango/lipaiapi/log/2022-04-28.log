2022-04-28 08:55:08,583 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 08:55:08,584 INFO [root] [key.py (post:17] - 传的参数是：{'model': 'base_view', 'resModel': <module 'model.customer_car_model' from 'C:\\Users\\chen\\PycharmProjects\\lipaiapi\\model\\customer_car_model.py'>, 'kwargs': {'context': {'lang': 'zh_CN'}, 'views': [[False, 'tree'], [False, 'form'], [False, 'search']]}}
2022-04-28 08:55:08,584 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 401
2022-04-28 08:55:08,584 INFO [root] [key.py (post:19] - 内容为：
2022-04-28 08:55:08,585 ERROR [root] [key.py (post:24] - 出现异常，code:401不等于200
2022-04-28 08:55:50,095 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 08:55:50,095 INFO [root] [key.py (post:17] - 传的参数是：{'model': 'base_view', 'resModel': <module 'model.customer_car_model' from 'C:\\Users\\chen\\PycharmProjects\\lipaiapi\\model\\customer_car_model.py'>, 'kwargs': {'context': {'lang': 'zh_CN'}, 'views': [[False, 'tree'], [False, 'form'], [False, 'search']]}}
2022-04-28 08:55:50,096 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 500
2022-04-28 08:58:47,299 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 08:58:47,299 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 08:58:47,300 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 08:58:47,309 INFO [root] [key.py (post:19] - 内容为：{'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:04:47,452 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:04:47,452 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:04:47,453 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:04:47,453 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:07:27,554 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:07:27,554 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:07:27,554 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:07:27,555 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:08:20,738 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:08:20,738 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:08:20,739 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:08:20,739 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:09:48,208 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:09:48,209 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 09:09:48,209 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,209 INFO [root] [key.py (post:19] - 内容为：78
2022-04-28 09:09:48,209 INFO [root] [key.py (create:30] - 创建模型：customer_car_brand新记录，id为：78
2022-04-28 09:09:48,246 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:09:48,246 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:09:48,247 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,247 INFO [root] [key.py (post:19] - 内容为：{'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:09:48,260 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:09:48,260 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 09:09:48,260 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,261 INFO [root] [key.py (post:19] - 内容为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:09:48,261 INFO [root] [key.py (default_get:69] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:09:48,276 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:09:48,276 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "id": 78}
2022-04-28 09:09:48,277 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,277 INFO [root] [key.py (post:19] - 内容为：{'displayName': '比亚迪', 'name': '比亚迪', 'id': 78}
2022-04-28 09:09:48,301 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:09:48,301 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 78}, "name": "\u6c49EV"}}
2022-04-28 09:09:48,302 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,302 INFO [root] [key.py (post:19] - 内容为：109
2022-04-28 09:09:48,302 INFO [root] [key.py (create:30] - 创建模型：customer_car_model新记录，id为：109
2022-04-28 09:09:48,333 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:09:48,333 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:09:48,333 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:09:48,334 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:12:09,423 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:12:09,424 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 09:12:09,424 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,424 INFO [root] [key.py (post:19] - 内容为：79
2022-04-28 09:12:09,424 INFO [root] [key.py (create:30] - 创建模型：customer_car_brand新记录，id为：79
2022-04-28 09:12:09,471 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:12:09,471 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:12:09,471 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,472 INFO [root] [key.py (post:19] - 内容为：{'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:12:09,488 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:12:09,488 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 09:12:09,488 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,488 INFO [root] [key.py (post:19] - 内容为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:12:09,489 INFO [root] [key.py (default_get:69] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:12:09,499 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:12:09,499 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "id": 79}
2022-04-28 09:12:09,500 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,500 INFO [root] [key.py (post:19] - 内容为：{'displayName': '比亚迪', 'name': '比亚迪', 'id': 79}
2022-04-28 09:12:09,513 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:12:09,514 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 79}, "name": "\u6c49EV"}}
2022-04-28 09:12:09,514 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,514 INFO [root] [key.py (post:19] - 内容为：110
2022-04-28 09:12:09,514 INFO [root] [key.py (create:30] - 创建模型：customer_car_model新记录，id为：110
2022-04-28 09:12:09,560 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:12:09,561 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:12:09,561 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,561 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:12:09,579 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:12:09,580 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 09:12:09,580 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,580 INFO [root] [key.py (post:19] - 内容为：{'carModelBms': 0}
2022-04-28 09:12:09,580 INFO [root] [key.py (default_get:69] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 09:12:09,588 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:12:09,588 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "id": 110}
2022-04-28 09:12:09,589 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,589 INFO [root] [key.py (post:19] - 内容为：{'displayName': '汉EV', 'name': '汉EV', 'id': 110}
2022-04-28 09:12:09,744 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:12:09,744 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 110}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 09:12:09,744 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:12:09,744 INFO [root] [key.py (post:19] - 内容为：88
2022-04-28 09:12:09,744 INFO [root] [key.py (create:30] - 创建模型：customer_car新记录，id为：88
2022-04-28 09:12:09,761 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:12:09,761 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "ids": [110]}
2022-04-28 09:12:09,762 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 40001
2022-04-28 09:12:09,762 INFO [root] [key.py (post:19] - 内容为：
2022-04-28 09:12:09,762 ERROR [root] [key.py (post:24] - 出现异常，code:40001不等于200
2022-04-28 09:13:08,921 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:08,921 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 09:13:08,921 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:08,922 INFO [root] [key.py (post:19] - 内容为：80
2022-04-28 09:13:08,922 INFO [root] [key.py (create:30] - 创建模型：customer_car_brand新记录，id为：80
2022-04-28 09:13:08,952 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:08,952 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:08,952 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:08,953 INFO [root] [key.py (post:19] - 内容为：{'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:13:08,975 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:08,976 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 09:13:08,976 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:08,976 INFO [root] [key.py (post:19] - 内容为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:13:08,977 INFO [root] [key.py (default_get:69] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:13:08,985 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:08,986 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "id": 80}
2022-04-28 09:13:08,986 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:08,986 INFO [root] [key.py (post:19] - 内容为：{'displayName': '比亚迪', 'name': '比亚迪', 'id': 80}
2022-04-28 09:13:09,005 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:09,006 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 80}, "name": "\u6c49EV"}}
2022-04-28 09:13:09,006 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,006 INFO [root] [key.py (post:19] - 内容为：111
2022-04-28 09:13:09,007 INFO [root] [key.py (create:30] - 创建模型：customer_car_model新记录，id为：111
2022-04-28 09:13:09,041 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:09,042 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:09,042 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,042 INFO [root] [key.py (post:19] - 内容为：{'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-04-28 09:13:09,051 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:09,052 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 09:13:09,052 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,052 INFO [root] [key.py (post:19] - 内容为：{'carModelBms': 0}
2022-04-28 09:13:09,052 INFO [root] [key.py (default_get:69] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 09:13:09,060 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:09,060 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "id": 111}
2022-04-28 09:13:09,060 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,061 INFO [root] [key.py (post:19] - 内容为：{'displayName': '汉EV', 'name': '汉EV', 'id': 111}
2022-04-28 09:13:09,077 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:09,077 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 111}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 09:13:09,077 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,077 INFO [root] [key.py (post:19] - 内容为：89
2022-04-28 09:13:09,078 INFO [root] [key.py (create:30] - 创建模型：customer_car新记录，id为：89
2022-04-28 09:13:09,091 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:09,091 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "ids": [89]}
2022-04-28 09:13:09,091 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,101 INFO [root] [key.py (post:19] - 内容为：True
2022-04-28 09:13:09,101 INFO [root] [key.py (delete:49] - 已删除模型customer_car中id为：89的记录
2022-04-28 09:13:09,137 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:09,137 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "ids": [111]}
2022-04-28 09:13:09,138 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,138 INFO [root] [key.py (post:19] - 内容为：True
2022-04-28 09:13:09,139 INFO [root] [key.py (delete:49] - 已删除模型customer_car_model中id为：111的记录
2022-04-28 09:13:09,154 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:09,155 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "ids": [80]}
2022-04-28 09:13:09,155 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:09,156 INFO [root] [key.py (post:19] - 内容为：True
2022-04-28 09:13:09,156 INFO [root] [key.py (delete:49] - 已删除模型customer_car_brand中id为：80的记录
2022-04-28 09:13:25,106 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:25,106 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 09:13:25,106 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,106 INFO [root] [key.py (create:30] - 创建模型：customer_car_brand新记录，id为：81
2022-04-28 09:13:25,138 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:25,139 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:25,139 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,147 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:25,147 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 09:13:25,148 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,148 INFO [root] [key.py (default_get:69] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:13:25,157 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:25,158 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "id": 81}
2022-04-28 09:13:25,158 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,172 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:25,173 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 81}, "name": "\u6c49EV"}}
2022-04-28 09:13:25,173 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,173 INFO [root] [key.py (create:30] - 创建模型：customer_car_model新记录，id为：112
2022-04-28 09:13:25,204 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:25,204 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:25,204 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,212 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:25,212 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 09:13:25,212 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,213 INFO [root] [key.py (default_get:69] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 09:13:25,227 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:25,227 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "id": 112}
2022-04-28 09:13:25,227 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,238 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:25,239 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 112}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 09:13:25,239 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,239 INFO [root] [key.py (create:30] - 创建模型：customer_car新记录，id为：90
2022-04-28 09:13:25,252 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:25,253 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "ids": [90]}
2022-04-28 09:13:25,253 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,253 INFO [root] [key.py (delete:49] - 已删除模型customer_car中id为：90的记录
2022-04-28 09:13:25,264 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:25,264 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "ids": [112]}
2022-04-28 09:13:25,265 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,265 INFO [root] [key.py (delete:49] - 已删除模型customer_car_model中id为：112的记录
2022-04-28 09:13:25,279 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:25,279 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "ids": [81]}
2022-04-28 09:13:25,279 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:25,279 INFO [root] [key.py (delete:49] - 已删除模型customer_car_brand中id为：81的记录
2022-04-28 09:13:43,711 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:43,712 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 09:13:43,712 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,712 INFO [root] [key.py (create:30] - 创建模型：customer_car_brand新记录，id为：82
2022-04-28 09:13:43,745 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:43,745 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:43,746 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,755 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:43,755 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 09:13:43,755 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,756 INFO [root] [key.py (default_get:69] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 09:13:43,765 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:43,766 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "id": 82}
2022-04-28 09:13:43,766 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,778 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:43,778 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 82}, "name": "\u6c49EV"}}
2022-04-28 09:13:43,779 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,779 INFO [root] [key.py (create:30] - 创建模型：customer_car_model新记录，id为：113
2022-04-28 09:13:43,813 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:43,814 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:43,814 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,821 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 09:13:43,821 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 09:13:43,821 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,822 INFO [root] [key.py (default_get:69] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 09:13:43,830 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 09:13:43,831 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "id": 113}
2022-04-28 09:13:43,831 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,845 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 09:13:43,846 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 113}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 09:13:43,846 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,846 INFO [root] [key.py (create:30] - 创建模型：customer_car新记录，id为：91
2022-04-28 09:13:43,883 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:43,883 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:43,884 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,893 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 09:13:43,893 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 91}
2022-04-28 09:13:43,894 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,894 INFO [root] [key.py (read:36] - 查看模型customer_car中id为：91的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 113}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 91}
2022-04-28 09:13:43,904 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 09:13:43,904 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "map": {"name": "\u6c49EV\u65d7\u8230\u7248-10000KM"}, "id": 91}
2022-04-28 09:13:43,905 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,905 INFO [root] [key.py (edit:43] - 编辑模型customer_car中id为：91的记录已成功
2022-04-28 09:13:43,954 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 09:13:43,955 INFO [root] [key.py (post:17] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 09:13:43,955 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,965 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 09:13:43,965 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 91}
2022-04-28 09:13:43,966 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,966 INFO [root] [key.py (read:36] - 查看模型customer_car中id为：91的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 113}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'name': '汉EV旗舰版-10000KM', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 91}
2022-04-28 09:13:43,976 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:43,976 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car", "ids": [91]}
2022-04-28 09:13:43,977 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,977 INFO [root] [key.py (delete:49] - 已删除模型customer_car中id为：91的记录
2022-04-28 09:13:43,990 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:43,991 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_model", "ids": [113]}
2022-04-28 09:13:43,992 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:43,993 INFO [root] [key.py (delete:49] - 已删除模型customer_car_model中id为：113的记录
2022-04-28 09:13:44,010 INFO [root] [key.py (post:16] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 09:13:44,011 INFO [root] [key.py (post:17] - 传的参数是：{"model": "customer_car_brand", "ids": [82]}
2022-04-28 09:13:44,011 INFO [root] [key.py (post:18] - 接口返回的响应内容中的code是： 200
2022-04-28 09:13:44,012 INFO [root] [key.py (delete:49] - 已删除模型customer_car_brand中id为：82的记录
2022-04-28 11:45:54,503 INFO [root] [key.py (post:22] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 11:45:54,503 INFO [root] [key.py (post:23] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 11:45:54,503 INFO [root] [key.py (post:24] - 接口返回的响应内容中的code是： 401
2022-04-28 11:45:54,503 ERROR [root] [key.py (post:30] - 出现异常，code:401不等于200
2022-04-28 11:47:00,649 INFO [root] [key.py (post:22] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 11:47:00,650 INFO [root] [key.py (post:23] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 11:47:00,650 INFO [root] [key.py (post:24] - 接口返回的响应内容中的code是： 401
2022-04-28 11:47:00,650 ERROR [root] [key.py (post:30] - 出现异常，code:401不等于200
2022-04-28 11:47:47,216 INFO [root] [key.py (post:22] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 11:47:47,216 INFO [root] [key.py (post:23] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "G3VS"}
2022-04-28 11:47:47,216 INFO [root] [key.py (post:24] - 接口返回的响应内容中的code是： 500
2022-04-28 11:47:47,216 ERROR [root] [key.py (post:30] - 出现异常，code:500不等于200
2022-04-28 12:02:28,359 INFO [root] [key.py (post:22] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:02:28,359 INFO [root] [key.py (post:23] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XKUK"}
2022-04-28 12:02:28,359 INFO [root] [key.py (post:24] - 接口返回的响应内容中的code是： 500
2022-04-28 12:02:28,360 ERROR [root] [key.py (post:30] - 出现异常，code:500不等于200
2022-04-28 12:44:12,195 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:44:12,195 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "426F"}
2022-04-28 12:44:12,195 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 12:44:12,195 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 12:44:29,756 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:44:29,756 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HJUW"}
2022-04-28 12:44:29,756 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 12:44:29,756 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 12:45:14,566 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:45:14,566 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "STFA"}
2022-04-28 12:45:14,566 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 12:45:14,566 INFO [root] [key.py (post:26] - 内容为：
2022-04-28 12:45:14,566 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 12:45:40,743 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:45:40,743 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "V7CU"}
2022-04-28 12:45:40,743 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 12:45:40,743 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 12:45:40,743 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 12:48:13,799 INFO [root] [key.py (post:25] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:48:13,800 INFO [root] [key.py (post:26] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6N9R"}
2022-04-28 12:48:13,800 INFO [root] [key.py (post:27] - 接口返回的响应内容中的code是： 709
2022-04-28 12:48:13,800 INFO [root] [key.py (post:28] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 12:48:13,800 ERROR [root] [key.py (post:33] - 出现异常，code:709不等于200
2022-04-28 12:49:00,160 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 12:49:00,160 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RAUN"}
2022-04-28 12:49:00,160 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 12:49:00,160 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 12:49:00,160 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:09:13,183 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:09:13,183 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LCWR"}
2022-04-28 13:09:13,184 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:09:13,184 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:09:13,184 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:09:38,722 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:09:38,722 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "8PHX"}
2022-04-28 13:09:38,722 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:09:38,722 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:09:38,722 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:10:43,570 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:10:43,571 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RGEX"}
2022-04-28 13:10:43,571 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:10:43,571 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:10:43,571 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:29:06,350 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:29:06,350 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6MQL"}
2022-04-28 13:29:06,350 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:29:06,350 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:29:06,350 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:30:09,389 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:30:09,390 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "R63U"}
2022-04-28 13:30:09,390 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:30:09,390 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:30:09,390 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:32:07,022 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:32:07,022 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DYJP"}
2022-04-28 13:32:07,022 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:32:07,022 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:32:07,022 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:33:11,466 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:33:11,466 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SWU6"}
2022-04-28 13:33:11,466 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:33:11,466 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:33:11,467 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:35:12,698 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:35:12,698 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "VP37"}
2022-04-28 13:35:12,698 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:35:12,698 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:35:12,698 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:36:15,449 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:36:15,449 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LU9G"}
2022-04-28 13:36:15,449 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:36:15,449 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:36:15,449 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:37:34,061 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:37:34,061 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NFRC"}
2022-04-28 13:37:34,061 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:37:34,061 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:37:34,061 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:38:13,319 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:38:13,319 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "CN43"}
2022-04-28 13:38:13,319 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:38:13,319 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:38:13,319 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:41:09,410 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:41:09,410 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "AC5M"}
2022-04-28 13:41:09,410 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:41:09,410 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:41:09,410 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:41:52,869 INFO [root] [key.py (post:23] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:41:52,869 INFO [root] [key.py (post:24] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HPPU"}
2022-04-28 13:41:52,869 INFO [root] [key.py (post:25] - 接口返回的响应内容中的code是： 709
2022-04-28 13:41:52,869 INFO [root] [key.py (post:26] - 内容为：{"code":709,"msg":"验证码不存在","data":""}
2022-04-28 13:41:52,870 ERROR [root] [key.py (post:31] - 出现异常，code:709不等于200
2022-04-28 13:44:31,206 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:44:31,206 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RUEE"}
2022-04-28 13:44:31,207 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:44:31,207 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"a23b4e679a124b748b0cd18cb00ce56a"}
2022-04-28 13:45:21,628 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:45:21,629 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "EXNB"}
2022-04-28 13:45:21,629 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:45:21,629 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"bb4dbe3eacc048c4870d8701e924855e"}
2022-04-28 13:45:21,634 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:45:21,634 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:45:21,634 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:45:21,634 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:45:21,634 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 13:46:53,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:46:53,974 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "UR6T"}
2022-04-28 13:46:53,974 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:46:53,974 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"1f87b374961d46c1a6bcfc6c99274867"}
2022-04-28 13:46:53,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:46:53,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:46:53,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:46:53,980 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:46:53,980 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 13:49:10,828 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:49:10,828 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "E7V2"}
2022-04-28 13:49:10,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:49:10,828 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"2f37fe77589b4f3a82bdb8f22c465cae"}
2022-04-28 13:49:10,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:49:10,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:49:10,834 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:49:10,834 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:49:10,834 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 13:50:44,809 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:50:44,809 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DK2P"}
2022-04-28 13:50:44,809 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:50:44,810 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"dd82b4452404476bb0d2acec83c68441"}
2022-04-28 13:50:44,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:50:44,815 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:50:44,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:50:44,815 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:50:44,815 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 13:57:00,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:57:00,232 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2MEC"}
2022-04-28 13:57:00,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:57:00,232 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"b9f8255e99ae41019e1d9b08da5a884b"}
2022-04-28 13:57:00,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:57:00,237 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:57:00,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:57:00,237 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:57:00,237 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 13:59:02,334 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 13:59:02,335 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PG3X"}
2022-04-28 13:59:02,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 13:59:02,335 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"9ff6cb28f83b4c7e84f0e99b65bec99a"}
2022-04-28 13:59:02,341 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 13:59:02,341 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 13:59:02,341 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 13:59:02,341 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 13:59:02,341 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:00:17,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:00:17,835 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NW4C"}
2022-04-28 14:00:17,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:00:17,835 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"1c674d65d6774ca69d7f2b546b009a8f"}
2022-04-28 14:02:44,825 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:02:44,826 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XD29"}
2022-04-28 14:02:44,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:02:44,826 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"1510f93609db4bd481ee06d791d8b1b7"}
2022-04-28 14:02:44,831 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:02:44,831 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:02:44,831 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:02:44,831 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:02:44,831 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:04:38,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:04:38,133 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "H3X3"}
2022-04-28 14:04:38,133 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:04:38,133 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"8f79981338cd4ce182f6e451318d7a48"}
2022-04-28 14:04:38,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:04:38,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:04:38,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:04:38,138 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:04:38,138 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:05:11,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:05:11,036 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "8G8C"}
2022-04-28 14:05:11,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:05:11,036 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"ad0d28c5f601432bb3e7000ab405ce0f"}
2022-04-28 14:05:11,041 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:05:11,041 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:05:11,041 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:05:11,041 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:05:11,041 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:05:39,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:05:39,767 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2CAA"}
2022-04-28 14:05:39,767 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:05:39,767 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"6b6db8e55cd6460799ecaa2d2998b690"}
2022-04-28 14:05:39,771 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:05:39,772 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:05:39,772 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:05:39,772 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:05:39,772 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:07:14,417 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:07:14,418 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RKGS"}
2022-04-28 14:07:14,418 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:07:14,418 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"951c32cad32f459fad8d5c3299fb0b2f"}
2022-04-28 14:07:14,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:07:14,424 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:07:14,424 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:07:14,424 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:07:14,424 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:12:28,740 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:12:28,740 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "667H"}
2022-04-28 14:12:28,740 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:12:28,740 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"5d8f5d0a0fbc4463864d7cfd43e5c5bb"}
2022-04-28 14:12:28,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:12:28,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:12:28,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:12:28,777 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelBms":{"name":"carModelBms","translate":"BMS辅助电源","type":"Selection","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"selection":[[0,"12V"],[1,"24V"]],"views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"name":{"name":"name","translate":"名称","type":"Char","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}}},"fields_views":{"search":{"id":90,"name":"customer_car Search","type":"search","arch":"<search string=\"车辆\">\n                <field name=\"number\" string=\"车牌号\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"customerId\" string=\"客户\"/>\n                <field name=\"carModelId\" string=\"车型\"/>\n                <field name=\"remark\" string=\"自编号\"/>\n                <group string=\"分组按\">\n                    <field name=\"groupby_customerId\" string=\"客户\" context=\"{'group_by': 'customerId'}\"/>\n                    <field name=\"groupby_carModelId\" string=\"车型\" context=\"{'group_by': 'carModelId'}\"/>\n                </group>\n            </search>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":89,"name":"customer_car Form","type":"form","arch":"<form string=\"车辆\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"pictureUrl\" widget=\"photo\" string=\"车辆照片\"/>\n                        </group>\n                        <group>\n                            <field name=\"customerId\"/>\n                            <field name=\"carModelId\"/>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"number\"/>\n                            <field name=\"vin\" string=\"VIN\"/>\n                        </group>\n                        <group>\n                            <!--                            <field name=\"carModelBms\"/>-->\n                            <field name=\"remark\"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":88,"name":"customer_car Tree","type":"tree","arch":"<tree string=\"车辆\">\n                <field name=\"number\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"carModelId\"/>\n                <field name=\"remark\"/>\n                <field name=\"customerId\"/>\n            </tree>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 14:12:28,796 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:12:28,797 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:12:28,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:12:28,797 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelBms":0,"number":"粤B1231A","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤B1231A","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1651043780355.png","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"12312312","vin":"12345678901098765","id":39},{"carModelBms":0,"number":"赣AD2788","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"宝马2","name":"宝马2","id":97},"displayName":"赣AD2788","customerId":{"displayName":"陈建峰","name":"陈建峰","id":11},"remark":"粤J123456","vin":"23456789123456785","id":62},{"carModelBms":0,"number":"吉R13567","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"吉R13567","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"99","vin":"JUERTWESDFGHJNBCF","id":49},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤GF520U","customerId":{"displayName":"zhao_","name":"zhao_","id":40},"remark":"粤GDF999u","vin":"TEST0000000000002","id":40},{"carModelBms":0,"number":"粤A12345","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤A12345","remark":"11111111111111","vin":"12345678912345678","id":86},{"carModelBms":0,"number":"粤A1815U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"风骏3","name":"风骏3","id":85},"displayName":"粤A1815U","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"TEST0000000000001","vin":"TEST0000000000001","id":85},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤GF520U","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650012758061.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤GF520U","vin":"12345678901234567","id":46},{"carModelBms":0,"number":"皖R25679","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"皖R25679","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787735870.png","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"123","vin":"12345678932156788","id":71},{"carModelBms":0,"number":"粤A98764","companyId":{"displayName":"LiPai","name":"LiPai","id":3},"carModelId":{"displayName":"长安new2","name":"长安new2","id":67},"displayName":"粤A98764","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤A98764","vin":"FHJ45672345566745","id":84},{"carModelBms":0,"number":"辽R678UP0","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"辽R678UP0","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"11","vin":"KJHGFDSAWERTYUPNB","id":48},{"carModelBms":0,"number":"吉F36664","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"吉F36664","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650788002599.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"皖H976YD","vin":"LNAACAA21M5484033","id":67},{"carModelBms":0,"number":"粤Q33333","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"蔚来210","name":"蔚来210","id":98},"displayName":"粤Q33333","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787967721.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"123","vin":"55555678901234888","id":50},{"carModelBms":0,"number":"蒙E900000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"蒙E900000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"蒙E900000","vin":"12345678912314563","id":78},{"carModelBms":0,"number":"Audi-Q5e-tron","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"Audi-Q5e-tron","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"云L900000","vin":"45879651234569874","id":79},{"carModelBms":0,"number":"鲁P489000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"鲁P489000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"鲁P489000","vin":"45879632147859632","id":80},{"carModelBms":0,"number":"粤AGN541","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤AGN541","customerId":{"displayName":"zhao_test","name":"zhao_test","id":33},"remark":"粤AGN541","vin":"LNAACAA21M5484082","id":83},{"carModelBms":0,"number":"粤D675422","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤D675422","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"12345678909123456","id":81},{"carModelBms":0,"number":"京BWJYDLL","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"京BWJYDLL","customerId":{"displayName":"Ni","name":"Ni","id":32},"remark":"京BWJYDLL","vin":"12345642","id":76},{"carModelBms":0,"number":"粤D757898","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤D757898","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"525665547886369526","id":55},{"carModelBms":0,"number":"粤ZLGJPKR","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤ZLGJPKR","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"粤K65658","vin":"hgg.！？66","id":5}],"length":31}}
2022-04-28 14:12:28,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:12:28,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:12:28,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:12:28,804 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:12:28,805 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:13:38,749 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:13:38,749 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2B95"}
2022-04-28 14:13:38,749 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:13:38,777 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:13:38,777 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:13:38,777 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:13:38,787 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:13:38,788 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:13:38,788 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:13:38,792 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:13:38,792 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:13:38,792 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 401
2022-04-28 14:13:38,792 ERROR [root] [key.py (post:29] - 出现异常，code:401不等于200
2022-04-28 14:14:43,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:14:43,382 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KU4D"}
2022-04-28 14:14:43,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:14:43,382 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"e56d7842c97145ee8ba6773563626fe5"}
2022-04-28 14:14:43,417 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:14:43,418 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:14:43,418 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:14:43,418 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelBms":{"name":"carModelBms","translate":"BMS辅助电源","type":"Selection","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"selection":[[0,"12V"],[1,"24V"]],"views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"name":{"name":"name","translate":"名称","type":"Char","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}}},"fields_views":{"search":{"id":90,"name":"customer_car Search","type":"search","arch":"<search string=\"车辆\">\n                <field name=\"number\" string=\"车牌号\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"customerId\" string=\"客户\"/>\n                <field name=\"carModelId\" string=\"车型\"/>\n                <field name=\"remark\" string=\"自编号\"/>\n                <group string=\"分组按\">\n                    <field name=\"groupby_customerId\" string=\"客户\" context=\"{'group_by': 'customerId'}\"/>\n                    <field name=\"groupby_carModelId\" string=\"车型\" context=\"{'group_by': 'carModelId'}\"/>\n                </group>\n            </search>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":89,"name":"customer_car Form","type":"form","arch":"<form string=\"车辆\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"pictureUrl\" widget=\"photo\" string=\"车辆照片\"/>\n                        </group>\n                        <group>\n                            <field name=\"customerId\"/>\n                            <field name=\"carModelId\"/>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"number\"/>\n                            <field name=\"vin\" string=\"VIN\"/>\n                        </group>\n                        <group>\n                            <!--                            <field name=\"carModelBms\"/>-->\n                            <field name=\"remark\"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":88,"name":"customer_car Tree","type":"tree","arch":"<tree string=\"车辆\">\n                <field name=\"number\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"carModelId\"/>\n                <field name=\"remark\"/>\n                <field name=\"customerId\"/>\n            </tree>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 14:14:43,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:14:43,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:14:43,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:14:43,434 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelBms":0,"number":"粤B1231A","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤B1231A","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1651043780355.png","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"12312312","vin":"12345678901098765","id":39},{"carModelBms":0,"number":"赣AD2788","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"宝马2","name":"宝马2","id":97},"displayName":"赣AD2788","customerId":{"displayName":"陈建峰","name":"陈建峰","id":11},"remark":"粤J123456","vin":"23456789123456785","id":62},{"carModelBms":0,"number":"吉R13567","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"吉R13567","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"99","vin":"JUERTWESDFGHJNBCF","id":49},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤GF520U","customerId":{"displayName":"zhao_","name":"zhao_","id":40},"remark":"粤GDF999u","vin":"TEST0000000000002","id":40},{"carModelBms":0,"number":"粤A12345","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤A12345","remark":"11111111111111","vin":"12345678912345678","id":86},{"carModelBms":0,"number":"粤A1815U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"风骏3","name":"风骏3","id":85},"displayName":"粤A1815U","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"TEST0000000000001","vin":"TEST0000000000001","id":85},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤GF520U","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650012758061.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤GF520U","vin":"12345678901234567","id":46},{"carModelBms":0,"number":"皖R25679","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"皖R25679","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787735870.png","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"123","vin":"12345678932156788","id":71},{"carModelBms":0,"number":"粤A98764","companyId":{"displayName":"LiPai","name":"LiPai","id":3},"carModelId":{"displayName":"长安new2","name":"长安new2","id":67},"displayName":"粤A98764","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤A98764","vin":"FHJ45672345566745","id":84},{"carModelBms":0,"number":"辽R678UP0","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"辽R678UP0","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"11","vin":"KJHGFDSAWERTYUPNB","id":48},{"carModelBms":0,"number":"吉F36664","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"吉F36664","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650788002599.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"皖H976YD","vin":"LNAACAA21M5484033","id":67},{"carModelBms":0,"number":"粤Q33333","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"蔚来210","name":"蔚来210","id":98},"displayName":"粤Q33333","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787967721.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"123","vin":"55555678901234888","id":50},{"carModelBms":0,"number":"蒙E900000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"蒙E900000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"蒙E900000","vin":"12345678912314563","id":78},{"carModelBms":0,"number":"Audi-Q5e-tron","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"Audi-Q5e-tron","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"云L900000","vin":"45879651234569874","id":79},{"carModelBms":0,"number":"鲁P489000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"鲁P489000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"鲁P489000","vin":"45879632147859632","id":80},{"carModelBms":0,"number":"粤AGN541","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤AGN541","customerId":{"displayName":"zhao_test","name":"zhao_test","id":33},"remark":"粤AGN541","vin":"LNAACAA21M5484082","id":83},{"carModelBms":0,"number":"粤D675422","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤D675422","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"12345678909123456","id":81},{"carModelBms":0,"number":"京BWJYDLL","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"京BWJYDLL","customerId":{"displayName":"Ni","name":"Ni","id":32},"remark":"京BWJYDLL","vin":"12345642","id":76},{"carModelBms":0,"number":"粤D757898","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤D757898","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"525665547886369526","id":55},{"carModelBms":0,"number":"粤ZLGJPKR","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤ZLGJPKR","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"粤K65658","vin":"hgg.！？66","id":5}],"length":31}}
2022-04-28 14:14:43,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:14:43,444 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:14:43,444 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:14:43,444 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:14:43,444 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:15:16,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:15:16,559 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KR3J"}
2022-04-28 14:15:16,559 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:15:16,559 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"6e7d67cb46d84e429050310722ba55df"}
2022-04-28 14:15:16,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:15:16,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:15:16,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:15:16,587 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelBms":{"name":"carModelBms","translate":"BMS辅助电源","type":"Selection","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"selection":[[0,"12V"],[1,"24V"]],"views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"name":{"name":"name","translate":"名称","type":"Char","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}}},"fields_views":{"search":{"id":90,"name":"customer_car Search","type":"search","arch":"<search string=\"车辆\">\n                <field name=\"number\" string=\"车牌号\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"customerId\" string=\"客户\"/>\n                <field name=\"carModelId\" string=\"车型\"/>\n                <field name=\"remark\" string=\"自编号\"/>\n                <group string=\"分组按\">\n                    <field name=\"groupby_customerId\" string=\"客户\" context=\"{'group_by': 'customerId'}\"/>\n                    <field name=\"groupby_carModelId\" string=\"车型\" context=\"{'group_by': 'carModelId'}\"/>\n                </group>\n            </search>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":89,"name":"customer_car Form","type":"form","arch":"<form string=\"车辆\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"pictureUrl\" widget=\"photo\" string=\"车辆照片\"/>\n                        </group>\n                        <group>\n                            <field name=\"customerId\"/>\n                            <field name=\"carModelId\"/>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"number\"/>\n                            <field name=\"vin\" string=\"VIN\"/>\n                        </group>\n                        <group>\n                            <!--                            <field name=\"carModelBms\"/>-->\n                            <field name=\"remark\"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":88,"name":"customer_car Tree","type":"tree","arch":"<tree string=\"车辆\">\n                <field name=\"number\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"carModelId\"/>\n                <field name=\"remark\"/>\n                <field name=\"customerId\"/>\n            </tree>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 14:15:16,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:15:16,603 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:15:16,603 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:15:16,604 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelBms":0,"number":"粤B1231A","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤B1231A","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1651043780355.png","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"12312312","vin":"12345678901098765","id":39},{"carModelBms":0,"number":"赣AD2788","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"宝马2","name":"宝马2","id":97},"displayName":"赣AD2788","customerId":{"displayName":"陈建峰","name":"陈建峰","id":11},"remark":"粤J123456","vin":"23456789123456785","id":62},{"carModelBms":0,"number":"吉R13567","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"吉R13567","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"99","vin":"JUERTWESDFGHJNBCF","id":49},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤GF520U","customerId":{"displayName":"zhao_","name":"zhao_","id":40},"remark":"粤GDF999u","vin":"TEST0000000000002","id":40},{"carModelBms":0,"number":"粤A12345","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤A12345","remark":"11111111111111","vin":"12345678912345678","id":86},{"carModelBms":0,"number":"粤A1815U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"风骏3","name":"风骏3","id":85},"displayName":"粤A1815U","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"TEST0000000000001","vin":"TEST0000000000001","id":85},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤GF520U","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650012758061.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤GF520U","vin":"12345678901234567","id":46},{"carModelBms":0,"number":"皖R25679","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"皖R25679","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787735870.png","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"123","vin":"12345678932156788","id":71},{"carModelBms":0,"number":"粤A98764","companyId":{"displayName":"LiPai","name":"LiPai","id":3},"carModelId":{"displayName":"长安new2","name":"长安new2","id":67},"displayName":"粤A98764","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤A98764","vin":"FHJ45672345566745","id":84},{"carModelBms":0,"number":"辽R678UP0","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"辽R678UP0","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"11","vin":"KJHGFDSAWERTYUPNB","id":48},{"carModelBms":0,"number":"吉F36664","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"吉F36664","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650788002599.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"皖H976YD","vin":"LNAACAA21M5484033","id":67},{"carModelBms":0,"number":"粤Q33333","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"蔚来210","name":"蔚来210","id":98},"displayName":"粤Q33333","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787967721.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"123","vin":"55555678901234888","id":50},{"carModelBms":0,"number":"蒙E900000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"蒙E900000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"蒙E900000","vin":"12345678912314563","id":78},{"carModelBms":0,"number":"Audi-Q5e-tron","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"Audi-Q5e-tron","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"云L900000","vin":"45879651234569874","id":79},{"carModelBms":0,"number":"鲁P489000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"鲁P489000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"鲁P489000","vin":"45879632147859632","id":80},{"carModelBms":0,"number":"粤AGN541","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤AGN541","customerId":{"displayName":"zhao_test","name":"zhao_test","id":33},"remark":"粤AGN541","vin":"LNAACAA21M5484082","id":83},{"carModelBms":0,"number":"粤D675422","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤D675422","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"12345678909123456","id":81},{"carModelBms":0,"number":"京BWJYDLL","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"京BWJYDLL","customerId":{"displayName":"Ni","name":"Ni","id":32},"remark":"京BWJYDLL","vin":"12345642","id":76},{"carModelBms":0,"number":"粤D757898","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤D757898","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"525665547886369526","id":55},{"carModelBms":0,"number":"粤ZLGJPKR","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤ZLGJPKR","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"粤K65658","vin":"hgg.！？66","id":5}],"length":31}}
2022-04-28 14:15:16,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:15:16,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:15:16,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:15:16,612 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:15:16,612 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:17:34,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:17:34,102 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "BY4E"}
2022-04-28 14:17:34,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:17:34,102 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"cfa4e75c20ee494292cb193a98cbf8a8"}
2022-04-28 14:17:34,130 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:17:34,130 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:17:34,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:17:34,131 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelBms":{"name":"carModelBms","translate":"BMS辅助电源","type":"Selection","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"selection":[[0,"12V"],[1,"24V"]],"views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"name":{"name":"name","translate":"名称","type":"Char","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}}},"fields_views":{"search":{"id":90,"name":"customer_car Search","type":"search","arch":"<search string=\"车辆\">\n                <field name=\"number\" string=\"车牌号\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"customerId\" string=\"客户\"/>\n                <field name=\"carModelId\" string=\"车型\"/>\n                <field name=\"remark\" string=\"自编号\"/>\n                <group string=\"分组按\">\n                    <field name=\"groupby_customerId\" string=\"客户\" context=\"{'group_by': 'customerId'}\"/>\n                    <field name=\"groupby_carModelId\" string=\"车型\" context=\"{'group_by': 'carModelId'}\"/>\n                </group>\n            </search>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":89,"name":"customer_car Form","type":"form","arch":"<form string=\"车辆\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"pictureUrl\" widget=\"photo\" string=\"车辆照片\"/>\n                        </group>\n                        <group>\n                            <field name=\"customerId\"/>\n                            <field name=\"carModelId\"/>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"number\"/>\n                            <field name=\"vin\" string=\"VIN\"/>\n                        </group>\n                        <group>\n                            <!--                            <field name=\"carModelBms\"/>-->\n                            <field name=\"remark\"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":88,"name":"customer_car Tree","type":"tree","arch":"<tree string=\"车辆\">\n                <field name=\"number\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"carModelId\"/>\n                <field name=\"remark\"/>\n                <field name=\"customerId\"/>\n            </tree>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 14:17:34,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:17:34,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:17:34,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:17:34,150 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelBms":0,"number":"粤B1231A","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤B1231A","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1651043780355.png","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"12312312","vin":"12345678901098765","id":39},{"carModelBms":0,"number":"赣AD2788","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"宝马2","name":"宝马2","id":97},"displayName":"赣AD2788","customerId":{"displayName":"陈建峰","name":"陈建峰","id":11},"remark":"粤J123456","vin":"23456789123456785","id":62},{"carModelBms":0,"number":"吉R13567","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"吉R13567","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"99","vin":"JUERTWESDFGHJNBCF","id":49},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤GF520U","customerId":{"displayName":"zhao_","name":"zhao_","id":40},"remark":"粤GDF999u","vin":"TEST0000000000002","id":40},{"carModelBms":0,"number":"粤A12345","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤A12345","remark":"11111111111111","vin":"12345678912345678","id":86},{"carModelBms":0,"number":"粤A1815U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"风骏3","name":"风骏3","id":85},"displayName":"粤A1815U","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"TEST0000000000001","vin":"TEST0000000000001","id":85},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤GF520U","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650012758061.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤GF520U","vin":"12345678901234567","id":46},{"carModelBms":0,"number":"皖R25679","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"皖R25679","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787735870.png","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"123","vin":"12345678932156788","id":71},{"carModelBms":0,"number":"粤A98764","companyId":{"displayName":"LiPai","name":"LiPai","id":3},"carModelId":{"displayName":"长安new2","name":"长安new2","id":67},"displayName":"粤A98764","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤A98764","vin":"FHJ45672345566745","id":84},{"carModelBms":0,"number":"辽R678UP0","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"辽R678UP0","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"11","vin":"KJHGFDSAWERTYUPNB","id":48},{"carModelBms":0,"number":"吉F36664","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"吉F36664","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650788002599.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"皖H976YD","vin":"LNAACAA21M5484033","id":67},{"carModelBms":0,"number":"粤Q33333","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"蔚来210","name":"蔚来210","id":98},"displayName":"粤Q33333","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787967721.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"123","vin":"55555678901234888","id":50},{"carModelBms":0,"number":"蒙E900000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"蒙E900000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"蒙E900000","vin":"12345678912314563","id":78},{"carModelBms":0,"number":"Audi-Q5e-tron","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"Audi-Q5e-tron","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"云L900000","vin":"45879651234569874","id":79},{"carModelBms":0,"number":"鲁P489000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"鲁P489000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"鲁P489000","vin":"45879632147859632","id":80},{"carModelBms":0,"number":"粤AGN541","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤AGN541","customerId":{"displayName":"zhao_test","name":"zhao_test","id":33},"remark":"粤AGN541","vin":"LNAACAA21M5484082","id":83},{"carModelBms":0,"number":"粤D675422","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤D675422","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"12345678909123456","id":81},{"carModelBms":0,"number":"京BWJYDLL","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"京BWJYDLL","customerId":{"displayName":"Ni","name":"Ni","id":32},"remark":"京BWJYDLL","vin":"12345642","id":76},{"carModelBms":0,"number":"粤D757898","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤D757898","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"525665547886369526","id":55},{"carModelBms":0,"number":"粤ZLGJPKR","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤ZLGJPKR","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"粤K65658","vin":"hgg.！？66","id":5}],"length":31}}
2022-04-28 14:17:34,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:17:34,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:17:34,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:17:34,157 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:17:34,157 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:18:28,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:18:28,624 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2A5W"}
2022-04-28 14:18:28,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:18:28,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:18:28,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:18:28,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:18:28,670 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:18:28,670 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:18:28,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:18:28,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:18:28,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:18:28,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:18:28,676 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:24:51,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:24:51,715 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "GP25"}
2022-04-28 14:24:51,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:24:51,715 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"4f40338bf06f40f7af8665fb3cd1e67c"}
2022-04-28 14:24:51,745 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:24:51,746 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:24:51,746 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:24:51,746 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelBms":{"name":"carModelBms","translate":"BMS辅助电源","type":"Selection","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"selection":[[0,"12V"],[1,"24V"]],"views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"name":{"name":"name","translate":"名称","type":"Char","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}}},"fields_views":{"search":{"id":90,"name":"customer_car Search","type":"search","arch":"<search string=\"车辆\">\n                <field name=\"number\" string=\"车牌号\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"customerId\" string=\"客户\"/>\n                <field name=\"carModelId\" string=\"车型\"/>\n                <field name=\"remark\" string=\"自编号\"/>\n                <group string=\"分组按\">\n                    <field name=\"groupby_customerId\" string=\"客户\" context=\"{'group_by': 'customerId'}\"/>\n                    <field name=\"groupby_carModelId\" string=\"车型\" context=\"{'group_by': 'carModelId'}\"/>\n                </group>\n            </search>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":89,"name":"customer_car Form","type":"form","arch":"<form string=\"车辆\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"pictureUrl\" widget=\"photo\" string=\"车辆照片\"/>\n                        </group>\n                        <group>\n                            <field name=\"customerId\"/>\n                            <field name=\"carModelId\"/>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"number\"/>\n                            <field name=\"vin\" string=\"VIN\"/>\n                        </group>\n                        <group>\n                            <!--                            <field name=\"carModelBms\"/>-->\n                            <field name=\"remark\"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"公司不能为空\"}","views":{},"relation":"res_company"},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"pictureUrl":{"name":"pictureUrl","translate":"车辆图片","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":88,"name":"customer_car Tree","type":"tree","arch":"<tree string=\"车辆\">\n                <field name=\"number\"/>\n                <field name=\"vin\" string=\"VIN\"/>\n                <field name=\"carModelId\"/>\n                <field name=\"remark\"/>\n                <field name=\"customerId\"/>\n            </tree>","fields":{"number":{"name":"number","translate":"车牌号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$\",\"type\":\"Pattern\",\"message\":\"车牌号不符合规范\"}","views":{}},"carModelId":{"name":"carModelId","translate":"车型","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_car_model"},"customerId":{"name":"customerId","translate":"客户","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"customer_info"},"remark":{"name":"remark","translate":"自编号","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"自编号不能为空\"}","views":{}},"vin":{"name":"vin","translate":"车架号(VIN)","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^[A-HJ-NPR-Z\\\\d]{17}$\",\"type\":\"Pattern\",\"message\":\"车架号(VIN)不符合规范\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 14:24:51,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:24:51,758 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:24:51,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:24:51,758 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelBms":0,"number":"粤B1231A","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤B1231A","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1651043780355.png","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"12312312","vin":"12345678901098765","id":39},{"carModelBms":0,"number":"赣AD2788","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"宝马2","name":"宝马2","id":97},"displayName":"赣AD2788","customerId":{"displayName":"陈建峰","name":"陈建峰","id":11},"remark":"粤J123456","vin":"23456789123456785","id":62},{"carModelBms":0,"number":"吉R13567","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"吉R13567","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"99","vin":"JUERTWESDFGHJNBCF","id":49},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤GF520U","customerId":{"displayName":"zhao_","name":"zhao_","id":40},"remark":"粤GDF999u","vin":"TEST0000000000002","id":40},{"carModelBms":0,"number":"粤A12345","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤A12345","remark":"11111111111111","vin":"12345678912345678","id":86},{"carModelBms":0,"number":"粤A1815U","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"风骏3","name":"风骏3","id":85},"displayName":"粤A1815U","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"TEST0000000000001","vin":"TEST0000000000001","id":85},{"carModelBms":0,"number":"粤GF520U","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤GF520U","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650012758061.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤GF520U","vin":"12345678901234567","id":46},{"carModelBms":0,"number":"皖R25679","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"皖R25679","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787735870.png","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"123","vin":"12345678932156788","id":71},{"carModelBms":0,"number":"粤A98764","companyId":{"displayName":"LiPai","name":"LiPai","id":3},"carModelId":{"displayName":"长安new2","name":"长安new2","id":67},"displayName":"粤A98764","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"粤A98764","vin":"FHJ45672345566745","id":84},{"carModelBms":0,"number":"辽R678UP0","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"辽R678UP0","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"11","vin":"KJHGFDSAWERTYUPNB","id":48},{"carModelBms":0,"number":"吉F36664","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"吉F36664","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650788002599.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"皖H976YD","vin":"LNAACAA21M5484033","id":67},{"carModelBms":0,"number":"粤Q33333","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"蔚来210","name":"蔚来210","id":98},"displayName":"粤Q33333","pictureUrl":"https://test3.gcevc.net/oss/customer_car/pictureUrl/1650787967721.png","customerId":{"displayName":"呦","name":"呦","id":36},"remark":"123","vin":"55555678901234888","id":50},{"carModelBms":0,"number":"蒙E900000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"蒙E900000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"蒙E900000","vin":"12345678912314563","id":78},{"carModelBms":0,"number":"Audi-Q5e-tron","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"Audi-Q5e-tron","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"云L900000","vin":"45879651234569874","id":79},{"carModelBms":0,"number":"鲁P489000","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"鲁P489000","customerId":{"displayName":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","name":"এ᭄ꦿ꯭萌寶এ᭄ꦿ\uD83E\uDD8B","id":14},"remark":"鲁P489000","vin":"45879632147859632","id":80},{"carModelBms":0,"number":"粤AGN541","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"长安new","name":"长安new","id":94},"displayName":"粤AGN541","customerId":{"displayName":"zhao_test","name":"zhao_test","id":33},"remark":"粤AGN541","vin":"LNAACAA21M5484082","id":83},{"carModelBms":0,"number":"粤D675422","companyId":{"displayName":"hx","name":"hx","id":1},"carModelId":{"displayName":"Audi-Q5e-tron","name":"Audi-Q5e-tron","id":1},"displayName":"粤D675422","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"12345678909123456","id":81},{"carModelBms":0,"number":"京BWJYDLL","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"京BWJYDLL","customerId":{"displayName":"Ni","name":"Ni","id":32},"remark":"京BWJYDLL","vin":"12345642","id":76},{"carModelBms":0,"number":"粤D757898","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤D757898","customerId":{"displayName":"Yccc","name":"Yccc","id":30},"remark":"粤D675422","vin":"525665547886369526","id":55},{"carModelBms":0,"number":"粤ZLGJPKR","companyId":{"displayName":"hx","name":"hx","id":1},"displayName":"粤ZLGJPKR","customerId":{"displayName":"AND","name":"AND","id":25},"remark":"粤K65658","vin":"hgg.！？66","id":5}],"length":31}}
2022-04-28 14:24:51,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:24:51,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:24:51,769 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:24:51,769 INFO [root] [key.py (post:23] - 内容为：{"code":401,"msg":"未登录","data":""}
2022-04-28 14:24:51,769 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:28:01,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:28:01,899 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "E29C"}
2022-04-28 14:28:01,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:28:01,927 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:28:01,927 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:28:01,927 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:28:01,938 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:28:01,938 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:28:01,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:28:01,963 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:28:01,963 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:28:01,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:28:01,971 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:28:01,971 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:28:01,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:28:01,971 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:28:01,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:28:01,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:28:01,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:28:01,975 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:32:23,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:32:23,476 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QAJL"}
2022-04-28 14:32:23,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:23,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:32:23,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:32:23,504 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:23,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:32:23,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:32:23,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:23,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:32:23,541 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:32:23,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:23,549 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:32:23,549 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:32:23,549 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:23,550 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:32:23,555 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:32:23,555 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:32:23,555 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:32:23,555 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:32:48,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:32:48,441 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KDFW"}
2022-04-28 14:32:48,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:32:48,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:32:48,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:32:48,484 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:32:48,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,510 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:32:48,511 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:32:48,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:32:48,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:32:48,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,518 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:32:48,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:32:48,546 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "ET8Q"}
2022-04-28 14:32:48,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:32:48,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:32:48,551 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:32:48,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:32:48,551 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:35:55,456 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:35:55,456 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "MLY2"}
2022-04-28 14:35:55,456 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:35:55,483 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:35:55,483 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:35:55,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:35:55,495 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:35:55,495 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:35:55,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:35:55,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:35:55,523 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:35:55,523 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:35:55,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:35:55,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:35:55,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:35:55,531 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:35:55,536 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:35:55,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:35:55,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:35:55,536 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:39:54,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:39:54,451 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "MXUR"}
2022-04-28 14:39:54,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,005 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:40:52,005 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "UW77"}
2022-04-28 14:40:52,005 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,040 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:40:52,040 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:40:52,040 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,051 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:40:52,051 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:40:52,051 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,078 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:40:52,078 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:40:52,078 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,085 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:40:52,085 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:40:52,085 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 14:40:52,085 INFO [root] [key.py (read:41] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:40:52,090 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:40:52,090 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:40:52,090 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 401
2022-04-28 14:40:52,090 ERROR [root] [key.py (post:29] - 出现异常，code:401不等于200
2022-04-28 14:44:11,435 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:44:11,436 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XS5G"}
2022-04-28 14:44:11,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,465 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:44:11,465 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:44:11,465 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:44:11,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:44:11,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:44:11,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:44:11,503 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,511 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:44:11,511 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:44:11,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,511 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:44:11,522 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:44:11,522 INFO [root] [key.py (post:21] - 传的参数是：{"model": "market_help", "map": {"type": 0, "name": "\u5e2e\u52a9"}}
2022-04-28 14:44:11,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:44:11,522 INFO [root] [key.py (create:34] - 创建模型：market_help新记录，id为：13
2022-04-28 14:44:11,527 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:44:11,527 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:44:11,527 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:44:11,527 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:48:36,875 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:48:36,875 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "73P6"}
2022-04-28 14:48:36,875 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:36,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:48:36,903 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:48:36,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:36,913 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:48:36,913 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:48:36,913 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:36,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:48:36,978 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:48:36,979 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:36,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:48:36,986 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:48:36,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:36,986 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:48:37,001 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:48:37,001 INFO [root] [key.py (post:21] - 传的参数是：{"model": "market_help", "map": {"type": 0, "name": "\u5e2e\u52a9"}}
2022-04-28 14:48:37,002 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:48:37,002 INFO [root] [key.py (create:34] - 创建模型：market_help新记录，id为：14
2022-04-28 14:48:37,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:48:37,010 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:48:37,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:48:37,011 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:54:24,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:54:24,013 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PN7K"}
2022-04-28 14:54:24,013 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:54:24,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:54:24,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,054 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:54:24,054 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:54:24,054 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:54:24,081 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:54:24,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,088 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:54:24,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:54:24,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,088 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:54:24,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:54:24,101 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4C12345", "remark": "\u7ca4C12345", "vin": "12345678901098765"}}
2022-04-28 14:54:24,101 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:54:24,101 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：94
2022-04-28 14:54:24,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:54:24,106 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:54:24,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:54:24,106 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:56:43,654 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:56:43,654 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3LQC"}
2022-04-28 14:56:43,654 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:56:43,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:56:43,686 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,696 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:56:43,696 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:56:43,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:56:43,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:56:43,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:56:43,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:56:43,734 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,735 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:56:43,754 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:56:43,754 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4C12345", "remark": "\u7ca4C12345", "vin": "12345678901098765"}}
2022-04-28 14:56:43,754 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:56:43,754 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：95
2022-04-28 14:56:43,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:56:43,760 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:56:43,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:56:43,760 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 14:58:00,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 14:58:00,693 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "M9JY"}
2022-04-28 14:58:00,693 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:58:00,720 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:58:00,720 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,731 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 14:58:00,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 14:58:00,731 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,757 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 14:58:00,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 14:58:00,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,765 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 14:58:00,765 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 40}
2022-04-28 14:58:00,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,765 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：40的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, 'displayName': '粤GF520U', 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}, 'remark': '粤GDF999u', 'vin': 'TEST0000000000002', 'id': 40}
2022-04-28 14:58:00,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:58:00,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"totalBatteryCapacity": 0, "enduranceMileage": 0, "bms": 1, "nationalStandard": 255, "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 84}, "name": "dd "}}
2022-04-28 14:58:00,778 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 14:58:00,778 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：115
2022-04-28 14:58:00,783 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 14:58:00,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 14:58:00,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 14:58:00,784 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 15:02:18,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:02:18,898 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "4GW2"}
2022-04-28 15:02:18,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,930 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:02:18,930 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:02:18,930 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:02:18,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 15:02:18,942 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,957 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:02:18,957 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4C12345", "remark": "\u7ca4C12345", "vin": "12345678901098765"}}
2022-04-28 15:02:18,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,957 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：97
2022-04-28 15:02:18,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:02:18,988 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:02:18,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:02:18,995 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 97}
2022-04-28 15:02:18,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:02:18,995 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：97的内容： {'carModelBms': 0, 'number': '粤C12345', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'displayName': '粤C12345', 'remark': '粤C12345', 'vin': '12345678901098765', 'id': 97}
2022-04-28 15:02:18,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:02:19,000 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:02:19,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 15:02:19,000 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 15:05:48,088 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:05:48,088 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XWCL"}
2022-04-28 15:05:48,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:05:48,099 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:05:48,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,099 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：86
2022-04-28 15:05:48,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:05:48,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:05:48,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,148 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:05:48,149 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 86}
2022-04-28 15:05:48,149 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,149 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：86的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 86, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:05:48,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:05:48,156 INFO [root] [key.py (post:21] - 传的参数是：{"id": 86, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:05:48,156 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:05:48,167 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 86}
2022-04-28 15:05:48,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,167 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：86的记录已成功
2022-04-28 15:05:48,204 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:05:48,204 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:05:48,205 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:05:48,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 86}
2022-04-28 15:05:48,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,225 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：86的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 86, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:05:48,244 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:05:48,244 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [86]}
2022-04-28 15:05:48,244 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:05:48,244 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：86的记录
2022-04-28 15:07:01,969 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:07:01,969 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3SSW"}
2022-04-28 15:07:01,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,003 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:07:02,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:07:02,004 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:07:02,014 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "offset": 1, "limit": 20, "domain": [], "sort": ""}
2022-04-28 15:07:02,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:07:02,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4C12345", "remark": "\u7ca4C12345", "vin": "12345678901098765"}}
2022-04-28 15:07:02,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,023 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：100
2022-04-28 15:07:02,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:07:02,051 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:07:02,051 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:07:02,058 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 100}
2022-04-28 15:07:02,058 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:02,058 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：100的内容： {'carModelBms': 0, 'number': '粤C12345', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'displayName': '粤C12345', 'remark': '粤C12345', 'vin': '12345678901098765', 'id': 100}
2022-04-28 15:07:02,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:07:02,063 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:07:02,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 15:07:02,063 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 15:07:52,348 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:07:52,348 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "BYF2"}
2022-04-28 15:07:52,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:07:52,353 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:07:52,353 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:07:52,353 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 15:07:52,353 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 15:15:30,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:15:30,191 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QD3V"}
2022-04-28 15:15:30,191 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-28 15:15:30,191 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-28 15:16:18,308 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:16:18,308 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "D54K"}
2022-04-28 15:16:18,308 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,320 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:16:18,320 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:16:18,321 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,321 INFO [root] [key.py (create:35] - 创建模型：customer_car_brand新记录，id为：88
2022-04-28 15:16:18,357 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:16:18,357 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:16:18,357 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,364 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:16:18,364 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 88}
2022-04-28 15:16:18,364 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,364 INFO [root] [key.py (read:41] - 查看模型customer_car_brand中id为：88的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 88, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:16:18,369 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:16:18,370 INFO [root] [key.py (post:22] - 传的参数是：{"id": 88, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:16:18,370 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,378 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:16:18,378 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 88}
2022-04-28 15:16:18,378 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,378 INFO [root] [key.py (edit:47] - 编辑模型customer_car_brand中id为：88的记录已成功
2022-04-28 15:16:18,407 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:16:18,407 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:16:18,407 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,416 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:16:18,416 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 88}
2022-04-28 15:16:18,416 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,416 INFO [root] [key.py (read:41] - 查看模型customer_car_brand中id为：88的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 88, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:16:18,425 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:16:18,425 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [88]}
2022-04-28 15:16:18,425 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:16:18,425 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：88的记录
2022-04-28 15:17:24,021 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:17:24,022 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "7363"}
2022-04-28 15:17:24,022 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,031 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:17:24,031 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:17:24,031 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,032 INFO [root] [key.py (create:35] - 创建模型：customer_car_brand新记录，id为：89
2022-04-28 15:17:24,059 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:24,059 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:24,059 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,066 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:17:24,066 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 89}
2022-04-28 15:17:24,066 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,066 INFO [root] [key.py (read:41] - 查看模型customer_car_brand中id为：89的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 89, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:17:24,071 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:17:24,071 INFO [root] [key.py (post:22] - 传的参数是：{"id": 89, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:17:24,071 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,078 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:17:24,078 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 89}
2022-04-28 15:17:24,078 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,079 INFO [root] [key.py (edit:47] - 编辑模型customer_car_brand中id为：89的记录已成功
2022-04-28 15:17:24,110 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:24,110 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:24,111 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,118 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:17:24,118 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 89}
2022-04-28 15:17:24,118 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,118 INFO [root] [key.py (read:41] - 查看模型customer_car_brand中id为：89的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 89, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:17:24,126 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:17:24,126 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [89]}
2022-04-28 15:17:24,126 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:24,126 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：89的记录
2022-04-28 15:17:29,519 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:17:29,519 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:17:29,519 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 401
2022-04-28 15:17:29,520 ERROR [root] [key.py (post:29] - 出现异常，code:401不等于200
2022-04-28 15:17:44,823 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:17:44,823 INFO [root] [key.py (post:22] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "73BR"}
2022-04-28 15:17:44,824 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,834 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:17:44,834 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:17:44,834 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,834 INFO [root] [key.py (create:35] - 创建模型：customer_car_brand新记录，id为：90
2022-04-28 15:17:44,864 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:44,864 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:44,865 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,871 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:17:44,871 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 15:17:44,871 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,871 INFO [root] [key.py (default_get:73] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 15:17:44,880 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:17:44,880 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "id": 90}
2022-04-28 15:17:44,880 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,897 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:17:44,897 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 90}, "name": "\u6c49EV"}}
2022-04-28 15:17:44,897 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,897 INFO [root] [key.py (create:35] - 创建模型：customer_car_model新记录，id为：116
2022-04-28 15:17:44,965 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:44,966 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:44,966 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,973 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:17:44,973 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 15:17:44,973 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,973 INFO [root] [key.py (default_get:73] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 15:17:44,979 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:17:44,980 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "id": 116}
2022-04-28 15:17:44,980 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,990 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:17:44,991 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 116}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 15:17:44,991 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:44,991 INFO [root] [key.py (create:35] - 创建模型：customer_car新记录，id为：101
2022-04-28 15:17:45,019 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:45,019 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:45,019 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,031 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:17:45,031 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 101}
2022-04-28 15:17:45,031 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,031 INFO [root] [key.py (read:41] - 查看模型customer_car中id为：101的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 116}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 101}
2022-04-28 15:17:45,042 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:17:45,042 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "map": {"name": "\u6c49EV\u65d7\u8230\u7248-10000KM"}, "id": 101}
2022-04-28 15:17:45,042 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,042 INFO [root] [key.py (edit:47] - 编辑模型customer_car中id为：101的记录已成功
2022-04-28 15:17:45,080 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:17:45,080 INFO [root] [key.py (post:22] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:17:45,080 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,088 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:17:45,088 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 101}
2022-04-28 15:17:45,089 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,089 INFO [root] [key.py (read:41] - 查看模型customer_car中id为：101的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 116}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'name': '汉EV旗舰版-10000KM', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 101}
2022-04-28 15:17:45,098 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:17:45,098 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car", "ids": [101]}
2022-04-28 15:17:45,098 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,098 INFO [root] [key.py (delete:53] - 已删除模型customer_car中id为：101的记录
2022-04-28 15:17:45,109 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:17:45,109 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_model", "ids": [116]}
2022-04-28 15:17:45,109 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,110 INFO [root] [key.py (delete:53] - 已删除模型customer_car_model中id为：116的记录
2022-04-28 15:17:45,127 INFO [root] [key.py (post:21] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:17:45,127 INFO [root] [key.py (post:22] - 传的参数是：{"model": "customer_car_brand", "ids": [90]}
2022-04-28 15:17:45,127 INFO [root] [key.py (post:23] - 接口返回的响应内容中的code是： 200
2022-04-28 15:17:45,127 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：90的记录
2022-04-28 15:20:32,571 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:20:32,571 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9FTV"}
2022-04-28 15:20:32,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:20:32,580 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:20:32,580 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,580 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：91
2022-04-28 15:20:32,606 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:20:32,606 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:20:32,606 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:20:32,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 15:20:32,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,612 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 15:20:32,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:20:32,618 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 91}
2022-04-28 15:20:32,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:20:32,627 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 91}, "name": "\u6c49EV"}}
2022-04-28 15:20:32,627 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,627 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：117
2022-04-28 15:20:32,653 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:20:32,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:20:32,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:20:32,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 15:20:32,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,660 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 15:20:32,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:20:32,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 117}
2022-04-28 15:20:32,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:20:32,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 117}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 15:20:32,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,678 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：102
2022-04-28 15:20:32,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:20:32,716 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:20:32,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:20:32,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 102}
2022-04-28 15:20:32,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,723 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：102的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 117}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 102}
2022-04-28 15:20:32,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:20:32,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"name": "\u6c49EV\u65d7\u8230\u7248-10000KM"}, "id": 102}
2022-04-28 15:20:32,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,732 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：102的记录已成功
2022-04-28 15:20:32,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:20:32,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:20:32,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:20:32,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 102}
2022-04-28 15:20:32,780 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,780 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：102的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 117}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'name': '汉EV旗舰版-10000KM', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 102}
2022-04-28 15:20:32,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:20:32,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [102]}
2022-04-28 15:20:32,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,789 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：102的记录
2022-04-28 15:20:32,798 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:20:32,798 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [117]}
2022-04-28 15:20:32,798 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,798 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：117的记录
2022-04-28 15:20:32,807 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:20:32,807 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [91]}
2022-04-28 15:20:32,807 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:20:32,807 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：91的记录
2022-04-28 15:24:35,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:24:35,331 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "VXC4"}
2022-04-28 15:24:35,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:24:35,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:24:35,347 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,347 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：92
2022-04-28 15:24:35,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:24:35,380 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:24:35,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:24:35,386 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 15:24:35,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,386 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 15:24:35,392 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:24:35,392 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 92}
2022-04-28 15:24:35,392 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,402 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:24:35,402 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 92}, "name": "\u6c49EV"}}
2022-04-28 15:24:35,402 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,402 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：118
2022-04-28 15:24:35,428 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:24:35,428 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:24:35,429 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:24:35,435 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 15:24:35,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,435 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 15:24:35,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:24:35,441 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 118}
2022-04-28 15:24:35,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:24:35,453 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 118}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 15:24:35,453 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,453 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：103
2022-04-28 15:24:35,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:24:35,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:24:35,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:24:35,488 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 103}
2022-04-28 15:24:35,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,489 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：103的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 118}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 103}
2022-04-28 15:24:35,502 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:24:35,502 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"name": "\u6c49EV\u65d7\u8230\u7248-10000KM"}, "id": 103}
2022-04-28 15:24:35,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,502 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：103的记录已成功
2022-04-28 15:24:35,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:24:35,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:24:35,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,557 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:24:35,558 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 103}
2022-04-28 15:24:35,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,559 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：103的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 118}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'name': '汉EV旗舰版-10000KM', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 103}
2022-04-28 15:24:35,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:24:35,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [103]}
2022-04-28 15:24:35,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,573 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：103的记录
2022-04-28 15:24:35,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:24:35,591 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [118]}
2022-04-28 15:24:35,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,592 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：118的记录
2022-04-28 15:24:35,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:24:35,603 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [92]}
2022-04-28 15:24:35,603 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:24:35,603 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：92的记录
2022-04-28 15:26:10,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:26:10,221 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QG36"}
2022-04-28 15:26:10,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:26:10,240 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:26:10,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,240 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：93
2022-04-28 15:26:10,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:26:10,281 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:26:10,281 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:26:10,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 15:26:10,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,292 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 15:26:10,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:26:10,305 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 93}
2022-04-28 15:26:10,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,324 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:26:10,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 93}, "name": "\u6c49EV"}}
2022-04-28 15:26:10,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,324 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：119
2022-04-28 15:26:10,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:26:10,357 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:26:10,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,364 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:26:10,364 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 15:26:10,364 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,364 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 15:26:10,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:26:10,372 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 119}
2022-04-28 15:26:10,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:26:10,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 119}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 15:26:10,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,386 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：104
2022-04-28 15:26:10,414 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:26:10,414 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:26:10,414 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,423 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:26:10,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 104}
2022-04-28 15:26:10,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,423 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：104的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 119}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 104}
2022-04-28 15:26:10,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:26:10,436 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"name": "\u6c49EV\u65d7\u8230\u7248-10000KM"}, "id": 104}
2022-04-28 15:26:10,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,436 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：104的记录已成功
2022-04-28 15:26:10,466 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:26:10,467 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:26:10,467 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,475 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:26:10,475 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 104}
2022-04-28 15:26:10,475 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,475 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：104的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 119}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'name': '汉EV旗舰版-10000KM', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 104}
2022-04-28 15:26:10,501 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:26:10,501 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [104]}
2022-04-28 15:26:10,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,502 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：104的记录
2022-04-28 15:26:10,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:26:10,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [119]}
2022-04-28 15:26:10,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,514 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：119的记录
2022-04-28 15:26:10,543 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:26:10,543 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [93]}
2022-04-28 15:26:10,543 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:26:10,544 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：93的记录
2022-04-28 15:30:59,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:30:59,044 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "52Y5"}
2022-04-28 15:30:59,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,054 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:30:59,054 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:30:59,054 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,054 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：94
2022-04-28 15:30:59,083 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:30:59,083 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:30:59,083 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:30:59,091 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 94}
2022-04-28 15:30:59,091 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,091 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：94的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 94, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:30:59,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:30:59,097 INFO [root] [key.py (post:21] - 传的参数是：{"id": 94, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:30:59,097 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:30:59,106 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 94}
2022-04-28 15:30:59,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,106 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：94的记录已成功
2022-04-28 15:30:59,135 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:30:59,135 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:30:59,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:30:59,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 94}
2022-04-28 15:30:59,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,143 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：94的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 94, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:30:59,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:30:59,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [94]}
2022-04-28 15:30:59,151 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,152 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：94的记录
2022-04-28 15:30:59,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:30:59,183 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:30:59,184 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:30:59,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:30:59,194 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:30:59,194 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:31:33,842 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RT3L"}
2022-04-28 15:31:33,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,842 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"5a3c6f9cf7504d0fac3dbc5a76b3c6a1"}
2022-04-28 15:31:33,853 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:31:33,853 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:31:33,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,853 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":95}
2022-04-28 15:31:33,854 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：95
2022-04-28 15:31:33,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:31:33,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:31:33,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,883 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:31:33,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:31:33,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 95}
2022-04-28 15:31:33,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,898 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"carModelIds":[],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADI","displayName":"比亚迪","name":"比亚迪","carModelCount":0,"id":95,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"}}
2022-04-28 15:31:33,898 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：95的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 95, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:31:33,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:31:33,906 INFO [root] [key.py (post:21] - 传的参数是：{"id": 95, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:31:33,906 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,906 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"domain":{},"value":{"pinyin":"BIYADIHAN"}}}
2022-04-28 15:31:33,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:31:33,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 95}
2022-04-28 15:31:33,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,920 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":true}
2022-04-28 15:31:33,920 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：95的记录已成功
2022-04-28 15:31:33,955 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:31:33,955 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:31:33,955 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,955 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:31:33,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:31:33,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 95}
2022-04-28 15:31:33,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,980 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"carModelIds":[],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADIHAN","displayName":"比亚迪汉","name":"比亚迪汉","carModelCount":0,"id":95,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"}}
2022-04-28 15:31:33,980 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：95的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 95, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:31:33,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:31:33,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [95]}
2022-04-28 15:31:33,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:33,990 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":true}
2022-04-28 15:31:33,990 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：95的记录
2022-04-28 15:31:34,024 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:31:34,024 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:31:34,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:34,025 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:31:34,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:31:34,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:31:34,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:31:34,043 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelIds":[{"id":114},{"id":115}],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADI","displayName":"比亚迪","name":"比亚迪","carModelCount":2,"id":84,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"},{"carModelIds":[{"id":3},{"id":4},{"id":36},{"id":37},{"id":38},{"id":39},{"id":40},{"id":41},{"id":42},{"id":43},{"id":44},{"id":45},{"id":46},{"id":47},{"id":48},{"id":49},{"id":50},{"id":51},{"id":52},{"id":53},{"id":54},{"id":55},{"id":56},{"id":57},{"id":58},{"id":59},{"id":60},{"id":61},{"id":62},{"id":63},{"id":64},{"id":65},{"id":96}],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BYD","displayName":"比亚迪","name":"比亚迪","carModelCount":33,"id":2,"logoUrl":""}],"length":2}}
2022-04-28 15:40:00,596 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:40:00,596 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "E75U"}
2022-04-28 15:40:00,596 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,596 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":"b4cfae942e55427ebf0fa2fb7801f316"}
2022-04-28 15:40:00,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:40:00,607 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:40:00,607 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,607 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"domain":{},"value":{"pinyin":"BIYADI"}}}
2022-04-28 15:40:00,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:40:00,620 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:40:00,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,621 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":96}
2022-04-28 15:40:00,621 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：96
2022-04-28 15:40:00,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:40:00,651 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:40:00,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,651 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:40:00,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:40:00,661 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 96}
2022-04-28 15:40:00,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,661 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"carModelIds":[],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADI","displayName":"比亚迪","name":"比亚迪","carModelCount":0,"id":96,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"}}
2022-04-28 15:40:00,661 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：96的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 96, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:40:00,666 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:40:00,667 INFO [root] [key.py (post:21] - 传的参数是：{"id": 96, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:40:00,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,667 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"domain":{},"value":{"pinyin":"BIYADIHAN"}}}
2022-04-28 15:40:00,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:40:00,675 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 96}
2022-04-28 15:40:00,675 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,675 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":true}
2022-04-28 15:40:00,675 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：96的记录已成功
2022-04-28 15:40:00,706 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:40:00,706 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:40:00,706 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,706 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:40:00,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:40:00,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 96}
2022-04-28 15:40:00,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,726 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"carModelIds":[],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADIHAN","displayName":"比亚迪汉","name":"比亚迪汉","carModelCount":0,"id":96,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"}}
2022-04-28 15:40:00,727 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：96的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 96, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:40:00,740 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:40:00,740 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [96]}
2022-04-28 15:40:00,741 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,741 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":true}
2022-04-28 15:40:00,741 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：96的记录
2022-04-28 15:40:00,771 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:40:00,771 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:40:00,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,771 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"createBy":{"name":"createBy","translate":"创建者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建者不能为空\"}","views":{}},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"createTime":{"name":"createTime","translate":"创建时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"创建时间不能为空\"}","views":{}},"updateBy":{"name":"updateBy","translate":"更新者","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新者不能为空\"}","views":{}},"displayName":{"name":"displayName","translate":"展示名称","type":"Char","required":false,"readonly":true,"searchable":true,"sortable":false,"store":false,"views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}},"updateTime":{"name":"updateTime","translate":"更新时间","type":"Datetime","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"更新时间不能为空\"}","views":{}},"id":{"name":"id","translate":"ID","type":"Integer","required":true,"readonly":true,"searchable":true,"sortable":true,"store":true,"views":{}},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"fields_views":{"search":{"id":84,"name":"customer_car_brand Search","type":"search","arch":"<search string=\"车辆品牌\">\n                <field name=\"name\" string=\"名称\"/>\n            </search>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"}},"toolbar":{"action":[],"print":[],"relate":[]}},"form":{"id":83,"name":"customer_car_brand Form","type":"form","arch":"<form string=\"车辆品牌\">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name=\"logoUrl\" string=\"LOGO\" widget=\"photo\"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name=\"name\"/>\n                            <field name=\"pinyin\" readonly=\"true\"/>\n                        </group>\n                        <group>\n                            <field name=\"companyId\" attrs=\"{'invisible':[['id','=?']]}\"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string=\"车型\">\n                            <field name=\"carModelIds\">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>","fields":{"carModelIds":{"name":"carModelIds","translate":"车型列表","type":"One2many","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{"tree":{"arch":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tree>\n                                    <field string=\"名称\" name=\"name\"/>\n                                </tree>","fields":{"name":{"name":"name","translate":"车型名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}},"relation":"customer_car_model","relationField":"carBrandId"},"companyId":{"name":"companyId","translate":"公司","type":"Many2one","required":false,"readonly":false,"searchable":true,"sortable":true,"store":true,"views":{},"relation":"res_company"},"pinyin":{"name":"pinyin","translate":"品牌拼音","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"type\":\"NotNull\",\"message\":\"品牌拼音不能为空\"}","views":{}},"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"logoUrl":{"name":"logoUrl","translate":"logo图标","type":"Binary","required":false,"readonly":false,"searchable":false,"sortable":false,"store":true,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}},"tree":{"id":82,"name":"customer_car_brand Tree","type":"tree","arch":"<tree string=\"车辆品牌\">\n                <field name=\"name\"/>\n                <field name=\"carModelCount\"/>\n            </tree>","fields":{"name":{"name":"name","translate":"品牌名称","type":"Char","required":true,"readonly":false,"searchable":true,"sortable":true,"store":true,"validation":"{\"pattern\":\"^.{1,64}$\",\"type\":\"Pattern\",\"message\":\"名称必须为1-64位字符\"}","views":{},"onchange":"pinyinOnchange"},"carModelCount":{"name":"carModelCount","translate":"车型数量","type":"Integer","required":false,"readonly":true,"searchable":false,"sortable":false,"store":false,"views":{}}},"toolbar":{"action":[],"print":[],"relate":[]}}}}}
2022-04-28 15:40:00,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:40:00,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:40:00,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:40:00,789 INFO [root] [key.py (post:23] - 内容为：{"code":200,"msg":"成功","data":{"records":[{"carModelIds":[{"id":114},{"id":115}],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BIYADI","displayName":"比亚迪","name":"比亚迪","carModelCount":2,"id":84,"logoUrl":"https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png"},{"carModelIds":[{"id":3},{"id":4},{"id":36},{"id":37},{"id":38},{"id":39},{"id":40},{"id":41},{"id":42},{"id":43},{"id":44},{"id":45},{"id":46},{"id":47},{"id":48},{"id":49},{"id":50},{"id":51},{"id":52},{"id":53},{"id":54},{"id":55},{"id":56},{"id":57},{"id":58},{"id":59},{"id":60},{"id":61},{"id":62},{"id":63},{"id":64},{"id":65},{"id":96}],"companyId":{"displayName":"hx","name":"hx","id":1},"pinyin":"BYD","displayName":"比亚迪","name":"比亚迪","carModelCount":33,"id":2,"logoUrl":""}],"length":2}}
2022-04-28 15:44:35,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:44:35,979 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QA7D"}
2022-04-28 15:44:35,979 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:35,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:44:35,986 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:44:35,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:44:36,002 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:44:36,002 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,003 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：97
2022-04-28 15:44:36,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:44:36,046 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:44:36,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:44:36,056 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 97}
2022-04-28 15:44:36,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,056 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：97的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 97, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:44:36,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:44:36,063 INFO [root] [key.py (post:21] - 传的参数是：{"id": 97, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:44:36,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:44:36,077 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 97}
2022-04-28 15:44:36,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,077 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：97的记录已成功
2022-04-28 15:44:36,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:44:36,119 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:44:36,119 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:44:36,126 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 97}
2022-04-28 15:44:36,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,126 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：97的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 97, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:44:36,134 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:44:36,134 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [97]}
2022-04-28 15:44:36,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,134 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：97的记录
2022-04-28 15:44:36,165 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:44:36,165 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:44:36,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,177 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:44:36,177 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:44:36,177 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:44:36,177 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索[['name', 'ilike', '比亚迪']]为：2
2022-04-28 15:47:31,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:47:31,321 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "4E3D"}
2022-04-28 15:47:31,322 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,327 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:47:31,327 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:47:31,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:47:31,340 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:47:31,341 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,341 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：98
2022-04-28 15:47:31,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:47:31,372 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:47:31,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:47:31,380 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 98}
2022-04-28 15:47:31,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,380 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：98的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 98, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:47:31,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:47:31,386 INFO [root] [key.py (post:21] - 传的参数是：{"id": 98, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:47:31,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:47:31,394 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 98}
2022-04-28 15:47:31,394 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,394 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：98的记录已成功
2022-04-28 15:47:31,423 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:47:31,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:47:31,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:47:31,431 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 98}
2022-04-28 15:47:31,431 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,431 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：98的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 98, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:47:31,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:47:31,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [98]}
2022-04-28 15:47:31,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,440 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：98的记录
2022-04-28 15:47:31,471 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:47:31,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:47:31,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:31,492 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:47:31,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:47:31,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:47:59,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:47:59,450 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "Q4J7"}
2022-04-28 15:47:59,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 711
2022-04-28 15:47:59,451 ERROR [root] [key.py (post:28] - 出现异常，code:711不等于200
2022-04-28 15:50:23,522 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:50:23,522 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RMM6"}
2022-04-28 15:50:23,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,522 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"da3f6e70cbda4b6580a77f0ef5689c11"}
2022-04-28 15:50:23,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:50:23,528 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:50:23,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:50:23,537 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:50:23,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,537 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：99
2022-04-28 15:50:23,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:50:23,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:50:23,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:50:23,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 99}
2022-04-28 15:50:23,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,595 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：99的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 99, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:50:23,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:50:23,600 INFO [root] [key.py (post:21] - 传的参数是：{"id": 99, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 15:50:23,600 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,608 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:50:23,608 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 99}
2022-04-28 15:50:23,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,608 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：99的记录已成功
2022-04-28 15:50:23,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:50:23,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:50:23,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,648 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:50:23,648 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 99}
2022-04-28 15:50:23,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,648 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：99的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 99, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 15:50:23,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:50:23,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [99]}
2022-04-28 15:50:23,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,657 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：99的记录
2022-04-28 15:50:23,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:50:23,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:50:23,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 15:50:23,697 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 15:50:23,697 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:50:23,697 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件： '比亚迪']]符合的记录数是：2条
2022-04-28 15:55:26,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:55:26,064 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:55:26,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 401
2022-04-28 15:55:26,064 ERROR [root] [key.py (post:28] - 出现异常，code:401不等于200
2022-04-28 15:55:44,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 15:55:44,552 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "338S"}
2022-04-28 15:55:44,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,552 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e1275d0088c34c869e9b50a8ed5fcb29"}
2022-04-28 15:55:44,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 15:55:44,556 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 15:55:44,556 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:55:44,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 15:55:44,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,565 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：100
2022-04-28 15:55:44,592 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:55:44,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:55:44,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,599 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 15:55:44,599 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 15:55:44,599 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,599 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 15:55:44,605 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 15:55:44,605 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 100}
2022-04-28 15:55:44,605 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 15:55:44,620 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 100}, "name": "\u6c49EV"}}
2022-04-28 15:55:44,620 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,620 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：120
2022-04-28 15:55:44,648 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:55:44,648 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:55:44,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:55:44,656 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 120}
2022-04-28 15:55:44,656 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,657 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：120的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 100}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 120, 'nationalStandard': 255}
2022-04-28 15:55:44,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 15:55:44,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 120}
2022-04-28 15:55:44,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,667 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：120的记录已成功
2022-04-28 15:55:44,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 15:55:44,695 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 15:55:44,695 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,703 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 15:55:44,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 120}
2022-04-28 15:55:44,703 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,703 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：120的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 100}, 'displayName': '汉EV旗舰版', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV旗舰版', 'bms': 1, 'id': 120, 'nationalStandard': 255}
2022-04-28 15:55:44,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:55:44,711 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [120]}
2022-04-28 15:55:44,711 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 15:55:44,711 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：120的记录
2022-04-28 15:55:44,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 15:55:44,721 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": 100}
2022-04-28 15:55:44,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-28 15:55:44,721 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-28 16:00:03,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:00:03,673 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DDB2"}
2022-04-28 16:00:03,673 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,674 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"6cbf2512c8074926a186d040f27d2b5a"}
2022-04-28 16:00:03,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:00:03,680 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:00:03,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,690 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:00:03,690 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:00:03,690 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,691 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：101
2022-04-28 16:00:03,717 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:03,717 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:03,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 16:00:03,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 16:00:03,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,723 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 16:00:03,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 16:00:03,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 101}
2022-04-28 16:00:03,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:00:03,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 101}, "name": "\u6c49EV"}}
2022-04-28 16:00:03,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,738 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：121
2022-04-28 16:00:03,765 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:03,765 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:03,766 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:00:03,773 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 121}
2022-04-28 16:00:03,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,774 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：121的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 101}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 121, 'nationalStandard': 255}
2022-04-28 16:00:03,783 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:00:03,783 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 121}
2022-04-28 16:00:03,783 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,783 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：121的记录已成功
2022-04-28 16:00:03,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:03,811 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:03,811 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,818 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:00:03,818 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 121}
2022-04-28 16:00:03,818 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,819 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：121的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 101}, 'displayName': '汉EV旗舰版', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV旗舰版', 'bms': 1, 'id': 121, 'nationalStandard': 255}
2022-04-28 16:00:03,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:00:03,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [121]}
2022-04-28 16:00:03,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:03,827 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：121的记录
2022-04-28 16:00:03,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:00:03,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": "101"}
2022-04-28 16:00:03,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-28 16:00:03,835 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-28 16:00:39,356 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:00:39,356 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XC4T"}
2022-04-28 16:00:39,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,357 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"55e516b736114f1eb92050e1377685fa"}
2022-04-28 16:00:39,363 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:00:39,363 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:00:39,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:00:39,377 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:00:39,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,377 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：102
2022-04-28 16:00:39,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:39,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:39,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,440 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 16:00:39,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 16:00:39,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,440 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 16:00:39,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 16:00:39,446 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 102}
2022-04-28 16:00:39,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:00:39,455 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 102}, "name": "\u6c49EV"}}
2022-04-28 16:00:39,455 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,455 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：122
2022-04-28 16:00:39,483 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:39,483 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:39,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:00:39,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 122}
2022-04-28 16:00:39,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,492 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：122的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 102}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 122, 'nationalStandard': 255}
2022-04-28 16:00:39,502 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:00:39,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 122}
2022-04-28 16:00:39,503 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,503 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：122的记录已成功
2022-04-28 16:00:39,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:00:39,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:00:39,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,536 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:00:39,537 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 122}
2022-04-28 16:00:39,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,537 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：122的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 102}, 'displayName': '汉EV旗舰版', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV旗舰版', 'bms': 1, 'id': 122, 'nationalStandard': 255}
2022-04-28 16:00:39,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:00:39,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [122]}
2022-04-28 16:00:39,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:00:39,550 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：122的记录
2022-04-28 16:00:39,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:00:39,556 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": 102}
2022-04-28 16:00:39,556 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-28 16:00:39,556 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-28 16:02:26,135 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:02:26,135 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2SGG"}
2022-04-28 16:02:26,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,135 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"1ec5c12345574338a5db28fcf2aafc53"}
2022-04-28 16:02:26,147 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:02:26,147 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:02:26,147 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:02:26,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:02:26,158 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,158 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：103
2022-04-28 16:02:26,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:02:26,187 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:02:26,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,193 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 16:02:26,193 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 16:02:26,193 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,193 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 16:02:26,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 16:02:26,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 103}
2022-04-28 16:02:26,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:02:26,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 103}, "name": "\u6c49EV"}}
2022-04-28 16:02:26,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,209 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：123
2022-04-28 16:02:26,238 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:02:26,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:02:26,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:02:26,246 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 123}
2022-04-28 16:02:26,247 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,247 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：123的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 103}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 123, 'nationalStandard': 255}
2022-04-28 16:02:26,255 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:02:26,255 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 123}
2022-04-28 16:02:26,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,256 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：123的记录已成功
2022-04-28 16:02:26,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:02:26,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:02:26,291 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:02:26,303 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 123}
2022-04-28 16:02:26,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,303 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：123的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 103}, 'displayName': '汉EV旗舰版', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV旗舰版', 'bms': 1, 'id': 123, 'nationalStandard': 255}
2022-04-28 16:02:26,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:02:26,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [123]}
2022-04-28 16:02:26,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:02:26,312 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：123的记录
2022-04-28 16:02:26,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:02:26,319 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": 103}
2022-04-28 16:02:26,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-28 16:02:26,319 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-28 16:06:08,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:06:08,649 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "5GSX"}
2022-04-28 16:06:08,649 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,649 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"34ecf3bfbf87467aa32424c7f682859b"}
2022-04-28 16:06:08,654 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:06:08,654 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:06:08,654 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:06:08,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:06:08,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,675 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：104
2022-04-28 16:06:08,703 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:06:08,704 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:06:08,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,710 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 16:06:08,710 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 16:06:08,710 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,710 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 16:06:08,721 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 16:06:08,721 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 104}
2022-04-28 16:06:08,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:06:08,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 104}, "name": "\u6c49EV"}}
2022-04-28 16:06:08,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,732 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：124
2022-04-28 16:06:08,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:06:08,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:06:08,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:06:08,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 124}
2022-04-28 16:06:08,775 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,775 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：124的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 104}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 124, 'nationalStandard': 255}
2022-04-28 16:06:08,784 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:06:08,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 124}
2022-04-28 16:06:08,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,785 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：124的记录已成功
2022-04-28 16:06:08,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:06:08,829 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:06:08,829 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,837 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:06:08,837 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 124}
2022-04-28 16:06:08,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,837 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：124的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 104}, 'displayName': '汉EV旗舰版', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV旗舰版', 'bms': 1, 'id': 124, 'nationalStandard': 255}
2022-04-28 16:06:08,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:06:08,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [124]}
2022-04-28 16:06:08,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,849 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：124的记录
2022-04-28 16:06:08,859 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:06:08,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [104]}
2022-04-28 16:06:08,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:06:08,859 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：104的记录
2022-04-28 16:22:14,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:22:14,976 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9MWX"}
2022-04-28 16:22:14,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:14,977 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"bbe82e7b4f9a4ea1842713cc57164741"}
2022-04-28 16:22:14,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:22:14,982 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:22:14,982 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:14,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:22:14,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:22:14,991 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:14,991 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：105
2022-04-28 16:22:15,021 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:22:15,021 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:22:15,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:22:15,028 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 105}
2022-04-28 16:22:15,028 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,028 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：105的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 105, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:22:15,033 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:22:15,033 INFO [root] [key.py (post:21] - 传的参数是：{"id": 105, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 16:22:15,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:22:15,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 105}
2022-04-28 16:22:15,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,040 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：105的记录已成功
2022-04-28 16:22:15,068 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:22:15,068 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:22:15,068 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,076 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:22:15,076 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 105}
2022-04-28 16:22:15,076 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:22:15,076 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：105的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 105, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:23:36,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:23:36,368 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NEPX"}
2022-04-28 16:23:36,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,368 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"d4c7f0b6a0df45afa72a2457645b28ea"}
2022-04-28 16:23:36,375 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:23:36,376 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:23:36,376 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:23:36,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:23:36,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,387 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：106
2022-04-28 16:23:36,418 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:23:36,419 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:23:36,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,426 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:23:36,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 106}
2022-04-28 16:23:36,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,427 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：106的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 106, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:23:36,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:23:36,432 INFO [root] [key.py (post:21] - 传的参数是：{"id": 106, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 16:23:36,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:23:36,442 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 106}
2022-04-28 16:23:36,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,442 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：106的记录已成功
2022-04-28 16:23:36,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:23:36,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:23:36,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:23:36,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 106}
2022-04-28 16:23:36,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:23:36,480 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：106的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 106, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:25:20,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:25:20,023 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "C2GW"}
2022-04-28 16:25:20,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,023 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"4219d6ba2a80412d973bf922bbea097c"}
2022-04-28 16:25:20,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:25:20,030 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:25:20,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,039 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:25:20,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:25:20,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,040 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：107
2022-04-28 16:25:20,070 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:25:20,071 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:25:20,071 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,078 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:25:20,078 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 107}
2022-04-28 16:25:20,078 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,078 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：107的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 107, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:25:20,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:25:20,084 INFO [root] [key.py (post:21] - 传的参数是：{"id": 107, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 16:25:20,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:25:20,092 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 107}
2022-04-28 16:25:20,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,092 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：107的记录已成功
2022-04-28 16:25:20,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:25:20,121 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:25:20,121 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,130 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:25:20,130 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 107}
2022-04-28 16:25:20,130 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,130 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：107的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADIHAN', 'displayName': '比亚迪汉', 'name': '比亚迪汉', 'carModelCount': 0, 'id': 107, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:25:20,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:25:20,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [107]}
2022-04-28 16:25:20,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,139 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：107的记录
2022-04-28 16:25:20,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:25:20,170 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:25:20,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,180 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 16:25:20,180 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea"]], "sort": ""}
2022-04-28 16:25:20,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:25:20,181 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件： '比亚迪']]符合的记录数是：3条
2022-04-28 16:50:07,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:50:07,254 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "58W4"}
2022-04-28 16:50:07,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,254 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f791619a8a46411aab3a790c57a36b0f"}
2022-04-28 16:50:07,261 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:50:07,261 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:50:07,261 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:50:07,282 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:50:07,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,282 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：108
2022-04-28 16:50:07,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:50:07,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:50:07,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:50:07,320 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 108}
2022-04-28 16:50:07,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,320 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：108的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 108, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:50:07,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:50:07,325 INFO [root] [key.py (post:21] - 传的参数是：{"id": 108, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 16:50:07,325 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:50:07,333 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 108}
2022-04-28 16:50:07,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,333 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：108的记录已成功
2022-04-28 16:50:07,361 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:50:07,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:50:07,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 16:50:07,373 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]], "sort": ""}
2022-04-28 16:50:07,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,373 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件： '比亚迪汉']]符合的记录数是：1条
2022-04-28 16:50:07,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:50:07,383 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [108]}
2022-04-28 16:50:07,383 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:50:07,383 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：108的记录
2022-04-28 16:52:03,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 16:52:03,983 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "R735"}
2022-04-28 16:52:03,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:03,983 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f96f236d2a59475d9835c2bc0b7f3c62"}
2022-04-28 16:52:03,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:52:03,990 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 16:52:03,991 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,004 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 16:52:04,004 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 16:52:04,004 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,004 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：109
2022-04-28 16:52:04,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:52:04,042 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:52:04,042 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,050 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 16:52:04,050 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 109}
2022-04-28 16:52:04,050 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,050 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：109的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 109, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 16:52:04,055 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 16:52:04,055 INFO [root] [key.py (post:21] - 传的参数是：{"id": 109, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 16:52:04,055 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 16:52:04,064 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 109}
2022-04-28 16:52:04,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,064 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：109的记录已成功
2022-04-28 16:52:04,095 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 16:52:04,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 16:52:04,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,103 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 16:52:04,103 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "offset": 1, "limit": 20, "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]], "sort": ""}
2022-04-28 16:52:04,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,103 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件： '比亚迪汉'符合的记录数是：1条
2022-04-28 16:52:04,120 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 16:52:04,120 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [109]}
2022-04-28 16:52:04,120 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 16:52:04,120 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：109的记录
2022-04-28 17:09:39,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:09:39,115 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3M34"}
2022-04-28 17:09:39,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,115 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"ce85280bddbe40dfaf57659104e3a7cc"}
2022-04-28 17:09:39,122 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:09:39,122 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:09:39,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:09:39,134 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:09:39,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,134 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：110
2022-04-28 17:09:39,163 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:09:39,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:09:39,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:09:39,170 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 110}
2022-04-28 17:09:39,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,170 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：110的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 110, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-28 17:09:39,175 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:09:39,175 INFO [root] [key.py (post:21] - 传的参数是：{"id": 110, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-28 17:09:39,175 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:09:39,183 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 110}
2022-04-28 17:09:39,184 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,184 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：110的记录已成功
2022-04-28 17:09:39,217 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:09:39,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:09:39,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:09:39,226 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-28 17:09:39,226 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,226 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件： '比亚迪汉'符合的记录数是：1条
2022-04-28 17:09:39,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:09:39,233 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [110]}
2022-04-28 17:09:39,233 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:09:39,233 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：110的记录
2022-04-28 17:12:14,653 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:12:14,654 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9FWH"}
2022-04-28 17:12:14,654 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,654 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"bd58fa34ebe84836b273e5a3289b65e7"}
2022-04-28 17:12:14,660 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:12:14,660 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:12:14,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:12:14,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:12:14,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,679 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：111
2022-04-28 17:12:14,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:12:14,716 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:12:14,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:12:14,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:12:14,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,723 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:12:14,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:12:14,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 111}
2022-04-28 17:12:14,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,750 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:12:14,750 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 111}, "name": "\u6c49EV"}}
2022-04-28 17:12:14,750 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,750 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：125
2022-04-28 17:12:14,806 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:12:14,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:12:14,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:12:14,814 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 125}
2022-04-28 17:12:14,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,814 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：125的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 111}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 125, 'nationalStandard': 255}
2022-04-28 17:12:14,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:12:14,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 125}
2022-04-28 17:12:14,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,833 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：125的记录已成功
2022-04-28 17:12:14,878 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:12:14,878 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:12:14,879 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:12:14,898 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 17:12:14,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,899 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件： '汉EV旗舰版'符合的记录数是：1条
2022-04-28 17:12:14,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:12:14,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [125]}
2022-04-28 17:12:14,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,920 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：125的记录
2022-04-28 17:12:14,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:12:14,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [111]}
2022-04-28 17:12:14,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:12:14,933 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：111的记录
2022-04-28 17:24:34,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:24:34,507 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LLNS"}
2022-04-28 17:24:34,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,507 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5a96604b545b4d1c8e0b64d0be837a45"}
2022-04-28 17:24:34,512 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:24:34,513 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:24:34,513 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:24:34,523 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:24:34,523 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,523 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：112
2022-04-28 17:24:34,561 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:24:34,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:24:34,562 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,568 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:24:34,568 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:24:34,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,568 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:24:34,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:24:34,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 112}
2022-04-28 17:24:34,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,583 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:24:34,583 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 112}, "name": "\u6c49EV"}}
2022-04-28 17:24:34,583 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,583 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：126
2022-04-28 17:24:34,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:24:34,618 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:24:34,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:24:34,624 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:24:34,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,624 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:24:34,631 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:24:34,631 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 126}
2022-04-28 17:24:34,631 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,645 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:24:34,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 126}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:24:34,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,645 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：105
2022-04-28 17:24:34,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:24:34,670 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:24:34,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,677 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:24:34,677 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 105}
2022-04-28 17:24:34,677 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,677 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：105的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 126}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 105}
2022-04-28 17:24:34,684 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:24:34,685 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 105}
2022-04-28 17:24:34,685 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,685 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：105的记录已成功
2022-04-28 17:24:34,727 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:24:34,727 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:24:34,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:24:34,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:24:34,738 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u7ca4GF920U"]]}
2022-04-28 17:24:34,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 419
2022-04-28 17:24:34,739 ERROR [root] [key.py (post:28] - 出现异常，code:419不等于200
2022-04-28 17:26:26,713 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:26:26,713 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "22BA"}
2022-04-28 17:26:26,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,714 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"54fca35e1d3d4a9584d422cb14bac531"}
2022-04-28 17:26:26,719 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:26:26,719 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:26:26,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,728 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:26:26,728 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:26:26,728 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,728 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：113
2022-04-28 17:26:26,753 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:26:26,753 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:26:26,753 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:26:26,758 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:26:26,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,758 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:26:26,765 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:26:26,765 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 113}
2022-04-28 17:26:26,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:26:26,773 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 113}, "name": "\u6c49EV"}}
2022-04-28 17:26:26,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,773 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：127
2022-04-28 17:26:26,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:26:26,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:26:26,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:26:26,811 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:26:26,811 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,811 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:26:26,818 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:26:26,818 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 127}
2022-04-28 17:26:26,819 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:26:26,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 127}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:26:26,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,833 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：106
2022-04-28 17:26:26,859 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:26:26,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:26:26,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:26:26,866 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 106}
2022-04-28 17:26:26,866 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,867 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：106的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 127}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 106}
2022-04-28 17:26:26,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:26:26,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 106}
2022-04-28 17:26:26,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:26:26,883 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：106的记录已成功
2022-04-28 17:26:26,913 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:26:26,913 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:26:26,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:27:25,494 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "482L"}
2022-04-28 17:27:25,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,495 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"501e87b6209d4feca972e90f37a834be"}
2022-04-28 17:27:25,500 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:27:25,500 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:27:25,500 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:27:25,509 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:27:25,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,509 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：114
2022-04-28 17:27:25,542 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:27:25,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:27:25,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:27:25,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:27:25,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,551 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:27:25,560 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:27:25,560 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 114}
2022-04-28 17:27:25,560 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,569 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:27:25,569 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 114}, "name": "\u6c49EV"}}
2022-04-28 17:27:25,569 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,569 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：128
2022-04-28 17:27:25,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:27:25,600 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:27:25,600 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:27:25,607 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:27:25,607 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,607 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:27:25,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:27:25,614 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 128}
2022-04-28 17:27:25,614 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:27:25,625 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 128}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:27:25,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,625 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：107
2022-04-28 17:27:25,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:27:25,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:27:25,662 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,672 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:27:25,672 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 107}
2022-04-28 17:27:25,672 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,673 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：107的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 128}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 107}
2022-04-28 17:27:25,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:27:25,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 107}
2022-04-28 17:27:25,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:27:25,687 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：107的记录已成功
2022-04-28 17:27:25,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:27:25,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:27:25,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,203 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:29:05,203 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "M9SL"}
2022-04-28 17:29:05,203 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,203 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"3fa24c9305a34aa6b5cec8823c11e729"}
2022-04-28 17:29:05,210 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:29:05,210 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:29:05,210 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:29:05,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:29:05,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,219 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：115
2022-04-28 17:29:05,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:29:05,246 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:29:05,246 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,252 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:29:05,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:29:05,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,253 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:29:05,259 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:29:05,260 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 115}
2022-04-28 17:29:05,260 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:29:05,271 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 115}, "name": "\u6c49EV"}}
2022-04-28 17:29:05,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,271 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：129
2022-04-28 17:29:05,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:29:05,298 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:29:05,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:29:05,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:29:05,304 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,304 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:29:05,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:29:05,310 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 129}
2022-04-28 17:29:05,310 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:29:05,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 129}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:29:05,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,321 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：108
2022-04-28 17:29:05,348 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:29:05,348 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:29:05,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:29:05,357 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 108}
2022-04-28 17:29:05,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,357 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：108的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 129}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 108}
2022-04-28 17:29:05,365 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:29:05,365 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 108}
2022-04-28 17:29:05,366 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:29:05,366 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：108的记录已成功
2022-04-28 17:29:05,392 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:29:05,392 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:29:05,392 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,781 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:50:54,781 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SD42"}
2022-04-28 17:50:54,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,781 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"1c4c23f264ce42daa88cd8b10c0b76a5"}
2022-04-28 17:50:54,787 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:50:54,787 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:50:54,787 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,799 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:50:54,799 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:50:54,799 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,799 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：116
2022-04-28 17:50:54,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:50:54,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:50:54,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:50:54,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:50:54,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,833 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:50:54,839 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:50:54,839 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 116}
2022-04-28 17:50:54,839 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:50:54,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 116}, "name": "\u6c49EV"}}
2022-04-28 17:50:54,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,848 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：130
2022-04-28 17:50:54,875 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:50:54,875 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:50:54,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:50:54,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:50:54,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,883 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:50:54,891 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:50:54,891 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 130}
2022-04-28 17:50:54,891 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:50:54,901 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 130}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:50:54,901 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,901 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：109
2022-04-28 17:50:54,934 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:50:54,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:50:54,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,942 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:50:54,942 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 109}
2022-04-28 17:50:54,942 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,943 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：109的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 130}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 109}
2022-04-28 17:50:54,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:50:54,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 109}
2022-04-28 17:50:54,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:50:54,951 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：109的记录已成功
2022-04-28 17:50:54,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:50:54,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:50:54,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,271 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:51:53,271 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SL4N"}
2022-04-28 17:51:53,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,271 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e7e740e7e4944bdcbae0df33ad68e062"}
2022-04-28 17:51:53,277 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:51:53,277 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:51:53,277 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:51:53,287 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:51:53,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,287 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：117
2022-04-28 17:51:53,314 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:51:53,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:51:53,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:51:53,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:51:53,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,321 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:51:53,328 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:51:53,328 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 117}
2022-04-28 17:51:53,328 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,337 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:51:53,337 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 117}, "name": "\u6c49EV"}}
2022-04-28 17:51:53,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,338 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：131
2022-04-28 17:51:53,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:51:53,372 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:51:53,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,379 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:51:53,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 131}
2022-04-28 17:51:53,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,380 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：131的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 117}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 131, 'nationalStandard': 255}
2022-04-28 17:51:53,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:51:53,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 131}
2022-04-28 17:51:53,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,388 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：131的记录已成功
2022-04-28 17:51:53,414 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:51:53,414 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:51:53,414 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,423 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:51:53,423 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 17:51:53,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,423 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件： '汉EV旗舰版'符合的记录数是：1条
2022-04-28 17:51:53,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:51:53,432 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [131]}
2022-04-28 17:51:53,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,432 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：131的记录
2022-04-28 17:51:53,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:51:53,441 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [117]}
2022-04-28 17:51:53,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:51:53,441 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：117的记录
2022-04-28 17:52:33,956 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:52:33,956 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6X9R"}
2022-04-28 17:52:33,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:33,956 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e1ffbb661d594909860cd01ef21dcd38"}
2022-04-28 17:52:33,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:52:33,964 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:52:33,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:33,973 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:52:33,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:52:33,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:33,973 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：118
2022-04-28 17:52:33,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:33,999 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:33,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:52:34,005 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:52:34,005 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,005 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:52:34,011 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:52:34,011 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 118}
2022-04-28 17:52:34,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,021 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:52:34,021 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 118}, "name": "\u6c49EV"}}
2022-04-28 17:52:34,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,021 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：132
2022-04-28 17:52:34,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,059 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,066 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:52:34,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:52:34,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,066 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:52:34,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:52:34,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 132}
2022-04-28 17:52:34,072 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:52:34,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 132}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:52:34,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,085 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：110
2022-04-28 17:52:34,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:52:34,122 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 110}
2022-04-28 17:52:34,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,122 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：110的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 132}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 110}
2022-04-28 17:52:34,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:52:34,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 110}
2022-04-28 17:52:34,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,138 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：110的记录已成功
2022-04-28 17:52:34,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,170 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,171 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:52:34,182 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u7ca4GF920U"]]}
2022-04-28 17:52:34,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,182 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '粤GF920U'符合的记录数是：0条
2022-04-28 17:52:34,223 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:52:34,237 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u7ca4GF920U"]]}
2022-04-28 17:52:34,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,237 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '粤GF920U'符合的记录数是：0条
2022-04-28 17:52:34,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,271 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:52:34,280 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "TEST0000000000005"]]}
2022-04-28 17:52:34,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,281 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： 'TEST0000000000005'符合的记录数是：0条
2022-04-28 17:52:34,306 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:52:34,306 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:52:34,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:52:34,315 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u6c49EV"]]}
2022-04-28 17:52:34,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,315 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '汉EV'符合的记录数是：0条
2022-04-28 17:52:34,326 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:52:34,326 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [110]}
2022-04-28 17:52:34,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,326 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：110的记录
2022-04-28 17:52:34,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:52:34,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [132]}
2022-04-28 17:52:34,336 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,336 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：132的记录
2022-04-28 17:52:34,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:52:34,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [118]}
2022-04-28 17:52:34,347 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:52:34,347 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：118的记录
2022-04-28 17:57:01,035 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:57:01,035 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3YNG"}
2022-04-28 17:57:01,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,036 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2998ec18f4fa4964949da94de5157f08"}
2022-04-28 17:57:01,041 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:57:01,041 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:57:01,041 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,053 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:57:01,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:57:01,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,053 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：119
2022-04-28 17:57:01,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:01,080 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:01,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,086 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:57:01,086 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:57:01,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,086 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:57:01,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:57:01,092 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 119}
2022-04-28 17:57:01,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:57:01,100 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 119}, "name": "\u6c49EV"}}
2022-04-28 17:57:01,100 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,101 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：133
2022-04-28 17:57:01,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:01,127 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:01,127 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,134 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:57:01,134 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 133}
2022-04-28 17:57:01,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,134 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：133的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 119}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 133, 'nationalStandard': 255}
2022-04-28 17:57:01,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:57:01,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 133}
2022-04-28 17:57:01,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,144 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：133的记录已成功
2022-04-28 17:57:01,173 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:01,173 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:01,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:57:01,182 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 17:57:01,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,183 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件： '汉EV旗舰版'符合的记录数是：1条
2022-04-28 17:57:01,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:57:01,191 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [133]}
2022-04-28 17:57:01,191 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,191 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：133的记录
2022-04-28 17:57:01,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:57:01,201 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [119]}
2022-04-28 17:57:01,201 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:01,201 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：119的记录
2022-04-28 17:57:42,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 17:57:42,514 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "D9XF"}
2022-04-28 17:57:42,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,514 INFO [root] [key.py (login:94] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"7f1d5c2c666542c7a9bab77a6f4353a9"}
2022-04-28 17:57:42,520 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 17:57:42,520 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 17:57:42,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:57:42,529 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 17:57:42,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,529 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：120
2022-04-28 17:57:42,562 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,562 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,568 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:57:42,568 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 17:57:42,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,568 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 17:57:42,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:57:42,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 120}
2022-04-28 17:57:42,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:57:42,585 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 120}, "name": "\u6c49EV"}}
2022-04-28 17:57:42,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,586 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：134
2022-04-28 17:57:42,613 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,613 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,619 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 17:57:42,619 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 17:57:42,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,619 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 17:57:42,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 17:57:42,626 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 134}
2022-04-28 17:57:42,626 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 17:57:42,636 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 134}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 17:57:42,636 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,636 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：111
2022-04-28 17:57:42,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,677 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 17:57:42,677 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 111}
2022-04-28 17:57:42,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,678 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：111的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 134}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 111}
2022-04-28 17:57:42,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 17:57:42,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 111}
2022-04-28 17:57:42,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,695 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：111的记录已成功
2022-04-28 17:57:42,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,722 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,730 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:57:42,730 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u7ca4GF920U"]]}
2022-04-28 17:57:42,730 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,730 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '粤GF920U'符合的记录数是：0条
2022-04-28 17:57:42,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,758 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:57:42,767 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u7ca4GF920U"]]}
2022-04-28 17:57:42,767 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,767 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '粤GF920U'符合的记录数是：0条
2022-04-28 17:57:42,793 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,793 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,801 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:57:42,802 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "TEST0000000000005"]]}
2022-04-28 17:57:42,802 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,802 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： 'TEST0000000000005'符合的记录数是：0条
2022-04-28 17:57:42,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 17:57:42,828 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 17:57:42,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,837 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 17:57:42,837 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["name", "like", "\u6c49EV"]]}
2022-04-28 17:57:42,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,838 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件： '汉EV'符合的记录数是：0条
2022-04-28 17:57:42,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:57:42,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [111]}
2022-04-28 17:57:42,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,848 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：111的记录
2022-04-28 17:57:42,857 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:57:42,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [134]}
2022-04-28 17:57:42,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,857 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：134的记录
2022-04-28 17:57:42,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 17:57:42,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [120]}
2022-04-28 17:57:42,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 17:57:42,868 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：120的记录
2022-04-28 18:01:22,658 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:01:22,659 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QXB4"}
2022-04-28 18:01:22,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,659 INFO [root] [key.py (login:95] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"6b1f85381db6402f864eecc972c5100e"}
2022-04-28 18:01:22,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:01:22,669 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:01:22,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:01:22,680 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:01:22,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,680 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：121
2022-04-28 18:01:22,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:01:22,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:01:22,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,729 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:01:22,735 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:01:22,735 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 121}
2022-04-28 18:01:22,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,749 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:01:22,749 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 121}, "name": "\u6c49EV"}}
2022-04-28 18:01:22,749 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,750 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：135
2022-04-28 18:01:22,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:01:22,782 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 18:01:22,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,782 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 18:01:22,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:01:22,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 135}
2022-04-28 18:01:22,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,797 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:01:22,797 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 135}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 18:01:22,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,798 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：112
2022-04-28 18:01:22,824 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,825 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,825 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:01:22,832 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 112}
2022-04-28 18:01:22,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,832 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：112的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 135}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 112}
2022-04-28 18:01:22,839 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:01:22,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 112}
2022-04-28 18:01:22,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,840 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：112的记录已成功
2022-04-28 18:01:22,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,866 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:01:22,876 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:01:22,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,876 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按[['number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:01:22,909 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,909 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,910 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:01:22,919 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:01:22,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,919 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按[['number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:01:22,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,954 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:01:22,954 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "TEST0000000000005"]]}
2022-04-28 18:01:22,954 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,954 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按[['number'搜索 'TEST0000000000005'符合的记录数是：0条
2022-04-28 18:01:22,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:01:22,983 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:01:22,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,991 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:01:22,991 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u6c49EV"]]}
2022-04-28 18:01:22,991 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,991 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按[['number'搜索 '汉EV'符合的记录数是：0条
2022-04-28 18:01:22,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:01:22,998 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [112]}
2022-04-28 18:01:22,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:22,999 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：112的记录
2022-04-28 18:01:23,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:01:23,006 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [135]}
2022-04-28 18:01:23,007 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:23,007 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：135的记录
2022-04-28 18:01:23,015 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:01:23,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [121]}
2022-04-28 18:01:23,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:01:23,015 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：121的记录
2022-04-28 18:02:26,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:02:26,836 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "S257"}
2022-04-28 18:02:26,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,836 INFO [root] [key.py (login:95] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"0ace2dffba2c484d9401390c8d630dc2"}
2022-04-28 18:02:26,842 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:02:26,842 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:02:26,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,851 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:02:26,851 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:02:26,851 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,851 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：122
2022-04-28 18:02:26,878 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:26,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:26,879 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:02:26,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:02:26,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,884 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:02:26,890 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:02:26,891 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 122}
2022-04-28 18:02:26,891 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:02:26,899 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 122}, "name": "\u6c49EV"}}
2022-04-28 18:02:26,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,899 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：136
2022-04-28 18:02:26,925 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:26,925 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:26,925 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,931 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:02:26,931 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 18:02:26,931 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,931 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 18:02:26,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:02:26,937 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 136}
2022-04-28 18:02:26,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:02:26,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 136}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 18:02:26,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,947 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：113
2022-04-28 18:02:26,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:26,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:26,979 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,987 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:02:26,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 113}
2022-04-28 18:02:26,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,988 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：113的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 136}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 113}
2022-04-28 18:02:26,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:02:26,998 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 113}
2022-04-28 18:02:26,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:26,998 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：113的记录已成功
2022-04-28 18:02:27,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:27,038 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:27,038 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,048 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:02:27,048 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:02:27,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,048 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:02:27,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:27,079 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:27,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:02:27,089 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:02:27,089 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,089 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:02:27,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:27,126 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:27,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,140 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:02:27,140 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "TEST0000000000005"]]}
2022-04-28 18:02:27,141 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,141 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 'TEST0000000000005'符合的记录数是：0条
2022-04-28 18:02:27,180 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:02:27,180 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:02:27,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:02:27,192 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u6c49EV"]]}
2022-04-28 18:02:27,192 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,192 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 '汉EV'符合的记录数是：0条
2022-04-28 18:02:27,204 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:02:27,204 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [113]}
2022-04-28 18:02:27,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,204 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：113的记录
2022-04-28 18:02:27,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:02:27,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [136]}
2022-04-28 18:02:27,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,219 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：136的记录
2022-04-28 18:02:27,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:02:27,237 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [122]}
2022-04-28 18:02:27,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:02:27,237 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：122的记录
2022-04-28 18:04:56,119 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:04:56,119 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "TK2R"}
2022-04-28 18:04:56,120 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,120 INFO [root] [key.py (login:95] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b68b9e1ccf984a19b2456320c3a6f10e"}
2022-04-28 18:04:56,125 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:04:56,126 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:04:56,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:04:56,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:04:56,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,137 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：123
2022-04-28 18:04:56,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:04:56,166 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:04:56,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:04:56,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:04:56,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,172 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:04:56,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:04:56,178 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 123}
2022-04-28 18:04:56,179 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:04:56,187 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 123}, "name": "\u6c49EV"}}
2022-04-28 18:04:56,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,187 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：137
2022-04-28 18:04:56,213 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:04:56,213 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:04:56,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:04:56,221 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 137}
2022-04-28 18:04:56,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,221 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：137的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 123}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 137, 'nationalStandard': 255}
2022-04-28 18:04:56,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:04:56,230 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 137}
2022-04-28 18:04:56,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,231 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：137的记录已成功
2022-04-28 18:04:56,260 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:04:56,260 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:04:56,262 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:04:56,293 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:04:56,293 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["\u540d\u79f0", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 18:04:56,294 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 419
2022-04-28 18:04:56,294 ERROR [root] [key.py (post:28] - 出现异常，code:419不等于200
2022-04-28 18:10:04,440 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:10:04,440 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6D4V"}
2022-04-28 18:10:04,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,441 INFO [root] [key.py (login:95] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"16a61cc807764c8da93aefeede44901b"}
2022-04-28 18:10:04,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:10:04,446 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:10:04,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:10:04,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:10:04,458 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,458 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：124
2022-04-28 18:10:04,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:10:04,484 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:10:04,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,490 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:10:04,490 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:10:04,491 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,491 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:10:04,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:10:04,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 124}
2022-04-28 18:10:04,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:10:04,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 124}, "name": "\u6c49EV"}}
2022-04-28 18:10:04,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,508 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：138
2022-04-28 18:10:04,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:10:04,537 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:10:04,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,543 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:10:04,544 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 138}
2022-04-28 18:10:04,544 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,544 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：138的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 124}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 138, 'nationalStandard': 255}
2022-04-28 18:10:04,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:10:04,556 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 138}
2022-04-28 18:10:04,556 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,557 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：138的记录已成功
2022-04-28 18:10:04,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:10:04,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:10:04,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,605 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:10:04,606 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 18:10:04,606 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,606 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-28 18:10:04,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:10:04,651 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:10:04,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,664 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:10:04,664 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-28 18:10:04,664 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,665 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-28 18:10:04,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:10:04,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [138]}
2022-04-28 18:10:04,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,678 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：138的记录
2022-04-28 18:10:04,701 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:10:04,701 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [124]}
2022-04-28 18:10:04,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:10:04,701 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：124的记录
2022-04-28 18:14:49,956 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:14:49,956 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HRBX"}
2022-04-28 18:14:49,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:49,956 INFO [root] [key.py (login:95] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"166dfd74fe8246ed82e6d1beb1f528d8"}
2022-04-28 18:14:49,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:14:49,963 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:14:49,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:49,971 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:14:49,971 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:14:49,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:49,971 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：125
2022-04-28 18:14:49,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:49,998 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:49,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,004 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:14:50,004 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:14:50,004 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,004 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:14:50,009 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:14:50,010 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 125}
2022-04-28 18:14:50,010 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,017 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:14:50,017 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 125}, "name": "\u6c49EV"}}
2022-04-28 18:14:50,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,017 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：139
2022-04-28 18:14:50,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,048 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:14:50,049 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 18:14:50,049 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,049 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 18:14:50,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:14:50,056 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 139}
2022-04-28 18:14:50,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,069 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:14:50,069 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 139}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 18:14:50,069 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,070 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：114
2022-04-28 18:14:50,096 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,096 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,097 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:14:50,108 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 114}
2022-04-28 18:14:50,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,108 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：114的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 139}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 114}
2022-04-28 18:14:50,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:14:50,118 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 114}
2022-04-28 18:14:50,118 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,119 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：114的记录已成功
2022-04-28 18:14:50,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:14:50,153 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:14:50,153 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,154 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:14:50,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,181 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,181 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:14:50,191 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF920U"]]}
2022-04-28 18:14:50,191 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,191 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'remark'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:14:50,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,227 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:14:50,227 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000005"]]}
2022-04-28 18:14:50,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,227 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000005'符合的记录数是：1条
2022-04-28 18:14:50,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,253 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,263 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:14:50,263 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-04-28 18:14:50,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,263 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-04-28 18:14:50,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:14:50,288 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:14:50,288 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,297 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:14:50,297 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-04-28 18:14:50,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,298 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-04-28 18:14:50,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:14:50,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [114]}
2022-04-28 18:14:50,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,315 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：114的记录
2022-04-28 18:14:50,324 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:14:50,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [139]}
2022-04-28 18:14:50,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,324 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：139的记录
2022-04-28 18:14:50,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:14:50,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [125]}
2022-04-28 18:14:50,336 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:14:50,336 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：125的记录
2022-04-28 18:27:20,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:27:20,829 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QENB"}
2022-04-28 18:27:20,829 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,829 INFO [root] [key.py (login:103] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"8edf2847e5294115a61754c1fb03e2de"}
2022-04-28 18:27:20,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:27:20,835 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:27:20,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:27:20,847 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:27:20,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,847 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：126
2022-04-28 18:27:20,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:27:20,876 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:27:20,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:27:20,882 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:27:20,882 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,882 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:27:20,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:27:20,889 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 126}
2022-04-28 18:27:20,889 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,902 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:27:20,902 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 126}, "name": "\u6c49EV"}}
2022-04-28 18:27:20,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,903 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：140
2022-04-28 18:27:20,930 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:27:20,930 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:27:20,931 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:27:20,940 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 140}
2022-04-28 18:27:20,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,940 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：140的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 126}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 140, 'nationalStandard': 255}
2022-04-28 18:27:20,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:27:20,948 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 140}
2022-04-28 18:27:20,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,949 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：140的记录已成功
2022-04-28 18:27:20,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:27:20,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:27:20,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:27:20,995 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 18:27:20,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:20,996 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-28 18:27:21,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:27:21,025 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:27:21,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:21,035 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:27:21,035 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-28 18:27:21,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:21,036 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-28 18:27:21,061 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:27:21,061 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:27:21,061 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:21,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:27:21,073 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [140]}
2022-04-28 18:27:21,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:21,073 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：140的记录
2022-04-28 18:27:21,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:27:21,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [126]}
2022-04-28 18:27:21,094 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:27:21,094 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：126的记录
2022-04-28 18:29:08,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:29:08,676 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9B3S"}
2022-04-28 18:29:08,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,676 INFO [root] [key.py (login:103] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f88a1edd506f4465b3b17a0d7ed8cd7f"}
2022-04-28 18:29:08,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:29:08,682 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:29:08,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,690 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:29:08,691 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:29:08,691 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,691 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：127
2022-04-28 18:29:08,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:29:08,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:29:08,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:29:08,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:29:08,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,724 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:29:08,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:29:08,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 127}
2022-04-28 18:29:08,733 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:29:08,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 127}, "name": "\u6c49EV"}}
2022-04-28 18:29:08,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,743 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：141
2022-04-28 18:29:08,774 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:29:08,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:29:08,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:29:08,783 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 141}
2022-04-28 18:29:08,783 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,783 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：141的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 127}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 141, 'nationalStandard': 255}
2022-04-28 18:29:08,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:29:08,795 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 141}
2022-04-28 18:29:08,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,795 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：141的记录已成功
2022-04-28 18:29:08,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:29:08,828 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:29:08,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,837 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:29:08,837 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-28 18:29:08,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,838 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-28 18:29:08,873 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:29:08,873 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:29:08,873 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:29:08,883 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-28 18:29:08,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,884 INFO [root] [key.py (search_read:78] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-28 18:29:08,910 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:29:08,910 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:29:08,911 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,927 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-28 18:29:08,927 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-28 18:29:08,927 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,927 INFO [root] [key.py (read_group:87] - 模型：customer_car_model按'carBrandId'分组，响应的record为：{'records': [{'_domain': [['carBrandId', '=', 127]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 127}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 5}
2022-04-28 18:29:08,935 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:29:08,936 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [141]}
2022-04-28 18:29:08,936 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,936 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：141的记录
2022-04-28 18:29:08,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:29:08,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [127]}
2022-04-28 18:29:08,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:29:08,946 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：127的记录
2022-04-28 18:32:55,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-28 18:32:55,143 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "X5TG"}
2022-04-28 18:32:55,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,143 INFO [root] [key.py (login:103] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"08d1bd4d4d7c41b2b0f9901b4db351cb"}
2022-04-28 18:32:55,149 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-28 18:32:55,150 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-28 18:32:55,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:32:55,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-28 18:32:55,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,163 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：128
2022-04-28 18:32:55,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,203 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:32:55,203 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-28 18:32:55,203 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,203 INFO [root] [key.py (default_get:72] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-28 18:32:55,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:32:55,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 128}
2022-04-28 18:32:55,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:32:55,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 128}, "name": "\u6c49EV"}}
2022-04-28 18:32:55,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,220 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：142
2022-04-28 18:32:55,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,246 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,247 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,252 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-28 18:32:55,253 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-28 18:32:55,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,253 INFO [root] [key.py (default_get:72] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-28 18:32:55,259 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-28 18:32:55,259 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 142}
2022-04-28 18:32:55,259 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,272 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-28 18:32:55,272 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 142}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-28 18:32:55,272 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,272 INFO [root] [key.py (create:34] - 创建模型：customer_car新记录，id为：115
2022-04-28 18:32:55,305 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,306 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,313 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-28 18:32:55,313 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 115}
2022-04-28 18:32:55,313 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,313 INFO [root] [key.py (read:40] - 查看模型customer_car中id为：115的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 142}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 115}
2022-04-28 18:32:55,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-28 18:32:55,325 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 115}
2022-04-28 18:32:55,325 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,325 INFO [root] [key.py (edit:46] - 编辑模型customer_car中id为：115的记录已成功
2022-04-28 18:32:55,353 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,353 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,353 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,362 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:32:55,363 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-28 18:32:55,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,363 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:32:55,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,390 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,390 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,401 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:32:55,401 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF920U"]]}
2022-04-28 18:32:55,401 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,401 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'remark'搜索 '粤GF920U'符合的记录数是：2条
2022-04-28 18:32:55,427 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,427 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:32:55,436 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000005"]]}
2022-04-28 18:32:55,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,436 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000005'符合的记录数是：1条
2022-04-28 18:32:55,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:32:55,470 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-04-28 18:32:55,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,470 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-04-28 18:32:55,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,506 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,515 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-28 18:32:55,515 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-04-28 18:32:55,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,515 INFO [root] [key.py (search_read:78] - 模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-04-28 18:32:55,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,541 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,568 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-28 18:32:55,568 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-04-28 18:32:55,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,580 INFO [root] [key.py (read_group:87] - 模型：customer_car按'customerId'分组，响应内容中的record为：[{'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=?', None]], '_total': 2, 'customerId': {}}, {'_domain': [['customerId', '=', 14]], '_total': 6, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 2, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 36]], '_total': 6, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}]
2022-04-28 18:32:55,610 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-28 18:32:55,610 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-28 18:32:55,610 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,630 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-28 18:32:55,630 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-04-28 18:32:55,631 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,631 INFO [root] [key.py (read_group:87] - 模型：customer_car按'carModelId'分组，响应内容中的record为：[{'_domain': [['carModelId', '=', 142]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 142}, '_total': 1}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 1}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 18}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 5}]
2022-04-28 18:32:55,643 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:32:55,643 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [115]}
2022-04-28 18:32:55,643 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,643 INFO [root] [key.py (delete:52] - 已删除模型customer_car中id为：115的记录
2022-04-28 18:32:55,655 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:32:55,655 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [142]}
2022-04-28 18:32:55,655 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,655 INFO [root] [key.py (delete:52] - 已删除模型customer_car_model中id为：142的记录
2022-04-28 18:32:55,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-28 18:32:55,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [128]}
2022-04-28 18:32:55,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-28 18:32:55,677 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：128的记录
