2022-04-29 09:24:01,132 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 09:24:01,132 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PN3B"}
2022-04-29 09:24:01,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,132 INFO [root] [key.py (login:103] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"c29ab4ba7ecf41febd50e4945150fb6d"}
2022-04-29 09:24:01,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:24:01,240 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:24:01,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:24:01,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:24:01,267 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,267 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：129
2022-04-29 09:24:01,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:24:01,311 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:24:01,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,328 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 09:24:01,329 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 129}
2022-04-29 09:24:01,329 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,330 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：129的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 129, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 09:24:01,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:24:01,343 INFO [root] [key.py (post:21] - 传的参数是：{"id": 129, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:24:01,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 09:24:01,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 129}
2022-04-29 09:24:01,369 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,369 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：129的记录已成功
2022-04-29 09:24:01,402 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:24:01,403 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:24:01,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 09:24:01,415 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 09:24:01,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,415 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 09:24:01,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:24:01,432 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [129]}
2022-04-29 09:24:01,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,432 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：129的记录
2022-04-29 09:24:01,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:24:01,439 INFO [root] [key.py (post:21] - 传的参数是：{"id": 129, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:24:01,439 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,452 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:24:01,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:24:01,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,452 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：130
2022-04-29 09:24:01,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:24:01,462 INFO [root] [key.py (post:21] - 传的参数是：{"id": 129, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:24:01,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,474 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:24:01,474 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 09:24:01,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:24:01,475 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：131
2022-04-29 09:24:01,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:24:01,484 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [130, [1]]}
2022-04-29 09:24:01,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 500
2022-04-29 09:24:01,485 ERROR [root] [key.py (post:28] - 出现异常，code:500不等于200
2022-04-29 09:25:25,309 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 09:25:25,309 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "68N4"}
2022-04-29 09:25:25,309 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,309 INFO [root] [key.py (login:103] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"1c52a0c1267b429cb2bba3f1cc10177c"}
2022-04-29 09:25:25,317 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:25:25,317 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:25:25,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:25:25,333 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:25:25,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,333 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：132
2022-04-29 09:25:25,370 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:25:25,371 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:25:25,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 09:25:25,380 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 132}
2022-04-29 09:25:25,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,380 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：132的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 132, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 09:25:25,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:25:25,386 INFO [root] [key.py (post:21] - 传的参数是：{"id": 132, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:25:25,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 09:25:25,405 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 132}
2022-04-29 09:25:25,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,406 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：132的记录已成功
2022-04-29 09:25:25,463 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:25:25,463 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:25:25,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,477 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 09:25:25,477 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 09:25:25,477 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,477 INFO [root] [key.py (search_read:78] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 09:25:25,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:25:25,491 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [132]}
2022-04-29 09:25:25,491 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,491 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：132的记录
2022-04-29 09:25:25,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:25:25,498 INFO [root] [key.py (post:21] - 传的参数是：{"id": 132, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:25:25,498 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:25:25,508 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:25:25,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,508 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：133
2022-04-29 09:25:25,515 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:25:25,515 INFO [root] [key.py (post:21] - 传的参数是：{"id": 132, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:25:25,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:25:25,525 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 09:25:25,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,525 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：134
2022-04-29 09:25:25,545 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:25:25,545 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [133, 134]}
2022-04-29 09:25:25,545 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:25:25,545 INFO [root] [key.py (delete:52] - 已删除模型customer_car_brand中id为：133的记录
2022-04-29 09:40:59,576 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 09:40:59,576 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "W5FR"}
2022-04-29 09:40:59,576 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,576 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5db42842416546399263def28fc902fe"}
2022-04-29 09:40:59,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:40:59,582 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:40:59,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:40:59,591 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:40:59,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,591 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：135
2022-04-29 09:40:59,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:40:59,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:40:59,623 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,633 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 09:40:59,633 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 135}
2022-04-29 09:40:59,633 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,633 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：135的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 135, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 09:40:59,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:40:59,640 INFO [root] [key.py (post:21] - 传的参数是：{"id": 135, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:40:59,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 09:40:59,652 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 135}
2022-04-29 09:40:59,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,652 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：135的记录已成功
2022-04-29 09:40:59,695 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:40:59,695 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:40:59,695 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,708 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 09:40:59,708 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 09:40:59,709 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,709 INFO [root] [key.py (search_read:82] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 09:40:59,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:40:59,722 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [135]}
2022-04-29 09:40:59,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,722 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：135的记录
2022-04-29 09:40:59,731 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:40:59,731 INFO [root] [key.py (post:21] - 传的参数是：{"id": 135, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:40:59,731 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:40:59,748 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:40:59,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,748 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：136
2022-04-29 09:40:59,757 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:40:59,757 INFO [root] [key.py (post:21] - 传的参数是：{"id": 135, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:40:59,757 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,771 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:40:59,771 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 09:40:59,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:40:59,772 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：137
2022-04-29 09:40:59,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:40:59,788 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [136, 137]}
2022-04-29 09:40:59,788 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 09:45:39,674 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SS6T"}
2022-04-29 09:45:39,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,674 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"87268700a5754a25bfe9c2121bb25eb4"}
2022-04-29 09:45:39,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:45:39,681 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:45:39,681 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:45:39,692 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:45:39,692 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,692 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：138
2022-04-29 09:45:39,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:45:39,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:45:39,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 09:45:39,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 138}
2022-04-29 09:45:39,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,732 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：138的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 138, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 09:45:39,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:45:39,738 INFO [root] [key.py (post:21] - 传的参数是：{"id": 138, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:45:39,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 09:45:39,747 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 138}
2022-04-29 09:45:39,747 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,747 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：138的记录已成功
2022-04-29 09:45:39,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:45:39,777 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:45:39,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,786 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 09:45:39,786 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 09:45:39,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,786 INFO [root] [key.py (search_read:82] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 09:45:39,795 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:45:39,795 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [138]}
2022-04-29 09:45:39,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,795 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：138的记录
2022-04-29 09:45:39,801 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:45:39,801 INFO [root] [key.py (post:21] - 传的参数是：{"id": 138, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:45:39,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:45:39,813 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:45:39,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,814 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：139
2022-04-29 09:45:39,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:45:39,821 INFO [root] [key.py (post:21] - 传的参数是：{"id": 138, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:45:39,821 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:45:39,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 09:45:39,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,835 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：140
2022-04-29 09:45:39,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:45:39,845 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [139, 140]}
2022-04-29 09:45:39,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:45:39,846 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_brand中id为：[139, 140]的记录
2022-04-29 09:47:03,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 09:47:03,718 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "B6DU"}
2022-04-29 09:47:03,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,718 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"6b79cb8780164aafb0645e5800ecf095"}
2022-04-29 09:47:03,724 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:47:03,724 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:47:03,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:47:03,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:47:03,734 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,734 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：141
2022-04-29 09:47:03,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:47:03,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:47:03,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 09:47:03,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 141}
2022-04-29 09:47:03,775 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,776 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：141的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 141, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 09:47:03,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:47:03,782 INFO [root] [key.py (post:21] - 传的参数是：{"id": 141, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:47:03,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,793 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 09:47:03,793 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 141}
2022-04-29 09:47:03,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,793 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：141的记录已成功
2022-04-29 09:47:03,826 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 09:47:03,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 09:47:03,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,839 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 09:47:03,840 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 09:47:03,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,840 INFO [root] [key.py (search_read:82] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 09:47:03,851 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:47:03,851 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [141]}
2022-04-29 09:47:03,851 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,851 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：141的记录
2022-04-29 09:47:03,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:47:03,860 INFO [root] [key.py (post:21] - 传的参数是：{"id": 141, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 09:47:03,860 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,874 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:47:03,874 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 09:47:03,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,874 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：142
2022-04-29 09:47:03,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 09:47:03,881 INFO [root] [key.py (post:21] - 传的参数是：{"id": 141, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 09:47:03,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,894 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 09:47:03,894 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 09:47:03,894 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,894 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：143
2022-04-29 09:47:03,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 09:47:03,911 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [142, 143]}
2022-04-29 09:47:03,911 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 09:47:03,911 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_brand中id为：142, 143的记录
2022-04-29 10:09:19,045 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:09:19,045 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "FAES"}
2022-04-29 10:09:19,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,045 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"8c3a09223bdd42f1970b24d8b5272dd4"}
2022-04-29 10:09:19,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:09:19,051 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:09:19,051 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,060 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:09:19,060 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:09:19,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,060 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：144
2022-04-29 10:09:19,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,087 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,087 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,105 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:09:19,105 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:09:19,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,105 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:09:19,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:09:19,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 144}
2022-04-29 10:09:19,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:09:19,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 144}, "name": "\u6c49EV"}}
2022-04-29 10:09:19,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,137 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：143
2022-04-29 10:09:19,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,167 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:09:19,178 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 143}
2022-04-29 10:09:19,178 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,178 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：143的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 144}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 143, 'nationalStandard': 255}
2022-04-29 10:09:19,186 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:09:19,186 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 143}
2022-04-29 10:09:19,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,186 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：143的记录已成功
2022-04-29 10:09:19,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,232 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:09:19,232 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-29 10:09:19,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,233 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-29 10:09:19,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,262 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:09:19,274 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-29 10:09:19,275 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,275 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-29 10:09:19,302 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,302 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:09:19,326 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-29 10:09:19,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,326 INFO [root] [key.py (read_group:91] - 模型：customer_car_model按'carBrandId'分组，响应内容中的record为：[{'_domain': [['carBrandId', '=', 144]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 144}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}]
2022-04-29 10:09:19,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:09:19,342 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [143]}
2022-04-29 10:09:19,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,342 INFO [root] [key.py (delete:53] - 已删除模型customer_car_model中id为：143的记录
2022-04-29 10:09:19,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,368 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,374 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:09:19,374 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:09:19,374 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,374 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:09:19,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:09:19,381 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 144}
2022-04-29 10:09:19,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,392 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:09:19,392 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 144}, "name": "\u6c49EV"}}
2022-04-29 10:09:19,392 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,392 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：144
2022-04-29 10:09:19,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:09:19,424 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:09:19,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:09:19,432 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:09:19,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,433 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:09:19,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:09:19,439 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 144}
2022-04-29 10:09:19,439 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:09:19,449 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 144}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-04-29 10:09:19,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:09:19,450 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：145
2022-04-29 10:09:19,457 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:09:19,457 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [143, 143]}
2022-04-29 10:09:19,458 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:10:32,325 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RABM"}
2022-04-29 10:10:32,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,326 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"cbf2656b54094a0ea8d4311ec265030a"}
2022-04-29 10:10:32,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:10:32,333 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:10:32,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:10:32,349 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:10:32,349 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,349 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：145
2022-04-29 10:10:32,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,388 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:10:32,388 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:10:32,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,388 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:10:32,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:10:32,394 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 145}
2022-04-29 10:10:32,394 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,404 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:10:32,404 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 145}, "name": "\u6c49EV"}}
2022-04-29 10:10:32,404 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,404 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：146
2022-04-29 10:10:32,435 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,435 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,443 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:10:32,443 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 146}
2022-04-29 10:10:32,443 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,443 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：146的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 145}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 146, 'nationalStandard': 255}
2022-04-29 10:10:32,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:10:32,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 146}
2022-04-29 10:10:32,458 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,458 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：146的记录已成功
2022-04-29 10:10:32,487 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,487 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,487 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:10:32,497 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-29 10:10:32,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,497 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：2条
2022-04-29 10:10:32,534 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,534 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:10:32,546 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-29 10:10:32,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,547 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-04-29 10:10:32,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,585 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,585 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,606 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:10:32,607 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-29 10:10:32,607 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,608 INFO [root] [key.py (read_group:91] - 模型：customer_car_model按'carBrandId'分组，响应内容中的record为：[{'_domain': [['carBrandId', '=', 145]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 145}}, {'_domain': [['carBrandId', '=', 144]], '_total': 2, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 144}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}]
2022-04-29 10:10:32,621 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:10:32,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [146]}
2022-04-29 10:10:32,622 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,622 INFO [root] [key.py (delete:53] - 已删除模型customer_car_model中id为：146的记录
2022-04-29 10:10:32,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,664 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:10:32,664 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:10:32,664 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,664 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:10:32,671 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:10:32,671 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 145}
2022-04-29 10:10:32,671 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:10:32,680 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 145}, "name": "\u6c49EV"}}
2022-04-29 10:10:32,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,681 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：147
2022-04-29 10:10:32,708 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:10:32,708 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:10:32,709 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:10:32,716 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:10:32,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,716 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:10:32,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:10:32,722 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 145}
2022-04-29 10:10:32,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,735 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:10:32,735 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 145}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-04-29 10:10:32,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,735 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：148
2022-04-29 10:10:32,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:10:32,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [146, 146]}
2022-04-29 10:10:32,742 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:10:32,742 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_model中id为：146, 146的记录
2022-04-29 10:10:32,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:10:32,756 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [145]}
2022-04-29 10:10:32,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 40001
2022-04-29 10:10:32,756 ERROR [root] [key.py (post:28] - 出现异常，code:40001不等于200
2022-04-29 10:16:28,927 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:16:28,928 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "VP85"}
2022-04-29 10:16:28,928 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,928 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"276dc8626ab44fb8aabac07577ce76f0"}
2022-04-29 10:16:28,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:16:28,933 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:16:28,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,942 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:16:28,942 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:16:28,943 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,943 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：146
2022-04-29 10:16:28,970 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:28,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:28,970 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:16:28,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:16:28,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,976 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:16:28,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:16:28,982 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 146}
2022-04-29 10:16:28,982 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:16:28,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 146}, "name": "\u6c49EV"}}
2022-04-29 10:16:28,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:28,990 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：149
2022-04-29 10:16:29,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,021 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:16:29,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 149}
2022-04-29 10:16:29,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,029 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：149的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 146}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 149, 'nationalStandard': 255}
2022-04-29 10:16:29,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:16:29,036 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 149}
2022-04-29 10:16:29,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,037 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：149的记录已成功
2022-04-29 10:16:29,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,063 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:16:29,074 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-29 10:16:29,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,074 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-29 10:16:29,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,102 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:16:29,113 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-29 10:16:29,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,114 INFO [root] [key.py (search_read:82] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-29 10:16:29,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:16:29,166 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-29 10:16:29,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,167 INFO [root] [key.py (read_group:91] - 模型：customer_car_model按'carBrandId'分组，响应内容中的record为：[{'_domain': [['carBrandId', '=', 146]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 146}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}]
2022-04-29 10:16:29,176 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:16:29,176 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [149]}
2022-04-29 10:16:29,176 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,176 INFO [root] [key.py (delete:53] - 已删除模型customer_car_model中id为：149的记录
2022-04-29 10:16:29,202 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:16:29,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:16:29,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,209 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:16:29,215 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:16:29,215 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 146}
2022-04-29 10:16:29,216 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:16:29,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 146}, "name": "\u6c49EV"}}
2022-04-29 10:16:29,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,224 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：150
2022-04-29 10:16:29,250 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:16:29,250 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:16:29,250 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:16:29,257 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:16:29,257 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,257 INFO [root] [key.py (default_get:76] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:16:29,263 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:16:29,263 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 146}
2022-04-29 10:16:29,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,273 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:16:29,274 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 146}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-04-29 10:16:29,274 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,274 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：151
2022-04-29 10:16:29,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:16:29,282 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [150, 151]}
2022-04-29 10:16:29,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,283 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_model中id为：150, 151的记录
2022-04-29 10:16:29,299 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:16:29,300 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [146]}
2022-04-29 10:16:29,300 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:16:29,300 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：146的记录
2022-04-29 10:32:13,346 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:32:13,346 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "JX8H"}
2022-04-29 10:32:13,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,347 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b94a683f709c47e2ba4b5c82cc1d32fd"}
2022-04-29 10:32:13,352 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:32:13,352 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:32:13,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,361 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:32:13,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:32:13,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,361 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：147
2022-04-29 10:32:13,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:32:13,396 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:32:13,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,403 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:32:13,403 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 147}
2022-04-29 10:32:13,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,403 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：147的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 147, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 10:32:13,408 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:32:13,408 INFO [root] [key.py (post:21] - 传的参数是：{"id": 147, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 10:32:13,409 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,417 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:32:13,417 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 147}
2022-04-29 10:32:13,417 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,417 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：147的记录已成功
2022-04-29 10:32:13,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:32:13,446 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:32:13,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,454 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:32:13,454 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 10:32:13,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:32:13,454 INFO [root] [key.py (search_read:82] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 10:35:16,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:35:16,625 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PACR"}
2022-04-29 10:35:16,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,625 INFO [root] [key.py (login:107] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"1c89470cb9da400fbdf407a057c81616"}
2022-04-29 10:35:16,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:35:16,632 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:35:16,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,643 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:35:16,643 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:35:16,643 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,643 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：148
2022-04-29 10:35:16,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:35:16,680 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:35:16,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,688 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:35:16,688 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 148}
2022-04-29 10:35:16,688 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,688 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：148的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 148, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 10:35:16,696 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:35:16,696 INFO [root] [key.py (post:21] - 传的参数是：{"id": 148, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 10:35:16,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,708 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:35:16,709 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 148}
2022-04-29 10:35:16,709 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,709 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：148的记录已成功
2022-04-29 10:35:16,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:35:16,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:35:16,742 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:35:16,756 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 10:35:16,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,757 INFO [root] [key.py (search_read:82] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 10:35:16,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:35:16,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [148]}
2022-04-29 10:35:16,767 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,767 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：148的记录
2022-04-29 10:35:16,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:35:16,773 INFO [root] [key.py (post:21] - 传的参数是：{"id": 148, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:35:16,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,787 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:35:16,788 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:35:16,788 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,788 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：149
2022-04-29 10:35:16,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:35:16,794 INFO [root] [key.py (post:21] - 传的参数是：{"id": 149, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 10:35:16,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,808 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:35:16,808 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 10:35:16,808 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,808 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：150
2022-04-29 10:35:16,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:35:16,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [149, 150]}
2022-04-29 10:35:16,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:35:16,816 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_brand中id为：['148', '149', '150']的记录
2022-04-29 10:37:36,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:37:36,047 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "4DE6"}
2022-04-29 10:37:36,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,048 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"534288467eae44d5bccb78b787d5876f"}
2022-04-29 10:37:36,053 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:37:36,053 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:37:36,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:37:36,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:37:36,062 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,062 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：151
2022-04-29 10:37:36,090 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:37:36,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:37:36,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:37:36,099 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 151}
2022-04-29 10:37:36,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,099 INFO [root] [key.py (read:40] - 查看模型customer_car_brand中id为：151的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 151, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-04-29 10:37:36,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:37:36,110 INFO [root] [key.py (post:21] - 传的参数是：{"id": 151, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 10:37:36,110 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:37:36,121 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 151}
2022-04-29 10:37:36,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,122 INFO [root] [key.py (edit:46] - 编辑模型customer_car_brand中id为：151的记录已成功
2022-04-29 10:37:36,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:37:36,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:37:36,151 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,160 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:37:36,160 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-04-29 10:37:36,160 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,160 INFO [root] [key.py (search_read:83] - 模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-04-29 10:37:36,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:37:36,171 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [151]}
2022-04-29 10:37:36,171 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,171 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：151的记录
2022-04-29 10:37:36,177 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:37:36,177 INFO [root] [key.py (post:21] - 传的参数是：{"id": 151, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:37:36,177 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,185 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:37:36,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:37:36,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,185 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：152
2022-04-29 10:37:36,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:37:36,191 INFO [root] [key.py (post:21] - 传的参数是：{"id": 152, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-04-29 10:37:36,192 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:37:36,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-04-29 10:37:36,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,199 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：153
2022-04-29 10:37:36,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:37:36,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [152, 153]}
2022-04-29 10:37:36,208 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:37:36,208 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_brand中id为：152, 153的记录
2022-04-29 10:38:38,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:38:38,243 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2BQE"}
2022-04-29 10:38:38,243 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,243 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e905f5d854604822973cd17292d4cc92"}
2022-04-29 10:38:38,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:38:38,248 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:38:38,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:38:38,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:38:38,267 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,267 INFO [root] [key.py (create:34] - 创建模型：customer_car_brand新记录，id为：154
2022-04-29 10:38:38,295 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,295 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,295 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,302 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:38:38,302 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:38:38,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,302 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:38:38,308 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:38:38,308 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 154}
2022-04-29 10:38:38,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:38:38,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 154}, "name": "\u6c49EV"}}
2022-04-29 10:38:38,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,321 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：152
2022-04-29 10:38:38,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,357 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:38:38,368 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 152}
2022-04-29 10:38:38,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,368 INFO [root] [key.py (read:40] - 查看模型customer_car_model中id为：152的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 154}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 152, 'nationalStandard': 255}
2022-04-29 10:38:38,376 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:38:38,377 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 152}
2022-04-29 10:38:38,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,377 INFO [root] [key.py (edit:46] - 编辑模型customer_car_model中id为：152的记录已成功
2022-04-29 10:38:38,414 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,414 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,414 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:38:38,424 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-29 10:38:38,424 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,424 INFO [root] [key.py (search_read:83] - 模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-29 10:38:38,452 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:38:38,462 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-29 10:38:38,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,463 INFO [root] [key.py (search_read:83] - 模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-29 10:38:38,489 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,489 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:38:38,508 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-29 10:38:38,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,510 INFO [root] [key.py (read_group:92] - 模型：customer_car_model按'carBrandId'分组，响应内容中的record为：[{'_domain': [['carBrandId', '=', 154]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 154}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}]
2022-04-29 10:38:38,527 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:38:38,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [152]}
2022-04-29 10:38:38,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,529 INFO [root] [key.py (delete:53] - 已删除模型customer_car_model中id为：152的记录
2022-04-29 10:38:38,563 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,563 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,564 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:38:38,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:38:38,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,574 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:38:38,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:38:38,581 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 154}
2022-04-29 10:38:38,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,589 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:38:38,589 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 154}, "name": "\u6c49EV"}}
2022-04-29 10:38:38,589 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,590 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：153
2022-04-29 10:38:38,616 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:38:38,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:38:38,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,621 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:38:38,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:38:38,622 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,622 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:38:38,629 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:38:38,629 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 154}
2022-04-29 10:38:38,629 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:38:38,637 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 154}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-04-29 10:38:38,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,638 INFO [root] [key.py (create:34] - 创建模型：customer_car_model新记录，id为：154
2022-04-29 10:38:38,648 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:38:38,648 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [153, 154]}
2022-04-29 10:38:38,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,648 INFO [root] [key.py (delete:55] - 已批量删除模型customer_car_model中id为：153, 154的记录
2022-04-29 10:38:38,658 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:38:38,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [154]}
2022-04-29 10:38:38,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:38:38,659 INFO [root] [key.py (delete:53] - 已删除模型customer_car_brand中id为：154的记录
2022-04-29 10:47:42,878 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 10:47:42,879 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RBKD"}
2022-04-29 10:47:42,879 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,879 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"94c41a6cc0d647578fd5edf257675fa9"}
2022-04-29 10:47:42,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 10:47:42,884 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 10:47:42,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:47:42,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 10:47:42,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,898 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：155
2022-04-29 10:47:42,925 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:42,925 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:42,925 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:47:42,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 10:47:42,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,933 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 10:47:42,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:47:42,939 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 155}
2022-04-29 10:47:42,939 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,947 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:47:42,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 155}, "name": "\u6c49EV"}}
2022-04-29 10:47:42,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,947 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_model新记录，id为：155
2022-04-29 10:47:42,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:42,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:42,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,981 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:47:42,981 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-29 10:47:42,981 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:42,982 INFO [root] [key.py (default_get:77] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-29 10:47:42,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:47:42,988 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 155}
2022-04-29 10:47:42,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:47:43,005 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 155}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-29 10:47:43,005 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,005 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car新记录，id为：116
2022-04-29 10:47:43,035 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,035 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,048 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 10:47:43,048 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 116}
2022-04-29 10:47:43,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,048 INFO [root] [key.py (read:40] - 查看：查看模型customer_car中id为：116的内容： {'carModelBms': 0, 'number': '粤GF520U', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 155}, 'displayName': '粤GF520U', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF520U', 'vin': 'TEST0000000000002', 'id': 116}
2022-04-29 10:47:43,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 10:47:43,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005"}, "id": 116}
2022-04-29 10:47:43,059 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,059 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_car中id为：116的记录已成功
2022-04-29 10:47:43,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:47:43,100 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF920U"]]}
2022-04-29 10:47:43,100 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,100 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF920U'符合的记录数是：2条
2022-04-29 10:47:43,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:47:43,143 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF920U"]]}
2022-04-29 10:47:43,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,143 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF920U'符合的记录数是：2条
2022-04-29 10:47:43,172 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:47:43,184 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000005"]]}
2022-04-29 10:47:43,184 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,184 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000005'符合的记录数是：1条
2022-04-29 10:47:43,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,242 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:47:43,242 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-04-29 10:47:43,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,243 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-04-29 10:47:43,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,274 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,274 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,287 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 10:47:43,287 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-04-29 10:47:43,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,287 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-04-29 10:47:43,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,322 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:47:43,354 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-04-29 10:47:43,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,356 INFO [root] [key.py (read_group:92] - 分组：模型：customer_car按'customerId'分组，响应内容中的record为：[{'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=?', None]], '_total': 2, 'customerId': {}}, {'_domain': [['customerId', '=', 14]], '_total': 6, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 2, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 36]], '_total': 6, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}]
2022-04-29 10:47:43,410 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,410 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,411 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 10:47:43,436 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-04-29 10:47:43,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,436 INFO [root] [key.py (read_group:92] - 分组：模型：customer_car按'carModelId'分组，响应内容中的record为：[{'_domain': [['carModelId', '=', 155]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 155}, '_total': 1}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 1}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 18}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 5}]
2022-04-29 10:47:43,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:47:43,446 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [116]}
2022-04-29 10:47:43,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,446 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car中id为：116的记录
2022-04-29 10:47:43,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,479 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:47:43,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-29 10:47:43,479 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,479 INFO [root] [key.py (default_get:77] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-29 10:47:43,485 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:47:43,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 155}
2022-04-29 10:47:43,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,497 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:47:43,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 155}, "customerId": {}, "number": "\u7ca4GF520U", "remark": "\u7ca4GF520U", "vin": "TEST0000000000002", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-29 10:47:43,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,497 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car新记录，id为：117
2022-04-29 10:47:43,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 10:47:43,525 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 10:47:43,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 10:47:43,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-04-29 10:47:43,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,542 INFO [root] [key.py (default_get:77] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-04-29 10:47:43,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 10:47:43,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 155}
2022-04-29 10:47:43,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 10:47:43,566 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 155}, "customerId": {}, "number": "\u7ca4GF920U", "remark": "\u7ca4GF920U", "vin": "TEST0000000000005", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-04-29 10:47:43,566 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,566 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car新记录，id为：118
2022-04-29 10:47:43,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:47:43,581 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [117, 118]}
2022-04-29 10:47:43,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,581 INFO [root] [key.py (delete:55] - 批量删除：已批量删除模型customer_car中id为：117, 118的记录
2022-04-29 10:47:43,596 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:47:43,597 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [155]}
2022-04-29 10:47:43,597 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,597 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car_model中id为：155的记录
2022-04-29 10:47:43,616 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 10:47:43,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [155]}
2022-04-29 10:47:43,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 10:47:43,616 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car_brand中id为：155的记录
2022-04-29 12:06:26,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 12:06:26,614 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "R2AV"}
2022-04-29 12:06:26,614 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:06:26,614 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e4c91b3c559d4705984a2cb09cfbcf18"}
2022-04-29 12:06:26,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 12:06:26,651 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 12:06:26,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:06:26,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 12:06:26,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 12:06:26,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:06:26,657 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925656516666064971', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 12:06:26,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 12:06:26,665 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"code": "6925656516666064971", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "model": "customer_info", "map": {"name": "\u65f6\u4f1f\u73bb", "phone": "15268636069"}}}
2022-04-29 12:06:26,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 419
2022-04-29 12:06:26,666 ERROR [root] [key.py (post:28] - 出现异常，code:419不等于200
2022-04-29 12:11:02,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 12:11:02,996 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "N3LK"}
2022-04-29 12:11:02,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:02,996 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b03ae83e4a464b9682b80cd42cb70c11"}
2022-04-29 12:11:03,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 12:11:03,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 12:11:03,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,035 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 12:11:03,035 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 12:11:03,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,036 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925657675841667175', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 12:11:03,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 12:11:03,046 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925657675841667175", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u5085\u8d81\u5c01", "phone": "15234632969"}}
2022-04-29 12:11:03,046 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,046 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：71
2022-04-29 12:11:03,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 12:11:03,080 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 12:11:03,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 12:11:03,098 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 71}
2022-04-29 12:11:03,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,098 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：71的内容： {'code': '6925657675841667175', 'billingIds': [], 'stationIds': [], 'displayName': '傅趁封', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 71, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 0, 'accountId': {'code': '6925657675883610216', 'displayName': '6925657675883610216', 'id': 70, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15234632969', 'name': '傅趁封', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 12:11:03,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 12:11:03,110 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u5b54\u8d8b\u5899", "phone": "18928101407"}, "id": 71}
2022-04-29 12:11:03,111 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,111 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：71的记录已成功
2022-04-29 12:11:03,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 12:11:03,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 12:11:03,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,163 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 12:11:03,163 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u5b54\u8d8b\u5899"]]}
2022-04-29 12:11:03,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,164 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '孔趋墙'符合的记录数是：1条
2022-04-29 12:11:03,205 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 12:11:03,206 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 12:11:03,207 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 12:11:03,229 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", "18928101407"]]}
2022-04-29 12:11:03,229 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 12:11:03,229 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 '18928101407'符合的记录数是：1条
2022-04-29 13:38:11,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 13:38:11,091 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "EPj3"}
2022-04-29 13:38:11,091 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,091 INFO [root] [key.py (login:108] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e1467914e6124f369cdafa12ac014656"}
2022-04-29 13:38:11,127 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 13:38:11,127 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 13:38:11,127 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 13:38:11,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 13:38:11,133 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,133 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925679606095675552', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 13:38:11,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 13:38:11,153 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925679606095675552", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u5f6d\u6b3e\u653f", "phone": "15622664555"}}
2022-04-29 13:38:11,153 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,153 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：72
2022-04-29 13:38:11,190 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 13:38:11,190 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 13:38:11,190 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,210 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 13:38:11,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 72}
2022-04-29 13:38:11,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,211 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：72的内容： {'code': '6925679606095675552', 'billingIds': [], 'stationIds': [], 'displayName': '彭款政', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 72, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 0, 'accountId': {'code': '6925679606137618593', 'displayName': '6925679606137618593', 'id': 71, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15622664555', 'name': '彭款政', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 13:38:11,227 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 13:38:11,227 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u4fde\u582a\u4fc3", "phone": "15781036180"}, "id": 72}
2022-04-29 13:38:11,228 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,228 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：72的记录已成功
2022-04-29 13:38:11,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 13:38:11,270 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 13:38:11,272 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 13:38:11,298 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u4fde\u582a\u4fc3"]]}
2022-04-29 13:38:11,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,299 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '俞堪促'符合的记录数是：1条
2022-04-29 13:38:11,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 13:38:11,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 13:38:11,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,367 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 13:38:11,367 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", "15781036180"]]}
2022-04-29 13:38:11,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 13:38:11,368 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 '15781036180'符合的记录数是：1条
2022-04-29 14:44:16,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 14:44:16,914 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "BV9F"}
2022-04-29 14:44:16,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:16,915 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"0afac2e14e7f45e0b56d56861ca15fb6"}
2022-04-29 14:44:16,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 14:44:16,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 14:44:16,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:16,956 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 14:44:16,957 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 14:44:16,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:16,957 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925696239702900941', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 14:44:16,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 14:44:16,988 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925696239702900941", "carCount": 0, "cardCount": 0, "sex": 1, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u4f0d\u62ac\u578b", "phone": "17934846756"}}
2022-04-29 14:44:16,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 14:44:16,988 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 14:44:56,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 14:44:56,144 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "GNPY"}
2022-04-29 14:44:56,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:56,144 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"be9b69983e9340f4b948d2f7682e3ba1"}
2022-04-29 14:44:56,179 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 14:44:56,180 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 14:44:56,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:56,186 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 14:44:56,186 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 14:44:56,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 14:44:56,187 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925696404241252585', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 14:44:56,202 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 14:44:56,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925696404241252585", "carCount": 0, "cardCount": 0, "sex": 1, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u8d39\u5824\u805a", "phone": "14360854011"}}
2022-04-29 14:44:56,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 14:44:56,202 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 15:01:09,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 15:01:09,335 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LJAR"}
2022-04-29 15:01:09,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,336 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"7e6e42f1127a4f45b3265b5fb81e34ae"}
2022-04-29 15:01:09,378 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:01:09,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-04-29 15:01:09,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,388 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925700486095962374', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-04-29 15:01:09,399 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:01:09,399 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925700486095962374", "carCount": 0, "cardCount": 0, "sex": 1, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u502a\u82e5\u7fbd", "phone": "14473017223"}}
2022-04-29 15:01:09,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,399 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：73
2022-04-29 15:01:09,435 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,435 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 15:01:09,450 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 73}
2022-04-29 15:01:09,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,451 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：73的内容： {'code': '6925700486095962374', 'billingIds': [], 'stationIds': [], 'displayName': '倪若羽', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 73, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 1, 'accountId': {'code': '6925700486137905415', 'displayName': '6925700486137905415', 'id': 72, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '14473017223', 'name': '倪若羽', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 15:01:09,460 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 15:01:09,460 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u90d1\u7434\u8a93", "phone": "15238680640"}, "id": 73}
2022-04-29 15:01:09,460 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,460 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：73的记录已成功
2022-04-29 15:01:09,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,496 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,498 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:01:09,519 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u90d1\u7434\u8a93"]]}
2022-04-29 15:01:09,519 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,520 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '郑琴誓'符合的记录数是：1条
2022-04-29 15:01:09,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,560 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,560 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,577 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:01:09,578 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", "15238680640"]]}
2022-04-29 15:01:09,578 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,578 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 '15238680640'符合的记录数是：1条
2022-04-29 15:01:09,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,624 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 15:01:09,635 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 15:01:09,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,635 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的record为：[{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 45, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}]
2022-04-29 15:01:09,672 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:01:09,672 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:01:09,673 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 15:01:09,682 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 15:01:09,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,682 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的record为：[{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 50, 'status': 0}]
2022-04-29 15:01:09,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:01:09,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[73], {}]}
2022-04-29 15:01:09,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,694 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：73的记录
2022-04-29 15:01:09,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:01:09,702 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[73], {}]}
2022-04-29 15:01:09,702 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,704 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：73的记录
2022-04-29 15:01:09,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:01:09,711 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[73], {}]}
2022-04-29 15:01:09,711 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,711 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：73的多充功能
2022-04-29 15:01:09,719 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:01:09,719 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[73], {}]}
2022-04-29 15:01:09,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:01:09,719 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：73的多充功能
2022-04-29 15:05:35,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 15:05:35,815 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PY34"}
2022-04-29 15:05:35,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,815 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5c46bf32140942f8b129d85817562c73"}
2022-04-29 15:05:35,822 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-04-29 15:05:35,822 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-04-29 15:05:35,822 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:05:35,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-04-29 15:05:35,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,841 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：156
2022-04-29 15:05:35,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:35,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:35,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,875 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:05:35,875 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 15:05:35,875 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,876 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 15:05:35,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 15:05:35,882 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 156}
2022-04-29 15:05:35,882 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:05:35,901 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 156}, "name": "\u6c49EV"}}
2022-04-29 15:05:35,901 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,901 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_model新记录，id为：156
2022-04-29 15:05:35,928 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:35,929 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:35,929 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 15:05:35,938 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 156}
2022-04-29 15:05:35,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,938 INFO [root] [key.py (read:40] - 查看：查看模型customer_car_model中id为：156的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 156}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 156, 'nationalStandard': 255}
2022-04-29 15:05:35,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 15:05:35,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 156}
2022-04-29 15:05:35,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,946 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_car_model中id为：156的记录已成功
2022-04-29 15:05:35,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:35,972 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:35,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:05:35,982 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-04-29 15:05:35,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:35,983 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-04-29 15:05:36,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:36,007 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:36,007 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:05:36,016 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-04-29 15:05:36,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,017 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-04-29 15:05:36,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:36,047 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:36,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 15:05:36,064 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-04-29 15:05:36,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,064 INFO [root] [key.py (read_group:92] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 156]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 156}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 5}
2022-04-29 15:05:36,076 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 15:05:36,076 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [156]}
2022-04-29 15:05:36,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,078 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car_model中id为：156的记录
2022-04-29 15:05:36,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:36,115 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:36,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:05:36,126 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 15:05:36,127 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,127 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 15:05:36,135 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 15:05:36,136 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 156}
2022-04-29 15:05:36,136 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,155 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:05:36,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 156}, "name": "\u6c49EV"}}
2022-04-29 15:05:36,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,155 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_model新记录，id为：157
2022-04-29 15:05:36,196 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:05:36,196 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 15:05:36,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,206 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:05:36,206 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-04-29 15:05:36,206 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,206 INFO [root] [key.py (default_get:77] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-04-29 15:05:36,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-04-29 15:05:36,221 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 156}
2022-04-29 15:05:36,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:05:36,234 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 156}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-04-29 15:05:36,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,234 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_model新记录，id为：158
2022-04-29 15:05:36,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 15:05:36,248 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [157, 158]}
2022-04-29 15:05:36,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,248 INFO [root] [key.py (delete:55] - 批量删除：已批量删除模型customer_car_model中id为：157, 158的记录
2022-04-29 15:05:36,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 15:05:36,257 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [156]}
2022-04-29 15:05:36,258 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:05:36,258 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car_brand中id为：156的记录
2022-04-29 15:22:29,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 15:22:29,278 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "F5NA"}
2022-04-29 15:22:29,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,279 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f4ac9600c0bb49dea10abcc5e3e0890a"}
2022-04-29 15:22:29,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,335 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:22:29,342 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 15:22:29,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,342 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925705854557618497', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 15:22:29,359 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:22:29,359 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925705854557618497", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u5929\u5de8\u5999\u542f\u516c\u53f8", "phone": "18462921848"}}
2022-04-29 15:22:29,359 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,359 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：74
2022-04-29 15:22:29,396 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,396 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,409 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 15:22:29,409 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 74}
2022-04-29 15:22:29,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,410 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：74的内容： {'code': '6925705854557618497', 'billingIds': [], 'stationIds': [], 'displayName': '天巨妙启公司', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 74, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925705854637310274', 'displayName': '6925705854637310274', 'id': 73, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18462921848', 'name': '天巨妙启公司', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 15:22:29,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 15:22:29,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u5de8\u5929\u6587\u516c\u53f8", "phone": "13688957255"}, "id": 74}
2022-04-29 15:22:29,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,421 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：74的记录已成功
2022-04-29 15:22:29,457 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,457 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,483 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:22:29,484 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u5de8\u5929\u6587\u516c\u53f8"]]}
2022-04-29 15:22:29,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,485 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '巨天文公司'符合的记录数是：1条
2022-04-29 15:22:29,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,525 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,538 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 15:22:29,538 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", "13688957255"]]}
2022-04-29 15:22:29,538 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,539 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 '13688957255'符合的记录数是：1条
2022-04-29 15:22:29,573 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,582 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 15:22:29,582 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 15:22:29,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,582 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 46, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}], 'length': 3}
2022-04-29 15:22:29,617 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:22:29,617 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-04-29 15:22:29,617 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,626 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 15:22:29,626 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 15:22:29,627 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,627 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 51, 'status': 0}], 'length': 2}
2022-04-29 15:22:29,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:22:29,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[74], {}]}
2022-04-29 15:22:29,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,638 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：74的记录
2022-04-29 15:22:29,650 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:22:29,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[74], {}]}
2022-04-29 15:22:29,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,651 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：74的记录
2022-04-29 15:22:29,660 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:22:29,660 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[74], {}]}
2022-04-29 15:22:29,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,660 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：74的多充功能
2022-04-29 15:22:29,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 15:22:29,669 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[74], {}]}
2022-04-29 15:22:29,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:22:29,669 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：74的多充功能
2022-04-29 15:30:51,909 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 15:30:51,909 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NFHL"}
2022-04-29 15:30:51,909 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:51,909 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"654a588db3564db383675243f87adf18"}
2022-04-29 15:30:51,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:30:51,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 15:30:51,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:51,953 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 15:30:51,953 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 15:30:51,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:51,953 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925707962610614636', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 15:30:51,967 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 15:30:51,967 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925707962610614636", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u99a8\u5fd7\u80b2\u81f4\u5fd7\u516c\u53f8", "phone": "15311169325"}}
2022-04-29 15:30:51,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:51,967 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：75
2022-04-29 15:30:52,003 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 15:30:52,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 15:30:52,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:52,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 15:30:52,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 75}
2022-04-29 15:30:52,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 15:30:52,016 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：75的内容： {'code': '6925707962610614636', 'billingIds': [], 'stationIds': [], 'displayName': '馨志育致志公司', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 75, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925707962610614637', 'displayName': '6925707962610614637', 'id': 74, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15311169325', 'name': '馨志育致志公司', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 15:30:52,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 15:30:52,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u8317\u8a89\u516c\u53f8", "phone": "15415102381"}, "id": 75}
2022-04-29 15:30:52,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 15:30:52,030 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 16:17:27,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 16:17:27,525 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "EGNQ"}
2022-04-29 16:17:27,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,525 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"735e8524a017462fbde77cd2dfdc99a8"}
2022-04-29 16:17:27,558 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,558 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 16:17:27,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 16:17:27,570 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,570 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925719688039104905', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 16:17:27,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 16:17:27,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925719688039104905", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u670b\u4e3a\u516c\u53f8", "phone": 18576002760}}
2022-04-29 16:17:27,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,595 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：76
2022-04-29 16:17:27,630 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,630 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,630 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,641 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 16:17:27,641 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 76}
2022-04-29 16:17:27,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,642 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：76的内容： {'code': '6925719688039104905', 'billingIds': [], 'stationIds': [], 'displayName': '朋为公司', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 76, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925719688143962506', 'displayName': '6925719688143962506', 'id': 75, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18576002760', 'name': '朋为公司', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 16:17:27,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 16:17:27,649 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u7fa4\u6770\u5e05\u516c\u53f8", "phone": 18381665859}, "id": 76}
2022-04-29 16:17:27,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,650 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：76的记录已成功
2022-04-29 16:17:27,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 16:17:27,708 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u7fa4\u6770\u5e05\u516c\u53f8"]]}
2022-04-29 16:17:27,708 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,709 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '群杰帅公司'符合的记录数是：1条
2022-04-29 16:17:27,752 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,752 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 16:17:27,767 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 18381665859]]}
2022-04-29 16:17:27,767 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,767 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 18381665859符合的记录数是：1条
2022-04-29 16:17:27,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,803 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,803 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 16:17:27,812 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 16:17:27,812 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,812 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 48, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}], 'length': 3}
2022-04-29 16:17:27,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:17:27,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:17:27,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 16:17:27,869 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 16:17:27,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,869 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 53, 'status': 0}], 'length': 2}
2022-04-29 16:17:27,880 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 16:17:27,880 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[76], {}]}
2022-04-29 16:17:27,880 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,880 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：76的记录
2022-04-29 16:17:27,892 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 16:17:27,892 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[76], {}]}
2022-04-29 16:17:27,892 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,892 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：76的记录
2022-04-29 16:17:27,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 16:17:27,899 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[76], {}]}
2022-04-29 16:17:27,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,899 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：76的多充功能
2022-04-29 16:17:27,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 16:17:27,914 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[76], {}]}
2022-04-29 16:17:27,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:17:27,914 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：76的多充功能
2022-04-29 16:59:04,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 16:59:04,937 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XN4Q"}
2022-04-29 16:59:04,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:59:04,937 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5c495e64bf694c55bf5795c421780f5e"}
2022-04-29 16:59:04,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 16:59:04,972 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 16:59:04,972 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:59:04,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 16:59:04,978 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 16:59:04,978 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 16:59:04,978 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925730162768085457', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 16:59:04,985 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 16:59:04,985 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925730162768085457", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u91d1\u5761\u6885", "phone": null}}
2022-04-29 16:59:04,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 16:59:04,985 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 17:00:15,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:00:15,137 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "W32P"}
2022-04-29 17:00:15,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,137 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"021381ade4424e35939eaf71086990ba"}
2022-04-29 17:00:15,185 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:00:15,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:00:15,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:00:15,192 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:00:15,192 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,193 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925730457292112365', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:00:15,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:00:15,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925730457292112365", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u5eb7\u7acb\u8a93", "phone": 15953979152}}
2022-04-29 17:00:15,208 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,208 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：77
2022-04-29 17:00:15,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:00:15,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:00:15,243 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:00:15,257 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 77}
2022-04-29 17:00:15,257 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:00:15,257 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：77的内容： {'code': '6925730457292112365', 'billingIds': [], 'stationIds': [], 'displayName': '康立誓', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 77, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925730457334055406', 'displayName': '6925730457334055406', 'id': 76, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15953979152', 'name': '康立誓', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:00:15,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:00:15,266 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u9ec4\u62ac", "phone": null}, "id": 77}
2022-04-29 17:00:15,266 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 17:00:15,266 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 17:01:10,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:01:10,803 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WCYY"}
2022-04-29 17:01:10,803 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:01:10,804 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"3e3180cd62874bb59bbfe7e00542cb92"}
2022-04-29 17:01:10,843 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:01:10,843 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:01:10,844 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:01:10,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:01:10,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:01:10,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:01:10,850 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925730690747073034', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:01:10,857 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:01:10,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925730690747073034", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u6f58\u8d81", "phone": null}}
2022-04-29 17:01:10,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 413
2022-04-29 17:01:10,857 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-04-29 17:15:16,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:15:16,462 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XWSB"}
2022-04-29 17:15:16,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,462 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"71d3d36c8eeb40fbbfaeaa69757c4ad9"}
2022-04-29 17:15:16,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:16,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:16,504 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,510 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:15:16,510 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:15:16,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,511 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925734237618307625', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:15:16,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:15:16,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925734237618307625", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u5468\u82f1", "phone": 17711511189}}
2022-04-29 17:15:16,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,535 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：78
2022-04-29 17:15:16,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:16,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:16,570 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,584 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:15:16,585 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 78}
2022-04-29 17:15:16,585 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,585 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：78的内容： {'code': '6925734237618307625', 'billingIds': [], 'stationIds': [], 'displayName': '周英', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 78, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925734237706388010', 'displayName': '6925734237706388010', 'id': 77, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '17711511189', 'name': '周英', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:15:16,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:15:16,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u90dd\u82f1\u82d7", "phone": 13605455596}, "id": 78}
2022-04-29 17:15:16,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,595 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：78的记录已成功
2022-04-29 17:15:16,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:16,632 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:16,633 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,654 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:15:16,654 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u90dd\u82f1\u82d7"]]}
2022-04-29 17:15:16,655 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:16,655 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '郝英苗'符合的记录数是：1条
2022-04-29 17:15:48,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:15:48,145 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9MC4"}
2022-04-29 17:15:48,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,145 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f1e5ccb59a1d4b0185e2a7192fcae73a"}
2022-04-29 17:15:48,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:48,192 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:48,192 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:15:48,198 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:15:48,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,198 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925734370535801414', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:15:48,214 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:15:48,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925734370535801414", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u5e38\u6885", "phone": 14569341853}}
2022-04-29 17:15:48,214 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,214 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：79
2022-04-29 17:15:48,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:48,249 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:48,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:15:48,268 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 79}
2022-04-29 17:15:48,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,268 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：79的内容： {'code': '6925734370535801414', 'billingIds': [], 'stationIds': [], 'displayName': '常梅', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 79, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925734370577744455', 'displayName': '6925734370577744455', 'id': 78, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '14569341853', 'name': '常梅', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:15:48,276 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:15:48,276 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u738b\u79cb\u642d", "phone": 18014999463}, "id": 79}
2022-04-29 17:15:48,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,276 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：79的记录已成功
2022-04-29 17:15:48,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:15:48,310 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:15:48,310 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:15:48,325 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u738b\u79cb\u642d"]]}
2022-04-29 17:15:48,325 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:15:48,325 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '王秋搭'符合的记录数是：1条
2022-04-29 17:18:10,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:18:10,707 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PLF7"}
2022-04-29 17:18:10,707 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,707 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"6ba571b9609644a8be2d62e0f068df74"}
2022-04-29 17:18:10,757 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:10,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:10,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,764 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:18:10,764 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:18:10,764 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,764 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925734968475779684', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:18:10,778 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:18:10,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925734968475779684", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u67cf\u4fd7", "phone": 18578832009}}
2022-04-29 17:18:10,778 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,778 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：80
2022-04-29 17:18:10,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:10,813 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:10,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,826 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:18:10,826 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 80}
2022-04-29 17:18:10,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,827 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：80的内容： {'code': '6925734968475779684', 'billingIds': [], 'stationIds': [], 'displayName': '柏俗', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 80, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925734968475779685', 'displayName': '6925734968475779685', 'id': 79, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18578832009', 'name': '柏俗', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:18:10,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:18:10,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u9c8d\u6d01", "phone": 19686841156}, "id": 80}
2022-04-29 17:18:10,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,840 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：80的记录已成功
2022-04-29 17:18:10,886 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:10,886 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:10,887 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:18:10,903 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u9c8d\u6d01"]]}
2022-04-29 17:18:10,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:10,903 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '鲍洁'符合的记录数是：1条
2022-04-29 17:18:22,095 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:18:22,095 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "YBQ3"}
2022-04-29 17:18:22,096 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,096 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"bf7f464e944c47ec93e255c378e58ead"}
2022-04-29 17:18:22,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,132 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:18:22,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:18:22,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,138 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925735016206959233', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:18:22,165 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:18:22,165 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925735016206959233", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u65b9\u51b0", "phone": 17150850574}}
2022-04-29 17:18:22,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,166 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：81
2022-04-29 17:18:22,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:18:22,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 81}
2022-04-29 17:18:22,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,211 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：81的内容： {'code': '6925735016206959233', 'billingIds': [], 'stationIds': [], 'displayName': '方冰', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 81, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925735016269873794', 'displayName': '6925735016269873794', 'id': 80, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '17150850574', 'name': '方冰', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:18:22,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:18:22,234 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u97e9\u91cd\u5899", "phone": 18749799036}, "id": 81}
2022-04-29 17:18:22,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,234 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：81的记录已成功
2022-04-29 17:18:22,277 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,277 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,278 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:18:22,292 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u97e9\u91cd\u5899"]]}
2022-04-29 17:18:22,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,292 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '韩重墙'符合的记录数是：1条
2022-04-29 17:18:22,326 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,326 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,344 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:18:22,344 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 18749799036]]}
2022-04-29 17:18:22,345 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,345 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 18749799036符合的记录数是：1条
2022-04-29 17:18:22,379 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,389 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:18:22,389 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 17:18:22,389 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,390 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 53, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}], 'length': 3}
2022-04-29 17:18:22,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:18:22,425 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:18:22,426 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:18:22,434 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 17:18:22,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,434 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 58, 'status': 0}], 'length': 2}
2022-04-29 17:18:22,443 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:18:22,443 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[81], {}]}
2022-04-29 17:18:22,443 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,444 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：81的记录
2022-04-29 17:18:22,452 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:18:22,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[81], {}]}
2022-04-29 17:18:22,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,452 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：81的记录
2022-04-29 17:18:22,460 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:18:22,460 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[81], {}]}
2022-04-29 17:18:22,460 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,460 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：81的多充功能
2022-04-29 17:18:22,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:18:22,470 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[81], {}]}
2022-04-29 17:18:22,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:18:22,470 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：81的多充功能
2022-04-29 17:19:41,877 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:19:41,878 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "U6XJ"}
2022-04-29 17:19:41,878 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,878 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"64335f71e60a44a5b770ad6075990796"}
2022-04-29 17:19:41,912 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:41,912 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:41,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:19:41,918 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:19:41,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,919 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925735350828532383', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:19:41,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:19:41,945 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925735350828532383", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u6768\u653f", "phone": 17199016616}}
2022-04-29 17:19:41,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,946 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：82
2022-04-29 17:19:41,977 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:41,977 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:41,978 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:19:41,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 82}
2022-04-29 17:19:41,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,990 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：82的内容： {'code': '6925735350828532383', 'billingIds': [], 'stationIds': [], 'displayName': '杨政', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 82, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925735350870475424', 'displayName': '6925735350870475424', 'id': 81, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '17199016616', 'name': '杨政', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:19:41,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:19:41,999 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u8d75\u8d8a\u4fc3", "phone": 18746241481}, "id": 82}
2022-04-29 17:19:41,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:41,999 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：82的记录已成功
2022-04-29 17:19:42,032 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:42,032 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:42,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:19:42,044 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u8d75\u8d8a\u4fc3"]]}
2022-04-29 17:19:42,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,055 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '赵越促'符合的记录数是：1条
2022-04-29 17:19:42,090 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:42,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:42,091 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,108 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:19:42,109 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 18746241481]]}
2022-04-29 17:19:42,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,109 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 18746241481符合的记录数是：1条
2022-04-29 17:19:42,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:42,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:42,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:19:42,151 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 17:19:42,151 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,151 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 54, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}], 'length': 3}
2022-04-29 17:19:42,188 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:19:42,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:19:42,189 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:19:42,198 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 17:19:42,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,198 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 59, 'status': 0}], 'length': 2}
2022-04-29 17:19:42,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:19:42,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[82], {}]}
2022-04-29 17:19:42,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,209 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：82的记录
2022-04-29 17:19:42,222 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:19:42,222 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[82], {}]}
2022-04-29 17:19:42,222 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,222 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：82的记录
2022-04-29 17:19:42,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:19:42,230 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[82], {}]}
2022-04-29 17:19:42,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,231 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：82的多充功能
2022-04-29 17:19:42,244 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:19:42,244 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[82], {}]}
2022-04-29 17:19:42,244 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:19:42,244 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：82的多充功能
2022-04-29 17:20:43,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:20:43,293 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WYQ3"}
2022-04-29 17:20:43,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,293 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"cea6c0e619b542348c5462ca09b12d82"}
2022-04-29 17:20:43,332 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:20:43,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:20:43,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,338 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:20:43,338 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:20:43,339 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,339 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925735608409129674', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:20:43,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:20:43,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925735608409129674", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u90ac\u90e1\u6301", "phone": 18404535546}}
2022-04-29 17:20:43,359 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,359 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：83
2022-04-29 17:20:43,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:20:43,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:20:43,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,408 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:20:43,408 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 83}
2022-04-29 17:20:43,408 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,408 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：83的内容： {'code': '6925735608409129674', 'billingIds': [], 'stationIds': [], 'displayName': '邬郡持', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 83, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925735608484627147', 'displayName': '6925735608484627147', 'id': 82, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18404535546', 'name': '邬郡持', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:20:43,416 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:20:43,416 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u5434\u63d0", "phone": 17277321752}, "id": 83}
2022-04-29 17:20:43,417 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,417 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：83的记录已成功
2022-04-29 17:20:43,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:20:43,449 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:20:43,449 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:20:43,461 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u5434\u63d0"]]}
2022-04-29 17:20:43,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:20:43,462 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '吴提'符合的记录数是：1条
2022-04-29 17:21:26,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 17:21:26,624 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "UCU2"}
2022-04-29 17:21:26,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,624 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f6c3209ed5ed4c4b9c4f86dab8736c8c"}
2022-04-29 17:21:26,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 17:21:26,665 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-04-29 17:21:26,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,665 INFO [root] [key.py (default_get:77] - 模型：customer_info的默认填充字段信息为：{'code': '6925735790139933415', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-04-29 17:21:26,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 17:21:26,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6925735790139933415", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u4fde\u73bb", "phone": 15097786228}}
2022-04-29 17:21:26,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,679 INFO [root] [key.py (create:34] - 新建：创建模型：customer_info新记录，id为：84
2022-04-29 17:21:26,719 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,719 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,733 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 17:21:26,733 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 84}
2022-04-29 17:21:26,733 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,733 INFO [root] [key.py (read:40] - 查看：查看模型customer_info中id为：84的内容： {'code': '6925735790139933415', 'billingIds': [], 'stationIds': [], 'displayName': '俞玻', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 84, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6925735790181876456', 'displayName': '6925735790181876456', 'id': 83, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15097786228', 'name': '俞玻', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-04-29 17:21:26,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 17:21:26,744 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u535e\u6467\u5176", "phone": 17870345545}, "id": 84}
2022-04-29 17:21:26,745 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,745 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_info中id为：84的记录已成功
2022-04-29 17:21:26,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,782 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,796 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:21:26,796 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u535e\u6467\u5176"]]}
2022-04-29 17:21:26,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,797 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '卞摧其'符合的记录数是：1条
2022-04-29 17:21:26,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,858 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 17:21:26,876 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 17870345545]]}
2022-04-29 17:21:26,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,876 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 17870345545符合的记录数是：1条
2022-04-29 17:21:26,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,914 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,924 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:21:26,924 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-04-29 17:21:26,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,924 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 1, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 56, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 6, 'sex': 1}], 'length': 3}
2022-04-29 17:21:26,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 17:21:26,958 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-04-29 17:21:26,959 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 17:21:26,966 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-04-29 17:21:26,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,966 INFO [root] [key.py (read_group:92] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 61, 'status': 0}], 'length': 2}
2022-04-29 17:21:26,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:21:26,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[84], {}]}
2022-04-29 17:21:26,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,975 INFO [root] [key.py (call_method:103] - 冻结：已成功冻结模型customer_info中id为：84的记录
2022-04-29 17:21:26,984 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:21:26,984 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[84], {}]}
2022-04-29 17:21:26,984 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,984 INFO [root] [key.py (call_method:101] - 解冻：已成功解冻模型customer_info中id为：84的记录
2022-04-29 17:21:26,992 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:21:26,992 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[84], {}]}
2022-04-29 17:21:26,992 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:26,992 INFO [root] [key.py (call_method:107] - 打开多充：已成功开启模型customer_info中id为：84的多充功能
2022-04-29 17:21:27,000 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-04-29 17:21:27,000 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[84], {}]}
2022-04-29 17:21:27,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 17:21:27,000 INFO [root] [key.py (call_method:105] - 关闭多充：已成功关闭模型customer_info中id为：84的多充功能
2022-04-29 18:30:21,495 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-04-29 18:30:21,496 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KCA3"}
2022-04-29 18:30:21,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,496 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"a50ceb1e63f94b95a0a107b9ad269dfa"}
2022-04-29 18:30:21,563 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:21,563 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:21,564 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,593 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 18:30:21,593 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-04-29 18:30:21,593 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,594 INFO [root] [key.py (default_get:77] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-04-29 18:30:21,643 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 18:30:21,643 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-04-29 18:30:21,643 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,644 INFO [root] [key.py (create:34] - 新建：创建模型：customer_card新记录，id为：134
2022-04-29 18:30:21,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:21,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:21,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-04-29 18:30:21,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 134}
2022-04-29 18:30:21,733 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,733 INFO [root] [key.py (read:40] - 查看：查看模型customer_card中id为：134的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 134, 'cardNo': '1568975633213', 'status': 0}
2022-04-29 18:30:21,763 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-04-29 18:30:21,763 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 134}
2022-04-29 18:30:21,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,763 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_card中id为：134的记录已成功
2022-04-29 18:30:21,806 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:21,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:21,807 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,842 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 18:30:21,842 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-04-29 18:30:21,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,843 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-04-29 18:30:21,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:21,897 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:21,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,923 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 18:30:21,923 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-04-29 18:30:21,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:21,924 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-04-29 18:30:21,981 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:21,981 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:21,981 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,001 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 18:30:22,001 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-04-29 18:30:22,001 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,001 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-04-29 18:30:22,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:22,065 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:22,067 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-04-29 18:30:22,101 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-04-29 18:30:22,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,102 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-04-29 18:30:22,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:22,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:22,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 18:30:22,221 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-04-29 18:30:22,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,222 INFO [root] [key.py (read_group:92] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 36]], '_total': 9, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 17, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 33]], '_total': 3, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 25]], '_total': 6, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 34, 'customerId': {}}], 'length': 13}
2022-04-29 18:30:22,271 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:22,271 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:22,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-04-29 18:30:22,289 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-04-29 18:30:22,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,289 INFO [root] [key.py (read_group:92] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 74, 'allowMoreCharge': False}], 'length': 2}
2022-04-29 18:30:22,317 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 18:30:22,317 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [134]}
2022-04-29 18:30:22,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,317 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_card中id为：134的记录
2022-04-29 18:30:22,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:22,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:22,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 18:30:22,390 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-04-29 18:30:22,390 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,391 INFO [root] [key.py (default_get:77] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-04-29 18:30:22,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 18:30:22,419 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-04-29 18:30:22,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,420 INFO [root] [key.py (create:34] - 新建：创建模型：customer_card新记录，id为：135
2022-04-29 18:30:22,471 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-04-29 18:30:22,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-04-29 18:30:22,472 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,487 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-04-29 18:30:22,488 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-04-29 18:30:22,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,488 INFO [root] [key.py (default_get:77] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-04-29 18:30:22,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-04-29 18:30:22,517 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-04-29 18:30:22,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,518 INFO [root] [key.py (create:34] - 新建：创建模型：customer_card新记录，id为：136
2022-04-29 18:30:22,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-04-29 18:30:22,537 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [135, 136]}
2022-04-29 18:30:22,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-04-29 18:30:22,537 INFO [root] [key.py (delete:55] - 批量删除：已批量删除模型customer_card中id为：135, 136的记录
