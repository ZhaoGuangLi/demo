2022-05-19 09:10:26,145 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:10:26,146 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:10:26,146 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,147 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,147 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:10:26,359 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:10:26,361 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "YXKC"}
2022-05-19 09:10:26,361 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,361 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,361 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：a08133dc6d044368a849fbb1358b2fbd
2022-05-19 09:10:26,372 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:10:26,372 INFO [root] [key.py (get:37] - 传的参数是：{'t': '8660557063175'}
2022-05-19 09:10:26,372 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,372 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,372 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:10:26,416 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:10:26,416 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0054747119090'}
2022-05-19 09:10:26,417 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,417 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,417 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:10:26,564 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:10:26,565 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '6320266817066'}
2022-05-19 09:10:26,565 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,565 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,584 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:10:26,585 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:10:26,585 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,585 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,596 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:10:26,596 INFO [root] [key.py (get:37] - 传的参数是：{'t': '5462121491961'}
2022-05-19 09:10:26,597 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:26,597 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,597 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:10:26,672 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:26,673 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:26,676 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,677 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,680 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:26,746 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:26,747 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:10:26,747 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,748 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,781 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:26,781 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:10:26,782 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,782 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,782 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1238
2022-05-19 09:10:26,842 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:26,842 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:26,843 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,843 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,844 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:26,859 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:10:26,860 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1238}
2022-05-19 09:10:26,860 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,860 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,861 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1238的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1238, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:10:26,870 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:26,870 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1238, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:10:26,870 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,871 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,904 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:10:26,905 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1238}
2022-05-19 09:10:26,905 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,905 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,905 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1238的记录已成功
2022-05-19 09:10:26,963 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:26,964 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:26,964 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,964 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,965 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:26,983 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:26,983 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:10:26,984 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:26,984 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:26,985 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:10:27,017 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:27,017 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1238]}
2022-05-19 09:10:27,017 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,018 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,018 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1238的记录
2022-05-19 09:10:27,027 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:27,028 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1238, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:10:27,028 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,028 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,043 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,043 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:10:27,044 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,044 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,044 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1239
2022-05-19 09:10:27,052 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:27,052 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1239, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:10:27,052 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,052 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,065 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,065 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:10:27,066 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,066 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,066 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1240
2022-05-19 09:10:27,077 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:27,077 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1239, 1240]}
2022-05-19 09:10:27,078 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,078 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,078 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1239, 1240的记录
2022-05-19 09:10:27,096 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:27,096 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:10:27,097 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,097 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,109 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,110 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:10:27,110 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,110 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,110 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1241
2022-05-19 09:10:27,206 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,207 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,208 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,208 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,209 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,226 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:27,227 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:10:27,227 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,227 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,228 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:10:27,247 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:27,248 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1241}
2022-05-19 09:10:27,248 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,248 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,278 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,279 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1241}, "name": "\u6c49EV"}}
2022-05-19 09:10:27,279 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,279 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,280 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1027
2022-05-19 09:10:27,327 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,327 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,327 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,328 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,328 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,342 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:10:27,342 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1027}
2022-05-19 09:10:27,342 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,342 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,343 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1027的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1241}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1027, 'nationalStandard': 255}
2022-05-19 09:10:27,355 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:10:27,355 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1027}
2022-05-19 09:10:27,355 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,356 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,356 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1027的记录已成功
2022-05-19 09:10:27,400 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,401 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,401 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,401 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,402 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,419 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:27,420 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:10:27,420 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,420 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,420 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:10:27,466 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,466 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,467 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,467 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,468 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,486 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:27,486 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:10:27,487 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,487 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,487 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:10:27,530 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,530 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,531 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,531 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,531 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,559 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:10:27,559 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:10:27,559 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,559 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,560 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1241]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1241}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:10:27,572 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:27,573 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1027]}
2022-05-19 09:10:27,573 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,573 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,573 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1027的记录
2022-05-19 09:10:27,617 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,618 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,618 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,619 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,619 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,634 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:27,635 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:10:27,635 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,636 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,636 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:10:27,645 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:27,645 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1241}
2022-05-19 09:10:27,646 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,646 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,660 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,660 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1241}, "name": "\u6c49EV"}}
2022-05-19 09:10:27,660 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,661 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,662 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1028
2022-05-19 09:10:27,708 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,709 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,710 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,710 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,712 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,739 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:27,740 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:10:27,740 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,740 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,740 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:10:27,749 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:27,750 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1241}
2022-05-19 09:10:27,750 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,750 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,763 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,763 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1241}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:10:27,764 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,764 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,764 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1029
2022-05-19 09:10:27,778 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:27,778 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1028, 1029]}
2022-05-19 09:10:27,778 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,779 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,779 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1028, 1029的记录
2022-05-19 09:10:27,802 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:27,803 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1241]}
2022-05-19 09:10:27,803 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,803 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,803 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1241的记录
2022-05-19 09:10:27,815 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:10:27,815 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1241, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:10:27,816 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,816 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,828 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,828 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:10:27,829 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,829 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,829 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1242
2022-05-19 09:10:27,865 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,865 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,865 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,866 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,866 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,880 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:27,881 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:10:27,881 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,881 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,882 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:10:27,897 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:27,898 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1242}
2022-05-19 09:10:27,898 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,898 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,913 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:27,913 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1242}, "name": "\u6c49EV"}}
2022-05-19 09:10:27,914 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,914 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,914 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1030
2022-05-19 09:10:27,952 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:27,952 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:27,953 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,953 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,954 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:27,971 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:27,971 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:10:27,972 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,972 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:27,972 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:10:27,980 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:27,981 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1030}
2022-05-19 09:10:27,981 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:27,981 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,005 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:28,006 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1030}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:10:28,006 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,006 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,007 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：835
2022-05-19 09:10:28,047 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,048 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,049 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,050 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,051 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,070 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:10:28,070 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 835}
2022-05-19 09:10:28,071 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,071 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,072 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：835的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1030}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 835}
2022-05-19 09:10:28,091 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:10:28,092 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 835}
2022-05-19 09:10:28,092 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,092 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,092 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：835的记录已成功
2022-05-19 09:10:28,147 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,148 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,149 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,149 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,150 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,191 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:28,192 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:10:28,193 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,193 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,194 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:10:28,243 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,244 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,246 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,246 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,248 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,280 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:28,281 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:10:28,281 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,282 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,282 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:10:28,325 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,326 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,326 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,327 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,327 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,345 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:28,345 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:10:28,345 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,346 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,346 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:10:28,380 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,381 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,382 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,382 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,383 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,404 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:28,405 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:10:28,405 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,406 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,406 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:10:28,450 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,451 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,451 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,451 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,452 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,471 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:10:28,472 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:10:28,472 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,473 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,473 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:10:28,520 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,520 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,522 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,522 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,524 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,597 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:10:28,597 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:10:28,598 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,599 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,599 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:10:28,642 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:28,643 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:28,643 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,643 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,644 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:28,950 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:10:28,950 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:10:28,950 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,950 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,951 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1030]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1030}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:10:28,963 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:28,963 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [835]}
2022-05-19 09:10:28,964 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:28,964 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:28,964 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：835的记录
2022-05-19 09:10:29,004 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:29,004 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:29,005 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,005 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,005 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:29,015 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:29,015 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:10:29,016 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,016 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,016 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:10:29,022 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:29,023 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1030}
2022-05-19 09:10:29,023 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,023 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,037 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:29,037 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1030}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:10:29,037 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,038 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,038 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：836
2022-05-19 09:10:29,084 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:29,085 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:29,085 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,085 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,086 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:29,097 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:29,098 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:10:29,098 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,098 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,099 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:10:29,108 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:10:29,108 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1030}
2022-05-19 09:10:29,109 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,109 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,121 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:29,121 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1030}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:10:29,122 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,122 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,122 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：837
2022-05-19 09:10:29,134 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:29,135 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [836, 837]}
2022-05-19 09:10:29,135 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,135 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,136 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：836, 837的记录
2022-05-19 09:10:29,147 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:29,148 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1030]}
2022-05-19 09:10:29,148 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,148 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,148 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1030的记录
2022-05-19 09:10:29,159 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:10:29,160 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1242]}
2022-05-19 09:10:29,160 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,160 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,160 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1242的记录
2022-05-19 09:10:29,175 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:10:29,176 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4362437051110'}
2022-05-19 09:10:29,176 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:29,176 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,176 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:10:29,327 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:10:29,329 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '3803395434278'}
2022-05-19 09:10:29,330 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:29,331 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,350 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:10:29,350 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:10:29,351 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:29,351 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,360 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:10:29,361 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1805356945471'}
2022-05-19 09:10:29,361 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:10:29,361 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,361 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:10:29,436 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:29,437 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:29,438 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,439 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,441 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:29,497 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:10:29,497 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:10:29,498 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,498 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,499 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:10:29,510 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:10:29,511 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:10:29,511 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:10:29,511 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,512 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:10:29,539 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:10:29,539 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:10:29,540 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 413
2022-05-19 09:10:29,540 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:10:29,540 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-05-19 09:13:05,424 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:13:05,425 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:13:05,425 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,425 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,425 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:13:05,464 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:13:05,464 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "EEXH"}
2022-05-19 09:13:05,464 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,465 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,465 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：8c4a0553bbbb4844aa74f2cb7efb2268
2022-05-19 09:13:05,473 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:05,474 INFO [root] [key.py (get:37] - 传的参数是：{'t': '3530487787425'}
2022-05-19 09:13:05,474 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,474 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,474 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:05,488 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:05,488 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0324422698351'}
2022-05-19 09:13:05,489 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,489 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,489 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:05,634 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:13:05,635 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '1470298702222'}
2022-05-19 09:13:05,636 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,637 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,656 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:13:05,656 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:13:05,657 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,657 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,670 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:05,670 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1689983041202'}
2022-05-19 09:13:05,671 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:05,671 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,671 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:05,736 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:05,737 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:05,737 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,738 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,739 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:05,775 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:05,775 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:05,775 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,776 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,792 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:05,792 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:05,792 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,793 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,793 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1243
2022-05-19 09:13:05,846 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:05,847 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:05,847 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,847 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,848 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:05,862 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:05,863 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1243}
2022-05-19 09:13:05,863 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,863 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,864 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1243的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1243, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:13:05,873 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:05,873 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1243, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:13:05,873 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,874 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,887 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:05,887 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1243}
2022-05-19 09:13:05,887 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,887 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,888 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1243的记录已成功
2022-05-19 09:13:05,939 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:05,940 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:05,940 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,940 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,941 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:05,958 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:05,959 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:13:05,959 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,959 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,960 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:13:05,983 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:05,984 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1243]}
2022-05-19 09:13:05,984 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,984 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:05,985 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1243的记录
2022-05-19 09:13:05,996 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:05,996 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1243, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:05,997 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:05,997 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,010 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,011 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:06,011 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,011 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,012 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1244
2022-05-19 09:13:06,022 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:06,023 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1244, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:13:06,023 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,024 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,037 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,038 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:13:06,038 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,038 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,038 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1245
2022-05-19 09:13:06,053 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:06,053 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1244, 1245]}
2022-05-19 09:13:06,054 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,054 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,054 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1244, 1245的记录
2022-05-19 09:13:06,072 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:06,072 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:06,072 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,072 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,087 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,087 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:06,088 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,088 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,089 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1246
2022-05-19 09:13:06,136 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,136 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,137 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,137 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,137 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,150 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:06,150 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:06,151 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,151 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,152 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:06,164 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:06,165 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1246}
2022-05-19 09:13:06,165 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,165 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,187 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,187 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1246}, "name": "\u6c49EV"}}
2022-05-19 09:13:06,187 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,188 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,188 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1031
2022-05-19 09:13:06,232 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,232 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,233 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,233 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,234 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,251 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:06,252 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1031}
2022-05-19 09:13:06,252 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,252 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,252 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1031的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1246}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1031, 'nationalStandard': 255}
2022-05-19 09:13:06,274 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:06,275 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1031}
2022-05-19 09:13:06,275 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,275 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,276 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1031的记录已成功
2022-05-19 09:13:06,316 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,317 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,317 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,317 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,318 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,336 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:06,337 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:13:06,337 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,337 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,338 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:13:06,416 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,416 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,416 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,417 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,417 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,437 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:06,437 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:13:06,438 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,438 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,438 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:13:06,485 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,485 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,486 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,486 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,487 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,520 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:06,521 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:13:06,521 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,522 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,522 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1246]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1246}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:13:06,537 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:06,537 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1031]}
2022-05-19 09:13:06,537 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,538 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,538 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1031的记录
2022-05-19 09:13:06,584 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,585 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,585 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,585 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,586 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,598 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:06,598 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:06,599 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,599 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,599 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:06,610 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:06,611 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1246}
2022-05-19 09:13:06,611 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,611 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,624 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,625 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1246}, "name": "\u6c49EV"}}
2022-05-19 09:13:06,625 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,625 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,626 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1032
2022-05-19 09:13:06,664 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,664 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,664 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,665 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,665 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,678 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:06,678 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:06,678 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,678 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,679 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:06,697 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:06,697 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1246}
2022-05-19 09:13:06,697 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,697 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,712 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,712 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1246}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:13:06,713 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,713 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,713 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1033
2022-05-19 09:13:06,730 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:06,730 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1032, 1033]}
2022-05-19 09:13:06,730 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,730 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,730 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1032, 1033的记录
2022-05-19 09:13:06,744 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:06,744 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1246]}
2022-05-19 09:13:06,745 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,745 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,745 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1246的记录
2022-05-19 09:13:06,759 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:06,759 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1246, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:06,760 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,760 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,772 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,772 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:06,773 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,773 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,773 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1247
2022-05-19 09:13:06,815 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,816 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,817 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,817 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,817 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,829 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:06,829 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:06,830 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,830 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,830 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:06,839 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:06,839 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1247}
2022-05-19 09:13:06,840 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,840 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,851 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,851 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1247}, "name": "\u6c49EV"}}
2022-05-19 09:13:06,851 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,852 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,852 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1034
2022-05-19 09:13:06,890 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,891 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,891 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,892 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,892 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,916 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:06,917 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:06,917 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,917 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,917 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:06,929 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:06,929 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1034}
2022-05-19 09:13:06,930 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,930 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,943 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:06,943 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1034}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:06,944 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,944 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,944 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：838
2022-05-19 09:13:06,979 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:06,980 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:06,980 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,980 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,981 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:06,994 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:06,995 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 838}
2022-05-19 09:13:06,996 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:06,996 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:06,997 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：838的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1034}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 838}
2022-05-19 09:13:07,009 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:07,009 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 838}
2022-05-19 09:13:07,009 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,010 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,010 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：838的记录已成功
2022-05-19 09:13:07,062 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,063 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,065 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,066 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,067 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,113 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:07,113 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:13:07,114 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,114 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,114 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:13:07,148 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,149 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,149 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,149 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,150 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,167 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:07,168 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:13:07,168 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,168 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,168 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:13:07,215 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,216 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,216 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,216 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,217 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,236 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:07,236 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:13:07,237 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,237 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,237 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:13:07,284 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,285 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,285 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,285 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,286 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,302 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:07,303 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:13:07,303 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,303 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,304 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:13:07,336 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,337 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,337 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,337 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,338 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,351 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:07,352 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:13:07,352 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,352 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,353 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:13:07,385 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,386 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,386 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,386 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,387 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,428 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:07,428 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:13:07,429 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,429 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,430 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:13:07,461 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,462 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,462 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,462 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,463 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,521 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:07,522 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:13:07,522 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,522 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,523 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1034]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1034}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:13:07,534 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:07,535 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [838]}
2022-05-19 09:13:07,535 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,535 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,536 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：838的记录
2022-05-19 09:13:07,574 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,575 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,575 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,575 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,576 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,588 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:07,589 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:07,589 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,589 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,589 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:07,597 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:07,597 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1034}
2022-05-19 09:13:07,598 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,598 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,610 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:07,610 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1034}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:07,611 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,611 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,612 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：839
2022-05-19 09:13:07,645 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:07,646 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:07,647 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,647 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,647 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:07,661 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:07,661 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:07,661 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,662 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,662 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:07,672 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:07,673 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1034}
2022-05-19 09:13:07,673 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,673 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,686 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:07,687 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1034}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:07,687 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,687 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,688 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：840
2022-05-19 09:13:07,699 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:07,700 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [839, 840]}
2022-05-19 09:13:07,700 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,700 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,701 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：839, 840的记录
2022-05-19 09:13:07,715 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:07,715 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1034]}
2022-05-19 09:13:07,715 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,716 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,716 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1034的记录
2022-05-19 09:13:07,735 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:07,736 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1247]}
2022-05-19 09:13:07,736 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:07,736 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,736 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1247的记录
2022-05-19 09:13:07,753 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:07,753 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1579631493838'}
2022-05-19 09:13:07,754 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:07,754 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,754 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:07,900 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:13:07,901 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '0300642023714'}
2022-05-19 09:13:07,901 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:07,901 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,917 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:13:07,917 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:13:07,918 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:07,918 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,927 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:07,928 INFO [root] [key.py (get:37] - 传的参数是：{'t': '3427949019626'}
2022-05-19 09:13:07,928 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:07,928 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:07,929 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:08,006 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:08,006 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:08,007 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:08,008 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:08,009 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:08,066 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:08,066 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:08,067 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:08,068 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:08,068 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:08,080 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:08,080 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:13:08,080 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:08,081 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:08,081 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:13:08,095 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:08,096 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:13:08,096 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 413
2022-05-19 09:13:08,096 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:08,097 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-05-19 09:13:37,498 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:13:37,498 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:13:37,498 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,498 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,499 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:13:37,532 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:13:37,533 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XGNW"}
2022-05-19 09:13:37,533 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,533 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,533 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：2fb2c06367d34e5789351de7956e71fe
2022-05-19 09:13:37,543 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:37,543 INFO [root] [key.py (get:37] - 传的参数是：{'t': '8904540041307'}
2022-05-19 09:13:37,544 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,544 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,544 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:37,559 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:37,560 INFO [root] [key.py (get:37] - 传的参数是：{'t': '3751493927186'}
2022-05-19 09:13:37,560 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,560 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,561 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:37,678 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:13:37,680 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '4319650950329'}
2022-05-19 09:13:37,680 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,683 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,698 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:13:37,699 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:13:37,699 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,699 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,711 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:37,711 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4490209806295'}
2022-05-19 09:13:37,712 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:37,712 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,712 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:37,787 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:37,787 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:37,788 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,788 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,788 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:37,806 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:37,806 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:37,806 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,806 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,817 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:37,818 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:37,818 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,818 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,819 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1248
2022-05-19 09:13:37,862 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:37,863 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:37,863 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,863 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,864 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:37,875 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:37,876 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1248}
2022-05-19 09:13:37,876 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,876 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,876 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1248的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1248, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:13:37,885 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:37,885 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1248, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:13:37,886 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,886 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,898 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:37,898 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1248}
2022-05-19 09:13:37,899 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,899 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,899 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1248的记录已成功
2022-05-19 09:13:37,949 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:37,949 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:37,949 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,950 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,950 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:37,965 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:37,965 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:13:37,966 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,966 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,966 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:13:37,978 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:37,979 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1248]}
2022-05-19 09:13:37,979 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,979 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:37,980 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1248的记录
2022-05-19 09:13:37,988 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:37,988 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1248, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:37,989 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:37,989 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,001 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,001 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:38,002 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,002 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,002 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1249
2022-05-19 09:13:38,010 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:38,010 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1249, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:13:38,011 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,011 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,024 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,024 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:13:38,025 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,025 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,025 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1250
2022-05-19 09:13:38,038 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:38,039 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1249, 1250]}
2022-05-19 09:13:38,039 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,039 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,040 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1249, 1250的记录
2022-05-19 09:13:38,052 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:38,053 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:38,053 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,053 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,067 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,067 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:38,068 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,068 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,068 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1251
2022-05-19 09:13:38,116 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,116 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,116 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,117 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,117 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,130 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:38,130 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:38,130 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,131 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,131 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:38,142 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:38,143 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1251}
2022-05-19 09:13:38,143 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,143 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,159 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,160 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1251}, "name": "\u6c49EV"}}
2022-05-19 09:13:38,160 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,160 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,160 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1035
2022-05-19 09:13:38,198 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,199 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,199 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,199 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,200 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,236 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:38,237 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1035}
2022-05-19 09:13:38,237 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,237 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,238 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1035的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1251}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1035, 'nationalStandard': 255}
2022-05-19 09:13:38,259 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:38,259 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1035}
2022-05-19 09:13:38,259 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,260 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,260 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1035的记录已成功
2022-05-19 09:13:38,309 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,309 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,309 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,309 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,310 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,327 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:38,328 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:13:38,328 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,329 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,329 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:13:38,375 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,376 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,376 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,376 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,377 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,398 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:38,398 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:13:38,398 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,399 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,399 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:13:38,446 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,447 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,447 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,447 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,448 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,478 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:38,478 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:13:38,479 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,479 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,479 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1251]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1251}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:13:38,493 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:38,493 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1035]}
2022-05-19 09:13:38,494 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,494 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,494 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1035的记录
2022-05-19 09:13:38,542 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,543 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,543 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,544 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,545 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,559 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:38,559 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:38,559 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,560 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,560 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:38,571 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:38,571 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1251}
2022-05-19 09:13:38,572 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,572 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,585 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,586 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1251}, "name": "\u6c49EV"}}
2022-05-19 09:13:38,586 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,586 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,587 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1036
2022-05-19 09:13:38,632 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,633 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,633 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,634 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,634 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,646 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:38,647 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:38,647 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,647 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,647 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:38,658 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:38,659 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1251}
2022-05-19 09:13:38,659 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,659 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,672 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,673 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1251}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:13:38,673 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,673 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,673 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1037
2022-05-19 09:13:38,686 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:38,687 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1036, 1037]}
2022-05-19 09:13:38,687 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,687 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,688 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1036, 1037的记录
2022-05-19 09:13:38,701 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:38,701 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1251]}
2022-05-19 09:13:38,702 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,702 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,702 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1251的记录
2022-05-19 09:13:38,718 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:13:38,718 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1251, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:13:38,718 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,719 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,740 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,740 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:13:38,741 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,741 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,741 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1252
2022-05-19 09:13:38,788 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,789 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,789 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,789 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,790 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,802 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:38,802 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:13:38,803 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,803 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,803 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:13:38,813 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:38,814 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1252}
2022-05-19 09:13:38,814 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,814 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,828 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,829 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1252}, "name": "\u6c49EV"}}
2022-05-19 09:13:38,829 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,830 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,830 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1038
2022-05-19 09:13:38,876 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,877 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,877 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,877 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,878 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,891 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:38,891 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:38,892 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,892 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,892 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:38,904 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:38,905 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1038}
2022-05-19 09:13:38,905 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,905 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,919 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:38,919 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1038}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:38,920 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,920 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,920 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：841
2022-05-19 09:13:38,966 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:38,967 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:38,967 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,967 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,968 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:38,985 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:38,985 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 841}
2022-05-19 09:13:38,986 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:38,986 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:38,986 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：841的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1038}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 841}
2022-05-19 09:13:39,000 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:13:39,001 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 841}
2022-05-19 09:13:39,001 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,001 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,001 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：841的记录已成功
2022-05-19 09:13:39,046 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,046 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,046 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,047 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,047 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,065 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:39,065 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:13:39,066 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,066 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,066 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:13:39,113 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,114 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,114 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,114 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,115 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,134 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:39,134 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:13:39,134 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,135 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,135 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:13:39,182 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,183 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,183 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,184 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,184 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,204 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:39,204 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:13:39,205 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,205 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,205 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:13:39,252 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,253 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,253 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,253 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,254 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,272 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:39,273 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:13:39,273 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,273 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,273 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:13:39,319 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,319 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,320 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,320 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,320 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,337 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:13:39,337 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:13:39,338 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,338 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,338 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:13:39,383 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,384 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,384 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,384 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,385 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,438 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:39,438 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:13:39,439 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,439 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,439 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:13:39,477 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,478 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,479 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,479 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,479 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,537 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:13:39,538 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:13:39,538 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,538 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,539 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1038]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1038}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:13:39,550 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:39,550 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [841]}
2022-05-19 09:13:39,551 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,551 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,551 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：841的记录
2022-05-19 09:13:39,584 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,584 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,585 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,585 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,585 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,596 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:39,596 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:39,597 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,597 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,597 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:39,606 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:39,606 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1038}
2022-05-19 09:13:39,607 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,607 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,618 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:39,618 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1038}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:39,619 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,619 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,619 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：842
2022-05-19 09:13:39,661 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:39,661 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:39,662 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,662 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,662 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:39,673 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:39,674 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:13:39,674 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,674 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,674 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:13:39,684 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:13:39,685 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1038}
2022-05-19 09:13:39,685 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,685 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,699 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:39,699 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1038}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:13:39,700 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,700 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,700 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：843
2022-05-19 09:13:39,712 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:39,713 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [842, 843]}
2022-05-19 09:13:39,713 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,713 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,713 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：842, 843的记录
2022-05-19 09:13:39,729 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:39,730 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1038]}
2022-05-19 09:13:39,730 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,730 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,731 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1038的记录
2022-05-19 09:13:39,747 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:13:39,747 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1252]}
2022-05-19 09:13:39,747 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:39,747 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,748 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1252的记录
2022-05-19 09:13:39,763 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:39,763 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1373960893753'}
2022-05-19 09:13:39,763 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:39,763 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,764 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:39,909 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:13:39,910 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '5048148830437'}
2022-05-19 09:13:39,910 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:39,911 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,929 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:13:39,930 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:13:39,930 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:39,930 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,940 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:13:39,940 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4682469323987'}
2022-05-19 09:13:39,941 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:13:39,941 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:39,941 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:13:40,005 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:40,006 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:40,006 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:40,007 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:40,007 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:40,055 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:13:40,055 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:13:40,056 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:40,056 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:40,057 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:13:40,071 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:13:40,071 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:13:40,072 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:40,072 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:40,073 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:13:40,089 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:13:40,089 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:13:40,090 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:13:40,090 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:40,090 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：760
2022-05-19 09:13:40,101 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:13:40,102 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["stationIds", "displayName", "billingDtlCount", "orgCustomerCount", "companyId", "equipmentCount", "stationCount", "billingDtlIds", "name", "equipmentIds", "customerIds", "id", "customerCount"], "id": 760}
2022-05-19 09:13:40,102 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 419
2022-05-19 09:13:40,103 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:13:40,103 ERROR [root] [key.py (post:28] - 出现异常，code:419不等于200
2022-05-19 09:17:53,042 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:17:53,043 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:17:53,043 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,043 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,043 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:17:53,086 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:17:53,086 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XQFT"}
2022-05-19 09:17:53,087 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,087 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,087 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：6967b5596fbc4034a2e8f8a5afe04835
2022-05-19 09:17:53,097 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:17:53,098 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1908169748251'}
2022-05-19 09:17:53,098 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,098 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,098 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:17:53,114 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:17:53,114 INFO [root] [key.py (get:37] - 传的参数是：{'t': '3175871254791'}
2022-05-19 09:17:53,114 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,115 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,115 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:17:53,256 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:17:53,257 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '0795246741071'}
2022-05-19 09:17:53,257 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,258 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,279 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:17:53,280 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:17:53,280 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,281 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,293 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:17:53,294 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0109676568047'}
2022-05-19 09:17:53,295 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:53,295 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,296 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:17:53,385 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,386 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,386 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,386 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,387 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,405 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:53,405 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:17:53,406 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,406 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,419 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:53,420 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:17:53,420 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,420 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,420 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1253
2022-05-19 09:17:53,457 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,458 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,459 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,459 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,459 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,471 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:17:53,471 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1253}
2022-05-19 09:17:53,471 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,472 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,472 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1253的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1253, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:17:53,479 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:53,479 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1253, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:17:53,479 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,480 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,489 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:17:53,489 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1253}
2022-05-19 09:17:53,490 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,490 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,490 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1253的记录已成功
2022-05-19 09:17:53,524 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,525 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,525 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,525 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,526 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,538 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:53,539 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:17:53,539 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,539 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,540 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:17:53,549 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:53,550 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1253]}
2022-05-19 09:17:53,550 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,550 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,551 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1253的记录
2022-05-19 09:17:53,557 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:53,557 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1253, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:17:53,557 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,558 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,566 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:53,567 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:17:53,567 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,567 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,568 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1254
2022-05-19 09:17:53,574 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:53,574 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1254, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:17:53,574 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,575 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,584 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:53,585 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:17:53,585 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,585 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,585 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1255
2022-05-19 09:17:53,597 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:53,597 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1254, 1255]}
2022-05-19 09:17:53,597 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,597 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,598 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1254, 1255的记录
2022-05-19 09:17:53,612 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:53,612 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:17:53,613 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,613 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,625 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:53,626 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:17:53,626 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,626 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,627 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1256
2022-05-19 09:17:53,672 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,672 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,673 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,673 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,674 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,685 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:53,685 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:17:53,686 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,686 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,686 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:17:53,695 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:53,695 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1256}
2022-05-19 09:17:53,695 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,696 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,709 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:53,709 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1256}, "name": "\u6c49EV"}}
2022-05-19 09:17:53,709 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,709 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,710 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1039
2022-05-19 09:17:53,762 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,762 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,763 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,763 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,764 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,778 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:17:53,779 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1039}
2022-05-19 09:17:53,779 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,779 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,780 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1039的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1256}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1039, 'nationalStandard': 255}
2022-05-19 09:17:53,793 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:17:53,793 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1039}
2022-05-19 09:17:53,793 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,794 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,794 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1039的记录已成功
2022-05-19 09:17:53,842 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,842 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,842 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,842 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,843 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,861 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:53,862 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:17:53,862 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,862 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,863 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:17:53,929 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:53,930 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:53,930 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,930 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,931 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:53,952 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:53,953 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:17:53,953 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:53,954 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:53,954 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:17:54,000 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,000 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,001 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,001 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,001 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,030 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:17:54,031 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:17:54,031 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,032 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,032 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1256]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1256}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:17:54,043 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:54,043 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1039]}
2022-05-19 09:17:54,044 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,044 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,045 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1039的记录
2022-05-19 09:17:54,091 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,092 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,092 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,093 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,093 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,109 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:54,110 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:17:54,111 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,111 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,111 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:17:54,123 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:54,123 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1256}
2022-05-19 09:17:54,124 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,124 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,138 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:54,138 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1256}, "name": "\u6c49EV"}}
2022-05-19 09:17:54,138 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,139 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,139 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1040
2022-05-19 09:17:54,184 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,185 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,185 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,185 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,186 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,197 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:54,198 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:17:54,198 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,198 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,198 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:17:54,206 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:54,207 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1256}
2022-05-19 09:17:54,207 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,207 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,219 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:54,220 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1256}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:17:54,220 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,220 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,220 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1041
2022-05-19 09:17:54,231 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:54,232 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1040, 1041]}
2022-05-19 09:17:54,232 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,232 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,232 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1040, 1041的记录
2022-05-19 09:17:54,243 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:54,243 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1256]}
2022-05-19 09:17:54,243 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,244 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,244 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1256的记录
2022-05-19 09:17:54,256 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:17:54,257 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1256, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:17:54,257 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,257 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,272 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:54,272 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:17:54,272 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,273 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,273 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1257
2022-05-19 09:17:54,315 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,316 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,316 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,316 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,317 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,342 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:54,342 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:17:54,343 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,343 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,343 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:17:54,352 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:54,352 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1257}
2022-05-19 09:17:54,353 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,353 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,366 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:54,367 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1257}, "name": "\u6c49EV"}}
2022-05-19 09:17:54,367 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,367 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,367 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1042
2022-05-19 09:17:54,412 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,413 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,413 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,414 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,414 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,429 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:54,429 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:17:54,429 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,430 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,430 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:17:54,441 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:54,441 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1042}
2022-05-19 09:17:54,442 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,442 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,455 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:54,456 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1042}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:17:54,456 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,456 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,457 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：844
2022-05-19 09:17:54,489 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,489 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,489 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,490 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,490 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,522 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:17:54,522 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 844}
2022-05-19 09:17:54,523 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,523 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,523 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：844的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1042}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 844}
2022-05-19 09:17:54,535 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:17:54,536 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 844}
2022-05-19 09:17:54,536 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,536 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,536 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：844的记录已成功
2022-05-19 09:17:54,582 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,582 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,583 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,583 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,584 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,600 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:54,601 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:17:54,601 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,601 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,602 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:17:54,647 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,648 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,648 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,648 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,649 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,666 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:54,667 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:17:54,667 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,667 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,667 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:17:54,715 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,717 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,717 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,718 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,718 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,736 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:54,737 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:17:54,737 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,737 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,738 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:17:54,782 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,783 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,783 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,783 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,783 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,798 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:54,799 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:17:54,799 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,799 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,799 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:17:54,843 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,843 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,844 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,844 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,845 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,863 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:17:54,863 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:17:54,864 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,864 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,864 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:17:54,900 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,900 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,900 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,901 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,901 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:54,951 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:17:54,952 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:17:54,952 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,952 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,952 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:17:54,985 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:54,987 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:54,987 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:54,988 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:54,988 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,048 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:17:55,049 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:17:55,049 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,049 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,050 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1042]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1042}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:17:55,062 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:55,062 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [844]}
2022-05-19 09:17:55,062 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,062 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,063 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：844的记录
2022-05-19 09:17:55,109 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:55,110 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:55,110 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,111 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,111 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,123 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:55,124 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:17:55,124 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,125 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,125 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:17:55,134 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:55,135 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1042}
2022-05-19 09:17:55,135 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,135 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,146 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:55,146 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1042}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:17:55,147 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,147 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,147 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：845
2022-05-19 09:17:55,191 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:55,191 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:55,192 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,192 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,192 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,203 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:55,203 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:17:55,204 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,204 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,204 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:17:55,212 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:17:55,213 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1042}
2022-05-19 09:17:55,213 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,213 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,226 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:55,227 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1042}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:17:55,227 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,227 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,228 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：846
2022-05-19 09:17:55,239 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:55,239 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [845, 846]}
2022-05-19 09:17:55,240 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,240 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,240 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：845, 846的记录
2022-05-19 09:17:55,253 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:55,254 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1042]}
2022-05-19 09:17:55,254 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,254 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,254 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1042的记录
2022-05-19 09:17:55,273 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:17:55,273 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1257]}
2022-05-19 09:17:55,273 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,273 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,273 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1257的记录
2022-05-19 09:17:55,290 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:17:55,290 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4165192658969'}
2022-05-19 09:17:55,290 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:55,290 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,290 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:17:55,438 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:17:55,439 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '6364363035958'}
2022-05-19 09:17:55,439 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:55,439 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,458 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:17:55,458 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': 35}
2022-05-19 09:17:55,458 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:55,459 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,476 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:17:55,477 INFO [root] [key.py (get:37] - 传的参数是：{'t': '9244173494127'}
2022-05-19 09:17:55,477 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:17:55,477 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,478 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:17:55,555 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:55,556 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_billing", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:55,556 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,556 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,557 INFO [root] [key.py (load_views:89] - {'fields': {'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_info'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'station_equipment'}, 'customerIds': {'name': 'customerIds', 'translate': '客户', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'fields_views': {'search': {'id': 80, 'name': 'customer_billing Search', 'type': 'search', 'arch': '<search string="计费策略">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 79, 'name': 'customer_billing Form', 'type': 'form', 'arch': '<form string="计费策略">\n                <sheet>\n                    <button-box attrs="{\'invisible\': [[\'id\',\'=?\']]}">\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info\'                                          }">\n                            <field name="customerCount" widget="statinfo" string="个人客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_customer_info_org\'                                          }">\n                            <field name="orgCustomerCount" widget="statinfo" string="公司客户"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_info\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="stationCount" widget="statinfo" string="电站"/>\n                        </button>\n                        <button name="returnActionToOpen2" icon="" type="object" context="{                                          \'xmlId\':\'action_station_equipment\',                                          \'field\':\'customerBillingIds\'                                          }">\n                            <field name="equipmentCount" widget="statinfo" string="设备"/>\n                        </button>\n                    </button-box>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="时段计费">\n                            <field name="billingDtlIds" widget="time-frame-picker">\n                                \n                            </field>\n                        </page>\n                        <page string="电站">\n                            <field name="stationIds">\n                                \n                            </field>\n                        </page>\n                        <page string="电桩">\n                            <field name="equipmentIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'orgCustomerCount': {'name': 'orgCustomerCount', 'translate': '公司客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationIds': {'name': 'stationIds', 'translate': '充电站', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="name" string="名称"/>\n                                    <field name="region"/>\n                                    <field name="stationStatus" string="状态"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'stationStatus': {'name': 'stationStatus', 'translate': '站点状态', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"站点状态不能为空"}', 'selection': [[0, '未知'], [1, '建设中'], [2, '关闭下线'], [3, '维护中'], [4, '正常使用']], 'views': {}}, 'region': {'name': 'region', 'translate': '区域', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_info'}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlIds': {'name': 'billingDtlIds', 'translate': '默认计费明细列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="periodType"/>\n                                    <field name="startTime"/>\n                                    <field name="endTime"/>\n                                    <field name="electricFee" string="电费" options="{\'unit\':\'元/度\'}"/>\n                                    <field name="serviceFee" string="服务费" options="{\'unit\':\'元/度\'}"/>\n                                </tree>', 'fields': {'serviceFee': {'name': 'serviceFee', 'translate': '服务费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"服务费单价不能为空"}', 'views': {}}, 'electricFee': {'name': 'electricFee', 'translate': '电费单价', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电费单价不能为空"}', 'views': {}}, 'periodType': {'name': 'periodType', 'translate': '时段类型', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"时段类型不能为空"}', 'selection': [[0, '尖'], [1, '峰'], [2, '谷'], [3, '平']], 'views': {}}, 'startTime': {'name': 'startTime', 'translate': '开始时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"开始时间不能为空"}', 'views': {}}, 'endTime': {'name': 'endTime', 'translate': '结束时间', 'type': 'Time', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"结束时间不能为空"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_billing_dtl', 'relationField': 'billingId'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'equipmentIds': {'name': 'equipmentIds', 'translate': '充电设备', 'type': 'Many2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field name="equipmentNo"/>\n                                    <field name="name" string="设备名称"/>\n                                    <field name="equipmentModelId"/>\n                                    <field name="equipmentType"/>\n                                    <field name="equipmentPower" string="设备功率" options="{\'unit\':\'kW\'}"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'equipmentModelId': {'name': 'equipmentModelId', 'translate': '型号', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"型号不能为空"}', 'views': {}, 'onchange': 'equipmentModelIdOnchange', 'relation': 'station_equipment_model'}, 'equipmentNo': {'name': 'equipmentNo', 'translate': '设备编码', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"设备编码必须为1-32位数字"}', 'views': {}}, 'equipmentPower': {'name': 'equipmentPower', 'translate': '设备额定功率', 'type': 'Float', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'equipmentType': {'name': 'equipmentType', 'translate': '设备类型', 'type': 'Selection', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'selection': [[1, '直流'], [2, '交流'], [3, '交直流一体']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'station_equipment'}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 78, 'name': 'customer_billing Tree', 'type': 'tree', 'arch': '<tree string="计费策略">\n                <field name="name"/>\n                <field name="billingDtlCount"/>\n                <field name="customerCount"/>\n                <field name="stationCount"/>\n                <field name="equipmentCount" string="电桩数量"/>\n            </tree>', 'fields': {'equipmentCount': {'name': 'equipmentCount', 'translate': '设备数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'stationCount': {'name': 'stationCount', 'translate': '电站数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'billingDtlCount': {'name': 'billingDtlCount', 'translate': '时段数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"名称不能为空"}', 'views': {}}, 'customerCount': {'name': 'customerCount', 'translate': '个人客户数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,601 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:55,602 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:55,602 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,603 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,604 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,616 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:17:55,617 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:17:55,617 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,617 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,618 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:17:55,652 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:17:55,652 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:17:55,653 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,653 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,653 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：761
2022-05-19 09:17:55,699 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:17:55,700 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:17:55,700 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,701 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,701 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:17:55,716 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:17:55,717 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 761}
2022-05-19 09:17:55,717 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:17:55,717 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,718 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：761的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 761, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 09:17:55,732 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:17:55,733 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["stationIds", "displayName", "billingDtlCount", "orgCustomerCount", "companyId", "equipmentCount", "stationCount", "billingDtlIds", "name", "equipmentIds", "customerIds", "id", "customerCount"], "id": 761}
2022-05-19 09:17:55,733 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 419
2022-05-19 09:17:55,733 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:17:55,733 ERROR [root] [key.py (post:28] - 出现异常，code:419不等于200
2022-05-19 09:31:03,151 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:31:03,152 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:31:03,152 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,152 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,152 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:31:03,198 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:31:03,198 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "W6AD"}
2022-05-19 09:31:03,198 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,199 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,199 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：57ea5856428f4e3fbcaffc9fdb454f62
2022-05-19 09:31:03,210 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:03,210 INFO [root] [key.py (get:37] - 传的参数是：{'t': '7334838838937'}
2022-05-19 09:31:03,210 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,211 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,211 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:03,227 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:03,229 INFO [root] [key.py (get:37] - 传的参数是：{'t': '8494735432376'}
2022-05-19 09:31:03,229 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,229 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,230 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:03,372 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:31:03,373 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '8806614194471'}
2022-05-19 09:31:03,374 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,375 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,407 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:31:03,407 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 09:31:03,408 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,409 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,424 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:03,425 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4766458877318'}
2022-05-19 09:31:03,425 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:03,426 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,426 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:03,518 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:03,519 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:03,521 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,522 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,524 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:03,562 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:03,563 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:03,563 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,563 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,577 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:03,578 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:03,578 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,578 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,579 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1258
2022-05-19 09:31:03,627 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:03,628 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:03,628 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,628 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,629 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:03,644 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:03,644 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1258}
2022-05-19 09:31:03,645 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,645 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,645 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1258的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1258, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:31:03,674 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:03,675 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1258, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:31:03,676 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,677 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,696 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:03,697 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1258}
2022-05-19 09:31:03,697 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,698 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,698 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1258的记录已成功
2022-05-19 09:31:03,756 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:03,756 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:03,756 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,756 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,757 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:03,774 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:03,775 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:31:03,775 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,775 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,776 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:31:03,791 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:03,792 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1258]}
2022-05-19 09:31:03,792 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,792 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,792 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1258的记录
2022-05-19 09:31:03,802 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:03,803 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1258, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:03,803 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,803 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,816 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:03,817 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:03,817 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,817 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,817 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1259
2022-05-19 09:31:03,826 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:03,826 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1259, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:31:03,826 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,827 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,841 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:03,842 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:31:03,842 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,842 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,842 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1260
2022-05-19 09:31:03,856 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:03,857 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1259, 1260]}
2022-05-19 09:31:03,858 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,860 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,861 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1259, 1260的记录
2022-05-19 09:31:03,886 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:03,887 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:03,887 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,887 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,902 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:03,903 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:03,903 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,903 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,904 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1261
2022-05-19 09:31:03,952 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:03,953 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:03,953 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,953 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,954 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:03,966 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:03,967 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:03,967 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,967 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,968 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:03,978 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:03,980 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1261}
2022-05-19 09:31:03,980 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:03,980 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:03,999 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,000 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1261}, "name": "\u6c49EV"}}
2022-05-19 09:31:04,000 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,000 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,001 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1043
2022-05-19 09:31:04,049 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,049 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,050 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,050 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,051 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,067 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:04,068 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1043}
2022-05-19 09:31:04,068 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,068 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,068 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1043的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1261}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1043, 'nationalStandard': 255}
2022-05-19 09:31:04,081 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:04,082 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1043}
2022-05-19 09:31:04,082 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,082 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,083 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1043的记录已成功
2022-05-19 09:31:04,129 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,129 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,129 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,131 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,131 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,156 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:04,157 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:31:04,157 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,157 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,158 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:31:04,209 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,209 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,210 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,210 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,211 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,232 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:04,232 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:31:04,233 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,233 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,233 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:31:04,280 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,281 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,281 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,281 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,282 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,313 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:04,313 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:31:04,313 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,314 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,314 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1261]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1261}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:31:04,329 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:04,330 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1043]}
2022-05-19 09:31:04,330 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,331 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,332 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1043的记录
2022-05-19 09:31:04,388 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,388 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,388 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,389 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,389 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,402 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:04,403 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:04,403 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,403 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,404 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:04,413 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:04,413 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1261}
2022-05-19 09:31:04,413 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,413 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,424 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,424 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1261}, "name": "\u6c49EV"}}
2022-05-19 09:31:04,425 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,425 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,425 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1044
2022-05-19 09:31:04,459 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,459 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,460 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,460 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,460 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,481 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:04,482 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:04,482 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,482 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,483 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:04,494 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:04,495 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1261}
2022-05-19 09:31:04,495 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,495 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,508 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,508 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1261}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:31:04,509 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,509 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,509 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1045
2022-05-19 09:31:04,523 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:04,523 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1044, 1045]}
2022-05-19 09:31:04,524 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,524 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,524 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1044, 1045的记录
2022-05-19 09:31:04,537 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:04,538 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1261]}
2022-05-19 09:31:04,538 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,538 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,538 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1261的记录
2022-05-19 09:31:04,550 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:04,550 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1261, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:04,551 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,551 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,567 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,568 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:04,568 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,569 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,569 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1262
2022-05-19 09:31:04,618 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,618 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,619 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,619 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,620 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,638 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:04,638 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:04,639 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,639 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,640 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:04,652 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:04,653 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1262}
2022-05-19 09:31:04,653 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,654 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,668 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,668 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1262}, "name": "\u6c49EV"}}
2022-05-19 09:31:04,669 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,669 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,670 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1046
2022-05-19 09:31:04,718 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,718 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,719 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,720 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,721 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,742 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:04,742 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:04,743 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,744 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,744 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:04,757 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:04,758 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1046}
2022-05-19 09:31:04,759 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,759 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,774 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:04,776 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1046}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:04,776 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,776 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,776 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：847
2022-05-19 09:31:04,827 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,828 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,828 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,829 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,830 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,849 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:04,849 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 847}
2022-05-19 09:31:04,850 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,851 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,851 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：847的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1046}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 847}
2022-05-19 09:31:04,866 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:04,866 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 847}
2022-05-19 09:31:04,867 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,867 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,867 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：847的记录已成功
2022-05-19 09:31:04,917 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:04,917 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:04,918 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,918 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,919 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:04,954 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:04,955 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:31:04,955 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:04,955 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:04,956 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:31:05,002 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,003 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,003 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,004 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,004 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,022 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:05,023 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:31:05,023 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,023 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,023 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:31:05,070 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,071 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,071 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,071 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,072 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,091 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:05,092 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:31:05,092 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,092 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,093 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:31:05,140 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,140 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,141 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,141 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,142 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,167 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:05,169 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:31:05,170 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,171 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,173 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:31:05,228 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,228 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,229 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,229 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,230 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,266 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:05,267 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:31:05,267 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,268 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,268 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:31:05,314 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,314 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,315 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,315 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,316 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,372 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:05,372 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:31:05,373 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,373 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,373 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:31:05,421 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,422 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,422 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,422 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,423 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,501 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:05,502 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:31:05,502 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,503 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,503 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1046]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1046}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:31:05,517 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:05,517 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [847]}
2022-05-19 09:31:05,517 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,517 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,518 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：847的记录
2022-05-19 09:31:05,565 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,565 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,565 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,565 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,566 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,580 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:05,581 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:05,581 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,582 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,582 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:05,593 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:05,593 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1046}
2022-05-19 09:31:05,594 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,595 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,615 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:05,615 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1046}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:05,615 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,616 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,616 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：848
2022-05-19 09:31:05,663 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,663 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,663 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,663 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,664 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:05,680 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:05,680 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:05,681 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,681 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,681 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:05,691 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:05,692 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1046}
2022-05-19 09:31:05,692 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,692 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,706 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:05,707 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1046}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:05,707 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,707 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,708 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：849
2022-05-19 09:31:05,720 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:05,720 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [848, 849]}
2022-05-19 09:31:05,720 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,721 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,721 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：848, 849的记录
2022-05-19 09:31:05,733 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:05,733 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1046]}
2022-05-19 09:31:05,733 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,733 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,734 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1046的记录
2022-05-19 09:31:05,752 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:05,753 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1262]}
2022-05-19 09:31:05,753 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,753 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,753 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1262的记录
2022-05-19 09:31:05,770 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:05,770 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1661399134212'}
2022-05-19 09:31:05,770 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:05,770 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,771 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:05,918 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:31:05,918 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '7660337098847'}
2022-05-19 09:31:05,918 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:05,919 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,934 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:31:05,934 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 09:31:05,934 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:05,935 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,945 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:05,945 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0888595858925'}
2022-05-19 09:31:05,945 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:05,945 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,946 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:05,993 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:05,994 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:05,994 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:05,994 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:05,995 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:06,044 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:06,045 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:06,045 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:06,045 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:06,046 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:06,057 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:06,057 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:31:06,058 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:06,058 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:06,058 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:31:06,078 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:06,078 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:31:06,079 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 413
2022-05-19 09:31:06,079 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:06,079 ERROR [root] [key.py (post:28] - 出现异常，code:413不等于200
2022-05-19 09:31:19,751 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 09:31:19,752 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 09:31:19,752 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:19,752 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:19,752 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 09:31:19,791 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 09:31:19,792 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WVWU"}
2022-05-19 09:31:19,792 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:19,792 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:19,792 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：f0ceef65624b4f7abe16b39d3ed2aab9
2022-05-19 09:31:19,806 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:19,806 INFO [root] [key.py (get:37] - 传的参数是：{'t': '2193260453960'}
2022-05-19 09:31:19,806 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:19,806 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:19,807 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:19,823 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:19,823 INFO [root] [key.py (get:37] - 传的参数是：{'t': '7234513267390'}
2022-05-19 09:31:19,823 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:19,823 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:19,824 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:19,975 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:31:19,976 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '0471143558813'}
2022-05-19 09:31:19,976 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:19,977 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:19,996 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:31:19,996 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 09:31:19,996 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:19,997 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,006 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:20,007 INFO [root] [key.py (get:37] - 传的参数是：{'t': '5046359561727'}
2022-05-19 09:31:20,007 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:20,007 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,007 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:20,055 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,055 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,055 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,055 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,056 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,080 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:20,081 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:20,081 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,082 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,097 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,098 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:20,098 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,099 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,099 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1263
2022-05-19 09:31:20,151 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,151 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,152 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,152 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,152 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,166 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:20,166 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1263}
2022-05-19 09:31:20,167 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,167 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,167 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1263的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1263, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 09:31:20,178 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:20,178 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1263, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:31:20,178 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,178 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,191 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:20,191 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1263}
2022-05-19 09:31:20,192 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,192 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,192 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_brand中id为：1263的记录已成功
2022-05-19 09:31:20,243 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,243 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,244 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,244 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,245 INFO [root] [key.py (load_views:89] - {'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 84, 'name': 'customer_car_brand Search', 'type': 'search', 'arch': '<search string="车辆品牌">\n                <field name="name" string="名称"/>\n            </search>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 83, 'name': 'customer_car_brand Form', 'type': 'form', 'arch': '<form string="车辆品牌">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="logoUrl" string="LOGO" widget="photo"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="name"/>\n                            <field name="pinyin" readonly="true"/>\n                        </group>\n                        <group>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <notebook>\n                        <page string="车型">\n                            <field name="carModelIds">\n                                \n                            </field>\n                        </page>\n                    </notebook>\n                </sheet>\n            </form>', 'fields': {'carModelIds': {'name': 'carModelIds', 'translate': '车型列表', 'type': 'One2many', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {'tree': {'arch': '<?xml version="1.0" encoding="UTF-8"?>\n<tree>\n                                    <field string="名称" name="name"/>\n                                </tree>', 'fields': {'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}, 'relation': 'customer_car_model', 'relationField': 'carBrandId'}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'pinyin': {'name': 'pinyin', 'translate': '品牌拼音', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"品牌拼音不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'logoUrl': {'name': 'logoUrl', 'translate': 'logo图标', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 82, 'name': 'customer_car_brand Tree', 'type': 'tree', 'arch': '<tree string="车辆品牌">\n                <field name="name"/>\n                <field name="carModelCount"/>\n            </tree>', 'fields': {'name': {'name': 'name', 'translate': '品牌名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}, 'onchange': 'pinyinOnchange'}, 'carModelCount': {'name': 'carModelCount', 'translate': '车型数量', 'type': 'Integer', 'required': False, 'readonly': True, 'searchable': False, 'sortable': False, 'store': False, 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,264 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:20,265 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 09:31:20,266 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,266 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,267 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 09:31:20,278 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:20,279 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1263]}
2022-05-19 09:31:20,279 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,279 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,280 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1263的记录
2022-05-19 09:31:20,288 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:20,289 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1263, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:20,289 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,289 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,303 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,303 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:20,303 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,304 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,304 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1264
2022-05-19 09:31:20,314 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:20,314 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1264, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 09:31:20,314 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,315 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,328 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,329 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 09:31:20,329 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,329 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,329 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1265
2022-05-19 09:31:20,348 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:20,348 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1264, 1265]}
2022-05-19 09:31:20,348 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,348 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,348 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_brand中id为：1264, 1265的记录
2022-05-19 09:31:20,362 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:20,362 INFO [root] [key.py (post:20] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:20,362 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,362 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,379 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,380 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:20,380 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,380 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,380 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1266
2022-05-19 09:31:20,447 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,447 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,448 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,448 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,448 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,460 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:20,461 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:20,461 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,462 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,462 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:20,471 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:20,471 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1266}
2022-05-19 09:31:20,471 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,472 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,485 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,485 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1266}, "name": "\u6c49EV"}}
2022-05-19 09:31:20,486 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,486 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,486 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1047
2022-05-19 09:31:20,532 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,533 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,533 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,533 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,534 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,548 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:20,549 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1047}
2022-05-19 09:31:20,549 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,549 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,549 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1047的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1266}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1047, 'nationalStandard': 255}
2022-05-19 09:31:20,565 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:20,566 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1047}
2022-05-19 09:31:20,566 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,566 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,566 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car_model中id为：1047的记录已成功
2022-05-19 09:31:20,616 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,616 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,617 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,617 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,617 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,633 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:20,633 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 09:31:20,633 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,633 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,634 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 09:31:20,682 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,683 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,683 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,683 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,684 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,703 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:20,704 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 09:31:20,704 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,704 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,705 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 09:31:20,756 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,756 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,757 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,757 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,758 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,807 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:20,807 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 09:31:20,808 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,808 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,808 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1266]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1266}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 09:31:20,821 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:20,822 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1047]}
2022-05-19 09:31:20,822 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,822 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,822 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1047的记录
2022-05-19 09:31:20,869 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,870 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,870 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,870 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,871 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,884 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:20,885 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:20,885 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,885 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,886 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:20,900 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:20,900 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1266}
2022-05-19 09:31:20,900 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,901 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,915 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:20,916 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1266}, "name": "\u6c49EV"}}
2022-05-19 09:31:20,916 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,916 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,917 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1048
2022-05-19 09:31:20,965 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:20,966 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:20,966 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,966 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,967 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:20,978 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:20,979 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:20,979 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,979 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:20,979 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:20,989 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:20,990 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1266}
2022-05-19 09:31:20,990 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:20,990 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,002 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:21,003 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1266}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 09:31:21,003 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,003 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,003 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1049
2022-05-19 09:31:21,016 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:21,017 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1048, 1049]}
2022-05-19 09:31:21,017 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,017 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,017 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car_model中id为：1048, 1049的记录
2022-05-19 09:31:21,028 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:21,029 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1266]}
2022-05-19 09:31:21,029 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,029 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,029 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1266的记录
2022-05-19 09:31:21,042 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 09:31:21,042 INFO [root] [key.py (post:20] - 传的参数是：{"id": 1266, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 09:31:21,042 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,043 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,055 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:21,056 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 09:31:21,056 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,056 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,056 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_brand新记录，id为：1267
2022-05-19 09:31:21,105 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,105 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,106 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,106 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,107 INFO [root] [key.py (load_views:89] - {'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 87, 'name': 'customer_car_model Search', 'type': 'search', 'arch': '<search string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <group string="分组按">\n                    <field name="groupby_carBrandId" string="车辆品牌" context="{\'group_by\': \'carBrandId\'}"/>\n                </group>\n            </search>', 'fields': {'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 86, 'name': 'customer_car_model Form', 'type': 'form', 'arch': '<form string="车型">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" string="车型照片" widget="photo"/>\n                        </group>\n                        <group>\n                            <field name="name" string="名称"/>\n                            <field name="carBrandId" string="车辆品牌"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="nationalStandard" string="支持国标"/>\n                            <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                        </group>\n                        <group>\n                            <field name="bms" string="辅助电源"/>\n                            <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'res_company'}, 'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车型图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 85, 'name': 'customer_car_model Tree', 'type': 'tree', 'arch': '<tree string="车型">\n                <field name="name" string="名称"/>\n                <field name="carBrandId" string="车辆品牌"/>\n                <field name="nationalStandard" string="支持国标"/>\n                <field name="totalBatteryCapacity" options="{\'unit\':\'kW.h\'}"/>\n                <field name="bms" string="辅助电源"/>\n                <field name="enduranceMileage" options="{\'unit\':\'km\'}"/>\n            </tree>', 'fields': {'enduranceMileage': {'name': 'enduranceMileage', 'translate': '续航里程', 'type': 'Integer', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"续航里程不能为空"}', 'views': {}}, 'totalBatteryCapacity': {'name': 'totalBatteryCapacity', 'translate': '电池额度总电量', 'type': 'Float', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"电池额度总电量不能为空"}', 'views': {}}, 'carBrandId': {'name': 'carBrandId', 'translate': '汽车品牌', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"汽车品牌不能为空"}', 'views': {}, 'relation': 'customer_car_brand'}, 'name': {'name': 'name', 'translate': '车型名称', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'bms': {'name': 'bms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"BMS辅助电源不能为空"}', 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'nationalStandard': {'name': 'nationalStandard', 'translate': '国家标准', 'type': 'Selection', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"国家标准不能为空"}', 'selection': [[1, '2011'], [2, '2015'], [255, '其他']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,122 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:21,122 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 09:31:21,123 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,123 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,123 INFO [root] [key.py (default_get:95] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 09:31:21,134 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:21,135 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "id": 1267}
2022-05-19 09:31:21,135 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,135 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,150 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:21,151 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1267}, "name": "\u6c49EV"}}
2022-05-19 09:31:21,151 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,151 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,151 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car_model新记录，id为：1050
2022-05-19 09:31:21,201 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,202 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,202 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,202 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,203 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,231 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:21,231 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:21,231 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,231 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,232 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:21,243 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:21,244 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1050}
2022-05-19 09:31:21,245 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,245 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,261 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:21,261 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1050}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:21,261 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,262 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,262 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：850
2022-05-19 09:31:21,307 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,308 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,308 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,308 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,309 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,326 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:21,327 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 850}
2022-05-19 09:31:21,327 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,327 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,327 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：850的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1050}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 850}
2022-05-19 09:31:21,341 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:21,342 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 850}
2022-05-19 09:31:21,342 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,342 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,342 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_car中id为：850的记录已成功
2022-05-19 09:31:21,389 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,390 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,390 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,390 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,391 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,407 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:21,407 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:31:21,408 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,408 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,408 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:31:21,451 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,452 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,452 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,452 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,452 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,468 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:21,469 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 09:31:21,469 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,469 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,470 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 09:31:21,518 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,519 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,519 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,519 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,520 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,548 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:21,548 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 09:31:21,548 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,549 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,549 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 09:31:21,595 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,596 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,596 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,596 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,597 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,614 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:21,615 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 09:31:21,615 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,615 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,615 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 09:31:21,661 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,661 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,662 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,662 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,663 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,684 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:21,685 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 09:31:21,685 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,685 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,686 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 09:31:21,732 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,732 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,732 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,733 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,733 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,773 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:21,774 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 09:31:21,774 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,774 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,775 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 09:31:21,808 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,809 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,809 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,810 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,810 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,862 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:21,863 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 09:31:21,863 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,863 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,864 INFO [root] [key.py (read_group:110] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1050]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1050}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 09:31:21,875 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:21,875 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [850]}
2022-05-19 09:31:21,875 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,876 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,876 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car中id为：850的记录
2022-05-19 09:31:21,912 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,913 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,913 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,913 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,914 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,925 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:21,925 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:21,926 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,926 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,926 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:21,936 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:21,936 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1050}
2022-05-19 09:31:21,937 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,937 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,947 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:21,948 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1050}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:21,948 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,948 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,948 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：851
2022-05-19 09:31:21,980 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:21,980 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:21,980 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,981 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,981 INFO [root] [key.py (load_views:89] - {'fields': {'carModelBms': {'name': 'carModelBms', 'translate': 'BMS辅助电源', 'type': 'Selection', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'selection': [[0, '12V'], [1, '24V']], 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}}, 'fields_views': {'search': {'id': 90, 'name': 'customer_car Search', 'type': 'search', 'arch': '<search string="车辆">\n                <field name="number" string="车牌号"/>\n                <field name="vin" string="VIN"/>\n                <field name="customerId" string="客户"/>\n                <field name="carModelId" string="车型"/>\n                <field name="remark" string="自编号"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_carModelId" string="车型" context="{\'group_by\': \'carModelId\'}"/>\n                </group>\n            </search>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 89, 'name': 'customer_car Form', 'type': 'form', 'arch': '<form string="车辆">\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="pictureUrl" widget="photo" string="车辆照片"/>\n                        </group>\n                        <group>\n                            <field name="customerId"/>\n                            <field name="carModelId"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="number"/>\n                            <field name="vin" string="VIN"/>\n                        </group>\n                        <group>\n                            <!--                            <field name="carModelBms"/>-->\n                            <field name="remark"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'pictureUrl': {'name': 'pictureUrl', 'translate': '车辆图片', 'type': 'Binary', 'required': False, 'readonly': False, 'searchable': False, 'sortable': False, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 88, 'name': 'customer_car Tree', 'type': 'tree', 'arch': '<tree string="车辆">\n                <field name="number"/>\n                <field name="vin" string="VIN"/>\n                <field name="carModelId"/>\n                <field name="remark"/>\n                <field name="customerId"/>\n            </tree>', 'fields': {'number': {'name': 'number', 'translate': '车牌号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][a-zA-Z](([DF]((?![IO])[a-zA-Z0-9](?![IO]))[0-9]{4})|([0-9]{5}[DF]))|[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳])$","type":"Pattern","message":"车牌号不符合规范"}', 'views': {}}, 'carModelId': {'name': 'carModelId', 'translate': '车型', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_car_model'}, 'customerId': {'name': 'customerId', 'translate': '客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'remark': {'name': 'remark', 'translate': '自编号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"自编号不能为空"}', 'views': {}}, 'vin': {'name': 'vin', 'translate': '车架号(VIN)', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[A-HJ-NPR-Z\\\\d]{17}$","type":"Pattern","message":"车架号(VIN)不符合规范"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:21,993 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:21,993 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 09:31:21,994 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:21,994 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:21,994 INFO [root] [key.py (default_get:95] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 09:31:22,004 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 09:31:22,005 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "id": 1050}
2022-05-19 09:31:22,005 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,005 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,017 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:22,017 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1050}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 09:31:22,017 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,018 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,018 INFO [root] [key.py (create:51] - 新建：创建模型：customer_car新记录，id为：852
2022-05-19 09:31:22,031 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:22,031 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car", "ids": [851, 852]}
2022-05-19 09:31:22,031 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,032 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,032 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_car中id为：851, 852的记录
2022-05-19 09:31:22,044 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:22,045 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_model", "ids": [1050]}
2022-05-19 09:31:22,045 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,045 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,046 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_model中id为：1050的记录
2022-05-19 09:31:22,057 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:22,058 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_car_brand", "ids": [1267]}
2022-05-19 09:31:22,058 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,058 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,058 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_car_brand中id为：1267的记录
2022-05-19 09:31:22,071 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:22,072 INFO [root] [key.py (get:37] - 传的参数是：{'t': '8383530457238'}
2022-05-19 09:31:22,072 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:22,072 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,072 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:22,181 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 09:31:22,181 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '0410953080250'}
2022-05-19 09:31:22,181 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:22,182 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,196 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 09:31:22,197 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 09:31:22,197 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:22,197 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,207 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 09:31:22,207 INFO [root] [key.py (get:37] - 传的参数是：{'t': '1177480483268'}
2022-05-19 09:31:22,207 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 09:31:22,208 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,208 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 09:31:22,247 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,247 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,248 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,248 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,249 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,295 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,295 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,296 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,296 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,297 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,312 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:22,312 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:31:22,313 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,313 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,313 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:31:22,328 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:22,328 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:31:22,329 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,329 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,329 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：763
2022-05-19 09:31:22,378 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,378 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,379 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,379 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,379 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,406 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:22,407 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 763}
2022-05-19 09:31:22,407 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,407 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,407 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：763的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 763, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 09:31:22,427 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 09:31:22,428 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 763}
2022-05-19 09:31:22,428 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,428 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,429 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：763的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 763, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 09:31:22,444 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 09:31:22,444 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 763}
2022-05-19 09:31:22,445 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,445 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,445 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_card中id为：763的记录已成功
2022-05-19 09:31:22,495 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,496 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,496 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,496 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,497 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,523 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:22,524 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 09:31:22,524 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,525 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,525 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 09:31:22,579 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,580 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,580 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,580 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,581 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,599 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:22,600 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 09:31:22,600 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,600 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,601 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 09:31:22,650 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,650 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,651 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,651 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,651 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,667 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:22,668 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 09:31:22,668 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,668 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,668 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 09:31:22,712 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,712 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,713 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,713 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,713 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,731 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 09:31:22,732 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 09:31:22,732 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,732 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,733 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 09:31:22,785 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,785 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,785 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,785 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,786 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,848 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:22,849 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 09:31:22,849 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,850 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,850 INFO [root] [key.py (read_group:110] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 09:31:22,898 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,898 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,898 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,899 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,899 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,923 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 09:31:22,924 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 09:31:22,924 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,924 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,925 INFO [root] [key.py (read_group:110] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 09:31:22,939 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:22,939 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "ids": [763]}
2022-05-19 09:31:22,940 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,940 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,940 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_card中id为：763的记录
2022-05-19 09:31:22,974 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:22,975 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:22,975 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,975 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,976 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:22,987 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:22,987 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:31:22,987 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:22,988 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:22,988 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:31:23,000 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:23,001 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 09:31:23,001 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:23,001 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:23,001 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：764
2022-05-19 09:31:23,031 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 09:31:23,032 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 09:31:23,032 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:23,032 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:23,033 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 09:31:23,044 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 09:31:23,044 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 09:31:23,044 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:23,045 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:23,045 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 09:31:23,056 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 09:31:23,057 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 09:31:23,057 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:23,057 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:23,058 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：765
2022-05-19 09:31:23,068 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 09:31:23,068 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "ids": [764, 765]}
2022-05-19 09:31:23,069 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 09:31:23,069 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 09:31:23,069 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_card中id为：764, 765的记录
2022-05-19 10:37:03,868 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 10:37:03,869 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 10:37:03,869 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:03,869 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:03,869 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 10:37:04,101 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 10:37:04,101 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "W8DW"}
2022-05-19 10:37:04,102 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:04,102 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:04,102 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：3b4f1f0699434b08a8638519818c259a
2022-05-19 10:37:04,113 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 10:37:04,113 INFO [root] [key.py (get:37] - 传的参数是：{'t': '4624521505651'}
2022-05-19 10:37:04,113 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:04,114 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:04,114 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 10:37:29,215 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/validate/image，请求方法为：get
2022-05-19 10:37:29,216 INFO [root] [key.py (get:37] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 10:37:29,216 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,216 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,217 INFO [root] [key.py (get_image_code:132] - 获取验证码成功
2022-05-19 10:37:29,255 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 10:37:29,256 INFO [root] [key.py (post:20] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "QWM8"}
2022-05-19 10:37:29,256 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,256 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,257 INFO [root] [key.py (login:138] - 登录成功，此次登录Authorization为：05d8a553517a45deacbc57e2b0277a6e
2022-05-19 10:37:29,267 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 10:37:29,267 INFO [root] [key.py (get:37] - 传的参数是：{'t': '8406198161402'}
2022-05-19 10:37:29,267 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,268 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,268 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 10:37:29,289 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 10:37:29,290 INFO [root] [key.py (get:37] - 传的参数是：{'t': '3135027019897'}
2022-05-19 10:37:29,290 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,290 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,291 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 10:37:29,436 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/call，请求方法为：get
2022-05-19 10:37:29,437 INFO [root] [key.py (get:37] - 传的参数是：{'lang': 'zh_CN', 't': '7558346879500'}
2022-05-19 10:37:29,438 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,438 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,459 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/load，请求方法为：get
2022-05-19 10:37:29,459 INFO [root] [key.py (get:37] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 10:37:29,461 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,461 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,474 INFO [root] [key.py (get:36] - 正在测试接口: http://192.168.1.61/api/getUserInfo，请求方法为：get
2022-05-19 10:37:29,475 INFO [root] [key.py (get:37] - 传的参数是：{'t': '9338714947948'}
2022-05-19 10:37:29,475 INFO [root] [key.py (get:38] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:37:29,476 INFO [root] [key.py (get:39] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,476 INFO [root] [key.py (get_user_info:152] - 此次登录的用户是：admin
2022-05-19 10:37:29,527 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:37:29,528 INFO [root] [key.py (post:20] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:37:29,536 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,536 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,536 INFO [root] [key.py (load_views:89] - {'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'displayName': {'name': 'displayName', 'translate': '展示名称', 'type': 'Char', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'updateTime': {'name': 'updateTime', 'translate': '更新时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新时间不能为空"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'createBy': {'name': 'createBy', 'translate': '创建者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建者不能为空"}', 'views': {}}, 'createTime': {'name': 'createTime', 'translate': '创建时间', 'type': 'Datetime', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"创建时间不能为空"}', 'views': {}}, 'updateBy': {'name': 'updateBy', 'translate': '更新者', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"更新者不能为空"}', 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'id': {'name': 'id', 'translate': 'ID', 'type': 'Integer', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'fields_views': {'search': {'id': 93, 'name': 'customer_card Search', 'type': 'search', 'arch': '<search string="充电卡">\n                <field name="cardNo" string="充电卡号"/>\n                <field name="name" string="名称"/>\n                <field name="code" string="序号"/>\n                <field name="customerId" string="客户"/>\n                <group string="分组按">\n                    <field name="groupby_customerId" string="客户" context="{\'group_by\': \'customerId\'}"/>\n                    <field name="groupby_allowMoreCharge" string="允许多充" context="{\'group_by\': \'allowMoreCharge\'}"/>\n                </group>\n            </search>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'form': {'id': 92, 'name': 'customer_card Form', 'type': 'form', 'arch': '<form string="充电卡">\n                <header attrs="{\'invisible\':[[\'id\',\'=?\']]}">\n                    <button name="freezeButton" type="object" string="冻结" attrs="{\'invisible\':[[\'status\',\'!=\',0]]}" confirm="true" tips="您确定要冻结该充电卡吗？"/>\n                    <button name="unfreezeButton" type="object" string="解冻" attrs="{\'invisible\':[[\'status\',\'!=\',1]]}"/>\n                </header>\n                <sheet>\n                    <group>\n                        <group>\n                            <field name="cardNo" string="充电卡号"/>\n                            <field name="name" string="名称"/>\n                            <field name="code"/>\n                        </group>\n                        <group>\n                            <field name="customerId" string="客户"/>\n                            <field name="companyId" attrs="{\'invisible\':[[\'id\',\'=?\']]}"/>\n                        </group>\n                    </group>\n                    <group>\n                        <group>\n                            <field name="customerAllowMoreCharge" invisible="true"/>\n                            <label for="allowMoreCharge" attrs="{\'invisible\':[\'|\',[\'customerId\',\'=?\'],[\'customerAllowMoreCharge\',\'=\',false]]}">\n                                <field name="allowMoreCharge" invisible="true"/>\n                                <check-switch value="false" activeValue="true" name="allowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="开启多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',false]]}"/>\n                                <check-switch value="true" activeValue="true" name="unAllowMoreChargeButton" type="object" inactiveLabel="关闭" activeLabel="开启" string="关闭多充" attrs="{\'invisible\':[[\'allowMoreCharge\',\'!=\',true]]}"/>\n                            </label>\n                        </group>\n                        <group>\n                            <field name="status"/>\n                        </group>\n                    </group>\n                </sheet>\n            </form>', 'fields': {'companyId': {'name': 'companyId', 'translate': '公司', 'type': 'Many2one', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"公司不能为空"}', 'views': {}, 'relation': 'res_company'}, 'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'allowMoreCharge': {'name': 'allowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"允许多充不能为空"}', 'views': {}}, 'customerAllowMoreCharge': {'name': 'customerAllowMoreCharge', 'translate': '允许多充', 'type': 'Boolean', 'required': False, 'readonly': True, 'searchable': True, 'sortable': False, 'store': False, 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}, 'tree': {'id': 91, 'name': 'customer_card Tree', 'type': 'tree', 'arch': '<tree string="充电卡">\n                <field name="cardNo" string="充电卡"/>\n                <field name="name" string="名称"/>\n                <field name="customerId" string="客户"/>\n                <field name="code"/>\n                <field name="status"/>\n            </tree>', 'fields': {'code': {'name': 'code', 'translate': '序号', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}}, 'customerId': {'name': 'customerId', 'translate': '绑定客户', 'type': 'Many2one', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'views': {}, 'relation': 'customer_info'}, 'name': {'name': 'name', 'translate': '充电卡名称', 'type': 'Char', 'required': False, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^.{1,64}$","type":"Pattern","message":"名称必须为1-64位字符"}', 'views': {}}, 'cardNo': {'name': 'cardNo', 'translate': '充电卡号', 'type': 'Char', 'required': True, 'readonly': False, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"pattern":"^[0-9]{1,16}$","type":"Pattern","message":"充电卡号必须为1-16位数字"}', 'views': {}}, 'status': {'name': 'status', 'translate': '状态', 'type': 'Selection', 'required': True, 'readonly': True, 'searchable': True, 'sortable': True, 'store': True, 'validation': '{"type":"NotNull","message":"状态不能为空"}', 'selection': [[0, '正常'], [1, '冻结']], 'views': {}}}, 'toolbar': {'action': [], 'print': [], 'relate': []}}}}
2022-05-19 10:37:29,580 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:37:29,580 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:37:29,581 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,581 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,581 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:37:29,595 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:37:29,596 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:37:29,596 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,596 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,596 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：766
2022-05-19 10:37:29,607 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:37:29,608 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 766}
2022-05-19 10:37:29,608 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,608 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,608 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：766的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 766, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 10:37:29,620 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:37:29,620 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 766}
2022-05-19 10:37:29,620 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,620 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,621 INFO [root] [key.py (edit:63] - 编辑：编辑模型customer_card中id为：766的记录已成功
2022-05-19 10:37:29,634 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:37:29,635 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 10:37:29,635 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,636 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,636 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 10:37:29,648 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:37:29,649 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 10:37:29,649 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,649 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,649 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:37:29,662 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:37:29,662 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 10:37:29,663 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,663 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,663 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:37:29,678 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:37:29,679 INFO [root] [key.py (post:20] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 10:37:29,679 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,680 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,680 INFO [root] [key.py (search_read:101] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 10:37:29,739 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:37:29,739 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 10:37:29,740 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,740 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,742 INFO [root] [key.py (read_group:110] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 10:37:29,755 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:37:29,755 INFO [root] [key.py (post:20] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 10:37:29,756 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,756 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,756 INFO [root] [key.py (read_group:110] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 10:37:29,769 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:37:29,770 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "ids": [766]}
2022-05-19 10:37:29,770 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,770 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,771 INFO [root] [key.py (delete:70] - 删除：已删除模型customer_card中id为：766的记录
2022-05-19 10:37:29,779 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:37:29,780 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:37:29,780 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,781 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,781 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:37:29,801 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:37:29,802 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:37:29,802 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,827 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,828 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：767
2022-05-19 10:37:29,837 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:37:29,837 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:37:29,838 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,838 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,838 INFO [root] [key.py (default_get:95] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:37:29,853 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:37:29,854 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 10:37:29,854 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,854 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,854 INFO [root] [key.py (create:51] - 新建：创建模型：customer_card新记录，id为：768
2022-05-19 10:37:29,867 INFO [root] [key.py (post:19] - 正在测试接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:37:29,868 INFO [root] [key.py (post:20] - 传的参数是：{"model": "customer_card", "ids": [767, 768]}
2022-05-19 10:37:29,868 INFO [root] [key.py (post:21] - 接口返回的响应内容中的code是： 200
2022-05-19 10:37:29,868 INFO [root] [key.py (post:22] - -----------------------------------分割线-----------------------------------
2022-05-19 10:37:29,868 INFO [root] [key.py (delete:72] - 批量删除：已批量删除模型customer_card中id为：767, 768的记录
2022-05-19 10:41:04,984 INFO [root] [key.py (get:35] - 正在测试第1接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 10:41:04,984 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 10:41:04,985 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:04,985 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:04,985 INFO [root] [key.py (get_image_code:130] - 获取验证码成功
2022-05-19 10:41:05,026 INFO [root] [key.py (post:18] - 正在测试第2接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 10:41:05,026 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "5BYK"}
2022-05-19 10:41:05,026 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,027 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,027 INFO [root] [key.py (login:136] - 登录成功，此次登录Authorization为：ac18040692d6483e8c939223321bea67
2022-05-19 10:41:05,037 INFO [root] [key.py (get:35] - 正在测试第3接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:41:05,037 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0448770111248'}
2022-05-19 10:41:05,038 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:05,038 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,038 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:41:05,054 INFO [root] [key.py (get:35] - 正在测试第4接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:41:05,055 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2092782232535'}
2022-05-19 10:41:05,055 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:05,055 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,055 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:41:05,192 INFO [root] [key.py (get:35] - 正在测试第5接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 10:41:05,193 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2996841053496'}
2022-05-19 10:41:05,193 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:05,193 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,210 INFO [root] [key.py (get:35] - 正在测试第6接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 10:41:05,210 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 10:41:05,211 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:05,211 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,222 INFO [root] [key.py (get:35] - 正在测试第7接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:41:05,223 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0241081148518'}
2022-05-19 10:41:05,223 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:41:05,224 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,224 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:41:05,276 INFO [root] [key.py (post:18] - 正在测试第8接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:41:05,277 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:41:05,278 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,278 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,286 INFO [root] [key.py (post:18] - 正在测试第9接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:41:05,287 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:41:05,288 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,288 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,289 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:41:05,306 INFO [root] [key.py (post:18] - 正在测试第10接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:41:05,307 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:41:05,308 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,308 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,309 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：769
2022-05-19 10:41:05,320 INFO [root] [key.py (post:18] - 正在测试第11接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:41:05,321 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 769}
2022-05-19 10:41:05,322 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,322 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,323 INFO [root] [key.py (read:56] - 查看：查看模型customer_card中id为：769的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 769, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 10:41:05,343 INFO [root] [key.py (post:18] - 正在测试第12接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:41:05,343 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 769}
2022-05-19 10:41:05,344 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,344 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,344 INFO [root] [key.py (edit:62] - 编辑：编辑模型customer_card中id为：769的记录已成功
2022-05-19 10:41:05,357 INFO [root] [key.py (post:18] - 正在测试第13接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:41:05,357 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 10:41:05,357 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,358 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,358 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 10:41:05,373 INFO [root] [key.py (post:18] - 正在测试第14接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:41:05,374 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 10:41:05,374 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,374 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,374 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:41:05,388 INFO [root] [key.py (post:18] - 正在测试第15接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:41:05,388 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 10:41:05,388 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,388 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,389 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:41:05,402 INFO [root] [key.py (post:18] - 正在测试第16接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:41:05,403 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 10:41:05,403 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,403 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,403 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 10:41:05,462 INFO [root] [key.py (post:18] - 正在测试第17接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:41:05,462 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 10:41:05,463 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,464 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,465 INFO [root] [key.py (read_group:108] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 10:41:05,482 INFO [root] [key.py (post:18] - 正在测试第18接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:41:05,483 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 10:41:05,484 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,484 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,485 INFO [root] [key.py (read_group:108] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 10:41:05,499 INFO [root] [key.py (post:18] - 正在测试第19接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:41:05,499 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [769]}
2022-05-19 10:41:05,500 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,500 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,501 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_card中id为：769的记录
2022-05-19 10:41:05,509 INFO [root] [key.py (post:18] - 正在测试第20接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:41:05,509 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:41:05,509 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,510 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,510 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:41:05,535 INFO [root] [key.py (post:18] - 正在测试第21接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:41:05,536 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:41:05,536 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,537 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,537 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：770
2022-05-19 10:41:05,545 INFO [root] [key.py (post:18] - 正在测试第22接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:41:05,545 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:41:05,545 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,546 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,546 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:41:05,562 INFO [root] [key.py (post:18] - 正在测试第23接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:41:05,563 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 10:41:05,563 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,563 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,563 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：771
2022-05-19 10:41:05,576 INFO [root] [key.py (post:18] - 正在测试第24接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:41:05,577 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [770, 771]}
2022-05-19 10:41:05,577 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:41:05,577 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:41:05,577 INFO [root] [key.py (delete:71] - 批量删除：已批量删除模型customer_card中id为：770, 771的记录
2022-05-19 10:42:32,737 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 10:42:32,738 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 10:42:32,738 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:32,738 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,738 INFO [root] [key.py (get_image_code:130] - 获取验证码成功
2022-05-19 10:42:32,773 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 10:42:32,773 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "T9MN"}
2022-05-19 10:42:32,773 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,774 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,774 INFO [root] [key.py (login:136] - 登录成功，此次登录Authorization为：afd88e120ac34a14a89582dc016a0422
2022-05-19 10:42:32,784 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:42:32,784 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2224415079012'}
2022-05-19 10:42:32,785 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:32,785 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,785 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:42:32,799 INFO [root] [key.py (post:18] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:32,799 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 10:42:32,800 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,800 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,814 INFO [root] [key.py (post:18] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:32,814 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 10:42:32,814 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,814 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,815 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1268
2022-05-19 10:42:32,862 INFO [root] [key.py (post:18] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:32,862 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:32,862 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,862 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,873 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:42:32,874 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1268}
2022-05-19 10:42:32,874 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,874 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,874 INFO [root] [key.py (read:56] - 查看：查看模型customer_car_brand中id为：1268的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1268, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 10:42:32,883 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:32,883 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1268, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 10:42:32,883 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,883 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,895 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:42:32,896 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1268}
2022-05-19 10:42:32,896 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,896 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,896 INFO [root] [key.py (edit:62] - 编辑：编辑模型customer_car_brand中id为：1268的记录已成功
2022-05-19 10:42:32,947 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:32,947 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:32,948 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,950 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,967 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:32,967 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 10:42:32,968 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,969 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,970 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 10:42:32,985 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:32,986 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1268]}
2022-05-19 10:42:32,987 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:32,987 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:32,988 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car_brand中id为：1268的记录
2022-05-19 10:42:33,001 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:33,002 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1268, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 10:42:33,003 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,003 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,021 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,022 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 10:42:33,022 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,023 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,023 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1269
2022-05-19 10:42:33,032 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:33,032 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1269, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 10:42:33,032 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,032 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,047 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,048 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 10:42:33,048 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,048 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,049 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1270
2022-05-19 10:42:33,063 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:33,063 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1269, 1270]}
2022-05-19 10:42:33,063 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,063 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,064 INFO [root] [key.py (delete:71] - 批量删除：已批量删除模型customer_car_brand中id为：1269, 1270的记录
2022-05-19 10:42:33,079 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:33,079 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 10:42:33,080 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,080 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,093 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,094 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 10:42:33,094 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,094 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,094 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1271
2022-05-19 10:42:33,143 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,143 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,144 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,144 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,154 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:33,155 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 10:42:33,155 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,156 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,156 INFO [root] [key.py (default_get:93] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 10:42:33,169 INFO [root] [key.py (post:18] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:33,169 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1271}
2022-05-19 10:42:33,170 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,170 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,185 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,186 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1271}, "name": "\u6c49EV"}}
2022-05-19 10:42:33,187 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,187 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,187 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1051
2022-05-19 10:42:33,235 INFO [root] [key.py (post:18] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,236 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,236 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,237 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,250 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:42:33,251 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1051}
2022-05-19 10:42:33,252 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,252 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,253 INFO [root] [key.py (read:56] - 查看：查看模型customer_car_model中id为：1051的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1271}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1051, 'nationalStandard': 255}
2022-05-19 10:42:33,268 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:42:33,269 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1051}
2022-05-19 10:42:33,270 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,270 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,271 INFO [root] [key.py (edit:62] - 编辑：编辑模型customer_car_model中id为：1051的记录已成功
2022-05-19 10:42:33,320 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,321 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,323 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,325 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,339 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:33,339 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 10:42:33,340 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,340 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,340 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 10:42:33,380 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,381 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,382 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,382 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,398 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:33,398 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 10:42:33,399 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,400 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,401 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 10:42:33,447 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,449 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,450 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,451 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,487 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:42:33,489 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 10:42:33,491 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,492 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,493 INFO [root] [key.py (read_group:108] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1271]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1271}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 10:42:33,511 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:33,512 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1051]}
2022-05-19 10:42:33,514 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,515 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,516 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car_model中id为：1051的记录
2022-05-19 10:42:33,568 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,569 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,571 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,572 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,587 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:33,588 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 10:42:33,589 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,590 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,591 INFO [root] [key.py (default_get:93] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 10:42:33,608 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:33,609 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1271}
2022-05-19 10:42:33,609 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,610 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,628 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,628 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1271}, "name": "\u6c49EV"}}
2022-05-19 10:42:33,629 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,630 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,631 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1052
2022-05-19 10:42:33,667 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,667 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,668 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,669 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,679 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:33,680 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 10:42:33,681 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,681 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,682 INFO [root] [key.py (default_get:93] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 10:42:33,691 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:33,692 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1271}
2022-05-19 10:42:33,693 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,693 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,706 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,707 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1271}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 10:42:33,707 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,708 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,708 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1053
2022-05-19 10:42:33,720 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:33,721 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1052, 1053]}
2022-05-19 10:42:33,721 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,722 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,723 INFO [root] [key.py (delete:71] - 批量删除：已批量删除模型customer_car_model中id为：1052, 1053的记录
2022-05-19 10:42:33,738 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:33,739 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1271]}
2022-05-19 10:42:33,740 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,740 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,741 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car_brand中id为：1271的记录
2022-05-19 10:42:33,758 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 10:42:33,759 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1271, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 10:42:33,759 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,759 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,771 INFO [root] [key.py (post:18] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,771 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 10:42:33,772 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,772 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,773 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1272
2022-05-19 10:42:33,820 INFO [root] [key.py (post:18] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,821 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,822 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,822 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,833 INFO [root] [key.py (post:18] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:33,833 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 10:42:33,834 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,834 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,835 INFO [root] [key.py (default_get:93] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 10:42:33,852 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:33,852 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1272}
2022-05-19 10:42:33,853 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,854 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,871 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,872 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1272}, "name": "\u6c49EV"}}
2022-05-19 10:42:33,872 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,873 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,873 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1054
2022-05-19 10:42:33,919 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,919 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,920 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,920 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,929 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:33,930 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 10:42:33,930 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,931 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,931 INFO [root] [key.py (default_get:93] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 10:42:33,939 INFO [root] [key.py (post:18] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:33,940 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1054}
2022-05-19 10:42:33,940 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,941 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,952 INFO [root] [key.py (post:18] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:33,953 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1054}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 10:42:33,953 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,954 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:33,954 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：853
2022-05-19 10:42:33,986 INFO [root] [key.py (post:18] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:33,987 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:33,988 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:33,988 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,000 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:42:34,001 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 853}
2022-05-19 10:42:34,002 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,002 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,003 INFO [root] [key.py (read:56] - 查看：查看模型customer_car中id为：853的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1054}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 853}
2022-05-19 10:42:34,018 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:42:34,019 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 853}
2022-05-19 10:42:34,020 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,020 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,021 INFO [root] [key.py (edit:62] - 编辑：编辑模型customer_car中id为：853的记录已成功
2022-05-19 10:42:34,071 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,073 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,075 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,075 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,097 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:34,098 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 10:42:34,100 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,101 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,102 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 10:42:34,158 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,158 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,158 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,159 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,174 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:34,174 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 10:42:34,174 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,174 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,175 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 10:42:34,233 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,233 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,234 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,234 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,249 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:34,249 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 10:42:34,250 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,250 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,250 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 10:42:34,299 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,301 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,303 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,304 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,324 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:34,324 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 10:42:34,324 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,324 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,325 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 10:42:34,376 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,377 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,377 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,378 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,394 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:34,395 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 10:42:34,395 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,396 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,397 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 10:42:34,428 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,429 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,430 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,431 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,468 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:42:34,469 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 10:42:34,471 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,472 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,473 INFO [root] [key.py (read_group:108] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 10:42:34,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,525 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,526 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,527 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,592 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:42:34,594 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 10:42:34,595 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,596 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,598 INFO [root] [key.py (read_group:108] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1054]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1054}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 10:42:34,618 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:34,619 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [853]}
2022-05-19 10:42:34,621 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,622 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,623 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car中id为：853的记录
2022-05-19 10:42:34,662 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,663 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,663 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,664 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,673 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:34,674 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 10:42:34,675 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,676 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,676 INFO [root] [key.py (default_get:93] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 10:42:34,689 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:34,689 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1054}
2022-05-19 10:42:34,690 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,690 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,707 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:34,708 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1054}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 10:42:34,709 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,709 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,710 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：854
2022-05-19 10:42:34,762 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:34,763 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:34,763 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,763 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,774 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:34,774 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 10:42:34,775 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,775 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,775 INFO [root] [key.py (default_get:93] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 10:42:34,785 INFO [root] [key.py (post:18] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 10:42:34,785 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1054}
2022-05-19 10:42:34,785 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,786 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,798 INFO [root] [key.py (post:18] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:34,799 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1054}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 10:42:34,799 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,799 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,800 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：855
2022-05-19 10:42:34,816 INFO [root] [key.py (post:18] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:34,817 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [854, 855]}
2022-05-19 10:42:34,817 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,817 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,818 INFO [root] [key.py (delete:71] - 批量删除：已批量删除模型customer_car中id为：854, 855的记录
2022-05-19 10:42:34,831 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:34,831 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1054]}
2022-05-19 10:42:34,832 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,832 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,833 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car_model中id为：1054的记录
2022-05-19 10:42:34,847 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:34,848 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1272]}
2022-05-19 10:42:34,848 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:34,849 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,849 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_car_brand中id为：1272的记录
2022-05-19 10:42:34,870 INFO [root] [key.py (get:35] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:42:34,871 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0728152569854'}
2022-05-19 10:42:34,872 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:34,872 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:34,873 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:42:35,024 INFO [root] [key.py (get:35] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 10:42:35,025 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4381738117383'}
2022-05-19 10:42:35,026 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:35,027 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,048 INFO [root] [key.py (get:35] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 10:42:35,049 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 10:42:35,049 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:35,049 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,060 INFO [root] [key.py (get:35] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 10:42:35,060 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2832531778897'}
2022-05-19 10:42:35,061 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 10:42:35,061 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,061 INFO [root] [key.py (get_user_info:150] - 此次登录的用户是：admin
2022-05-19 10:42:35,120 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 10:42:35,121 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 10:42:35,123 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,123 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,135 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:35,135 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:42:35,135 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,135 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,136 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:42:35,148 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:35,148 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:42:35,149 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,149 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,149 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：772
2022-05-19 10:42:35,161 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 10:42:35,161 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 772}
2022-05-19 10:42:35,161 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,162 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,162 INFO [root] [key.py (read:56] - 查看：查看模型customer_card中id为：772的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 772, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 10:42:35,176 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 10:42:35,176 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 772}
2022-05-19 10:42:35,176 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,176 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,177 INFO [root] [key.py (edit:62] - 编辑：编辑模型customer_card中id为：772的记录已成功
2022-05-19 10:42:35,196 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:35,196 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 10:42:35,197 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,197 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,197 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 10:42:35,211 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:35,212 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 10:42:35,212 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,213 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,213 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:42:35,226 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:35,227 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 10:42:35,227 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,227 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,228 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 10:42:35,242 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 10:42:35,242 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 10:42:35,242 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,243 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,243 INFO [root] [key.py (search_read:99] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 10:42:35,300 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:42:35,301 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 10:42:35,301 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,301 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,301 INFO [root] [key.py (read_group:108] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 10:42:35,314 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 10:42:35,314 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 10:42:35,314 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,315 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,315 INFO [root] [key.py (read_group:108] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 10:42:35,326 INFO [root] [key.py (post:18] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:35,327 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [772]}
2022-05-19 10:42:35,327 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,327 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,327 INFO [root] [key.py (delete:69] - 删除：已删除模型customer_card中id为：772的记录
2022-05-19 10:42:35,335 INFO [root] [key.py (post:18] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:35,335 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:42:35,335 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,336 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,336 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:42:35,355 INFO [root] [key.py (post:18] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:35,355 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 10:42:35,355 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,356 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,356 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：773
2022-05-19 10:42:35,368 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 10:42:35,368 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 10:42:35,368 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,369 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,369 INFO [root] [key.py (default_get:93] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 10:42:35,398 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 10:42:35,399 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 10:42:35,399 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,399 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,400 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：774
2022-05-19 10:42:35,414 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 10:42:35,415 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [773, 774]}
2022-05-19 10:42:35,415 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 10:42:35,415 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 10:42:35,415 INFO [root] [key.py (delete:71] - 批量删除：已批量删除模型customer_card中id为：773, 774的记录
2022-05-19 11:02:59,740 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 11:02:59,741 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 11:02:59,741 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:02:59,741 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,741 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 11:02:59,741 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,777 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 11:02:59,778 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "5WB3"}
2022-05-19 11:02:59,778 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,778 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,778 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：3df4c7f66a08436fb40c6415668b4eec
2022-05-19 11:02:59,778 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,788 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:02:59,789 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1926260829940'}
2022-05-19 11:02:59,789 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:02:59,789 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,789 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:02:59,790 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,803 INFO [root] [key.py (post:18] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:02:59,803 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:02:59,804 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,804 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,817 INFO [root] [key.py (post:18] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:02:59,817 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:02:59,818 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,818 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,818 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1273
2022-05-19 11:02:59,818 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,863 INFO [root] [key.py (post:18] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:02:59,863 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:02:59,863 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,863 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,864 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 11:02:59,864 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,873 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:02:59,874 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1273}
2022-05-19 11:02:59,874 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,874 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,874 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1273的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1273, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 11:02:59,875 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,882 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:02:59,882 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1273, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:02:59,882 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,882 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,892 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:02:59,892 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1273}
2022-05-19 11:02:59,893 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,893 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,893 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1273的记录已成功
2022-05-19 11:02:59,893 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,935 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:02:59,936 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:02:59,936 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,936 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,937 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 11:02:59,937 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,950 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:02:59,951 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 11:02:59,951 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,952 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,952 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 11:02:59,953 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,964 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:02:59,965 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1273]}
2022-05-19 11:02:59,965 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,965 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,966 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1273的记录
2022-05-19 11:02:59,966 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,975 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:02:59,975 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1273, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:02:59,975 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,976 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,988 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:02:59,988 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:02:59,989 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,989 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,990 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1274
2022-05-19 11:02:59,990 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:02:59,998 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:02:59,998 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1274, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:02:59,999 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:02:59,999 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,010 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,010 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 11:03:00,011 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,011 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,012 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1275
2022-05-19 11:03:00,012 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,023 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:00,024 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1274, 1275]}
2022-05-19 11:03:00,024 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,024 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,025 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1274, 1275的记录
2022-05-19 11:03:00,025 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,039 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:03:00,039 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:03:00,040 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,040 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,053 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,053 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:03:00,054 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,054 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,054 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1276
2022-05-19 11:03:00,055 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,100 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,101 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,101 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,101 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,102 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,102 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,110 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:00,111 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:03:00,111 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,111 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,112 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:03:00,112 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,122 INFO [root] [key.py (post:18] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:00,123 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1276}
2022-05-19 11:03:00,123 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,123 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,144 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,145 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1276}, "name": "\u6c49EV"}}
2022-05-19 11:03:00,145 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,146 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,146 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1055
2022-05-19 11:03:00,146 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,188 INFO [root] [key.py (post:18] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,188 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,189 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,189 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,190 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,191 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,200 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:03:00,201 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1055}
2022-05-19 11:03:00,201 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,202 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,202 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1055的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1276}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1055, 'nationalStandard': 255}
2022-05-19 11:03:00,202 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,212 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:03:00,212 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1055}
2022-05-19 11:03:00,213 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,213 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,213 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1055的记录已成功
2022-05-19 11:03:00,214 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,254 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,255 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,255 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,256 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,256 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,256 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,270 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:00,271 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 11:03:00,271 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,271 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,272 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 11:03:00,272 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,309 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,310 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,310 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,310 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,311 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,311 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,326 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:00,326 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 11:03:00,326 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,326 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,327 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 11:03:00,328 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,375 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,375 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,375 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,375 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,376 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,376 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,402 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:03:00,402 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 11:03:00,402 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,403 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,403 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1276]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1276}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 11:03:00,425 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,438 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:00,439 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1055]}
2022-05-19 11:03:00,439 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,440 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,440 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1055的记录
2022-05-19 11:03:00,441 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,484 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,484 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,484 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,485 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,485 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,485 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,494 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:00,494 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:03:00,494 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,494 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,494 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:03:00,495 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,504 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:00,505 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1276}
2022-05-19 11:03:00,505 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,505 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,519 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,519 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1276}, "name": "\u6c49EV"}}
2022-05-19 11:03:00,520 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,520 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,520 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1056
2022-05-19 11:03:00,520 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,565 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,566 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,566 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,567 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,567 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,567 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,580 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:00,581 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:03:00,581 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,582 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,582 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:03:00,582 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,591 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:00,592 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1276}
2022-05-19 11:03:00,592 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,592 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,603 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,603 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1276}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 11:03:00,604 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,604 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,604 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1057
2022-05-19 11:03:00,605 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,615 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:00,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1056, 1057]}
2022-05-19 11:03:00,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,616 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,617 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1056, 1057的记录
2022-05-19 11:03:00,617 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,629 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:00,629 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1276]}
2022-05-19 11:03:00,629 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,629 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,630 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1276的记录
2022-05-19 11:03:00,630 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,642 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:03:00,643 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1276, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:03:00,643 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,643 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,657 INFO [root] [key.py (post:18] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,657 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:03:00,658 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,658 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,658 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1277
2022-05-19 11:03:00,658 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,702 INFO [root] [key.py (post:18] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,703 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,703 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,704 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,704 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:03:00,705 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,713 INFO [root] [key.py (post:18] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:00,714 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:03:00,714 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,715 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,715 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:03:00,715 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,725 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:00,726 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1277}
2022-05-19 11:03:00,726 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,726 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,739 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,740 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1277}, "name": "\u6c49EV"}}
2022-05-19 11:03:00,741 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,741 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,741 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1058
2022-05-19 11:03:00,742 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,785 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,786 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,786 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,787 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,788 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:00,788 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,796 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:00,796 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:03:00,797 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,797 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,798 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:03:00,798 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,808 INFO [root] [key.py (post:18] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:00,808 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1058}
2022-05-19 11:03:00,808 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,808 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,825 INFO [root] [key.py (post:18] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:00,826 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1058}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:03:00,826 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,826 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,826 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：856
2022-05-19 11:03:00,826 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,875 INFO [root] [key.py (post:18] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,876 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,877 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,877 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,878 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:00,879 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,890 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:03:00,891 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 856}
2022-05-19 11:03:00,892 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,893 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,893 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：856的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1058}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 856}
2022-05-19 11:03:00,894 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,905 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:03:00,906 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 856}
2022-05-19 11:03:00,906 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,907 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,908 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：856的记录已成功
2022-05-19 11:03:00,924 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,963 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:00,963 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:00,964 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,964 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,964 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:00,965 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,976 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:00,977 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:03:00,977 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:00,977 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:00,977 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:03:00,978 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,014 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,015 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,016 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,016 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,016 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,017 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,031 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,031 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:03:01,032 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,032 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,032 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:03:01,032 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,068 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,068 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,068 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,069 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,069 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,069 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,082 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,083 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 11:03:01,083 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,083 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,083 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 11:03:01,083 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,122 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,122 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,123 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,123 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,123 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,123 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,136 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,136 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 11:03:01,136 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,137 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,137 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 11:03:01,137 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,175 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,175 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,176 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,176 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,176 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,177 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,189 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,190 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 11:03:01,190 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,190 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,190 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 11:03:01,190 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,234 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,234 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,235 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,235 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,236 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,236 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,277 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:03:01,278 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 11:03:01,279 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,280 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,280 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 11:03:01,282 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,318 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,319 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,319 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,319 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,319 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,320 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,368 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:03:01,369 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 11:03:01,369 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,369 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,370 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1058]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1058}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 11:03:01,372 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,382 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:01,382 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [856]}
2022-05-19 11:03:01,382 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,383 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,383 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：856的记录
2022-05-19 11:03:01,383 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,418 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,419 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,421 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,422 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,424 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,425 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,438 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:01,439 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:03:01,439 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,440 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,441 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:03:01,441 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,450 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:01,451 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1058}
2022-05-19 11:03:01,451 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,451 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,463 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:01,464 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1058}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:03:01,464 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,464 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,465 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：857
2022-05-19 11:03:01,465 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,511 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,512 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,512 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,512 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,513 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:03:01,513 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,520 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:01,521 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:03:01,521 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,522 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,522 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:03:01,522 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,531 INFO [root] [key.py (post:18] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:03:01,532 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1058}
2022-05-19 11:03:01,532 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,532 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,542 INFO [root] [key.py (post:18] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:01,543 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1058}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:03:01,543 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,544 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,544 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：858
2022-05-19 11:03:01,544 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,554 INFO [root] [key.py (post:18] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:01,555 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [857, 858]}
2022-05-19 11:03:01,555 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,555 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,556 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：857, 858的记录
2022-05-19 11:03:01,556 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,590 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:01,591 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1058]}
2022-05-19 11:03:01,592 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,593 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,594 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1058的记录
2022-05-19 11:03:01,595 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,611 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:01,611 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1277]}
2022-05-19 11:03:01,612 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,612 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,613 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1277的记录
2022-05-19 11:03:01,614 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,633 INFO [root] [key.py (get:35] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:03:01,634 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3205839480416'}
2022-05-19 11:03:01,635 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:03:01,635 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,635 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:03:01,636 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,778 INFO [root] [key.py (get:35] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 11:03:01,779 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2592782333449'}
2022-05-19 11:03:01,780 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:03:01,781 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,782 INFO [root] [key.py (call:157] - 请求平台的模型结构
2022-05-19 11:03:01,783 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,805 INFO [root] [key.py (get:35] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 11:03:01,807 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 11:03:01,808 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:03:01,810 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,811 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 11:03:01,812 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,827 INFO [root] [key.py (get:35] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:03:01,828 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8371965098635'}
2022-05-19 11:03:01,828 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:03:01,828 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,828 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:03:01,829 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,877 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:03:01,877 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:03:01,877 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,878 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,878 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 11:03:01,878 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,886 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:01,886 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:03:01,887 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,887 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,887 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:03:01,888 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,901 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:01,901 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:03:01,902 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,902 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,902 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：775
2022-05-19 11:03:01,902 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,913 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:03:01,913 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 775}
2022-05-19 11:03:01,913 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,914 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,914 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：775的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 775, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 11:03:01,914 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,926 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:03:01,927 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 775}
2022-05-19 11:03:01,927 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,927 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,928 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：775的记录已成功
2022-05-19 11:03:01,928 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,941 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,942 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 11:03:01,942 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,942 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,942 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 11:03:01,942 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,955 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,956 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 11:03:01,956 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,956 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,956 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:03:01,956 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,970 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,970 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 11:03:01,971 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,971 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,972 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:03:01,972 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,984 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:03:01,985 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 11:03:01,985 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:01,985 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:01,986 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 11:03:01,986 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,049 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:03:02,050 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 11:03:02,052 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,053 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,055 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 11:03:02,060 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,077 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:03:02,078 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 11:03:02,079 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,079 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,080 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 11:03:02,081 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,098 INFO [root] [key.py (post:18] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:02,098 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [775]}
2022-05-19 11:03:02,099 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,100 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,100 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：775的记录
2022-05-19 11:03:02,101 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,112 INFO [root] [key.py (post:18] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:02,112 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:03:02,113 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,113 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,114 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:03:02,115 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,131 INFO [root] [key.py (post:18] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:02,131 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:03:02,132 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,132 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,133 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：776
2022-05-19 11:03:02,133 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,143 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:03:02,143 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:03:02,143 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,144 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,144 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:03:02,144 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,162 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:03:02,163 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 11:03:02,163 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,163 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,164 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：777
2022-05-19 11:03:02,164 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,178 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:03:02,178 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [776, 777]}
2022-05-19 11:03:02,179 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:03:02,179 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:03:02,179 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：776, 777的记录
2022-05-19 11:03:02,179 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,537 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 11:08:49,537 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 11:08:49,538 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:08:49,538 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,538 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 11:08:49,538 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,574 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 11:08:49,574 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PWK6"}
2022-05-19 11:08:49,574 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,575 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,575 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：25affd233b3c42a880397a959e6f53b1
2022-05-19 11:08:49,575 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,582 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:08:49,583 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3628449529770'}
2022-05-19 11:08:49,583 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:08:49,583 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,583 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:08:49,584 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,597 INFO [root] [key.py (post:18] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:49,597 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:08:49,597 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,597 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,607 INFO [root] [key.py (post:18] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:49,607 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:08:49,607 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,607 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,608 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1278
2022-05-19 11:08:49,608 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,642 INFO [root] [key.py (post:18] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:49,642 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:49,643 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,643 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,643 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 11:08:49,643 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,660 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:08:49,660 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1278}
2022-05-19 11:08:49,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,661 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1278的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1278, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 11:08:49,661 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,668 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:49,669 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1278, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:08:49,669 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,669 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,682 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:08:49,682 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1278}
2022-05-19 11:08:49,682 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,682 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,688 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1278的记录已成功
2022-05-19 11:08:49,688 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,740 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:49,741 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:49,741 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,742 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,742 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 11:08:49,742 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,757 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:49,757 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 11:08:49,757 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,757 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,758 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 11:08:49,758 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,771 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:49,772 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1278]}
2022-05-19 11:08:49,772 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,773 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,773 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1278的记录
2022-05-19 11:08:49,775 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,783 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:49,784 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1278, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:08:49,784 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,784 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,796 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:49,797 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:08:49,797 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,798 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,798 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1279
2022-05-19 11:08:49,798 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,808 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:49,810 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1279, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:08:49,811 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,811 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,828 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:49,829 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 11:08:49,831 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,832 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,833 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1280
2022-05-19 11:08:49,834 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,847 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:49,848 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1279, 1280]}
2022-05-19 11:08:49,849 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,849 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,850 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1279, 1280的记录
2022-05-19 11:08:49,850 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,869 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:49,869 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:08:49,870 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,870 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,881 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:49,881 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:08:49,882 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,882 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,882 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1281
2022-05-19 11:08:49,882 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,925 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:49,925 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:49,925 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,925 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,926 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:49,926 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,934 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:49,934 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:08:49,934 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,935 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,935 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:08:49,935 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,945 INFO [root] [key.py (post:18] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:49,945 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1281}
2022-05-19 11:08:49,945 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,945 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,966 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:49,967 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1281}, "name": "\u6c49EV"}}
2022-05-19 11:08:49,968 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:49,969 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:49,970 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1059
2022-05-19 11:08:49,971 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,021 INFO [root] [key.py (post:18] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,022 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,023 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,023 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,024 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,025 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,038 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:08:50,038 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1059}
2022-05-19 11:08:50,039 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,039 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,041 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1059的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1281}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1059, 'nationalStandard': 255}
2022-05-19 11:08:50,041 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,056 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:08:50,057 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1059}
2022-05-19 11:08:50,057 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,057 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,058 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1059的记录已成功
2022-05-19 11:08:50,058 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,106 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,106 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,106 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,106 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,107 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,107 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,120 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:50,121 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 11:08:50,122 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,122 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,123 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 11:08:50,123 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,167 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,168 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,168 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,168 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,169 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,169 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,188 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:50,188 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 11:08:50,189 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,190 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,191 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 11:08:50,191 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,240 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,241 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,243 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,244 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,245 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,246 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,274 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:08:50,274 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 11:08:50,275 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,275 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,275 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1281]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1281}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 11:08:50,276 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,288 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:50,289 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1059]}
2022-05-19 11:08:50,289 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,289 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,290 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1059的记录
2022-05-19 11:08:50,291 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,337 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,337 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,338 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,338 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,339 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,339 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,348 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:50,348 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:08:50,349 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,349 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,349 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:08:50,349 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,358 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:50,359 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1281}
2022-05-19 11:08:50,359 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,359 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,371 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:50,371 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1281}, "name": "\u6c49EV"}}
2022-05-19 11:08:50,372 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,372 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,373 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1060
2022-05-19 11:08:50,373 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,418 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,418 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,419 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,420 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,421 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,421 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,431 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:50,432 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:08:50,433 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,433 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,434 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:08:50,434 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,448 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:50,449 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1281}
2022-05-19 11:08:50,449 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,450 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,471 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:50,472 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1281}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 11:08:50,473 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,473 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,474 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1061
2022-05-19 11:08:50,474 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,488 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:50,489 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1060, 1061]}
2022-05-19 11:08:50,489 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,490 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,491 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1060, 1061的记录
2022-05-19 11:08:50,491 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,504 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:50,505 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1281]}
2022-05-19 11:08:50,505 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,506 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,506 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1281的记录
2022-05-19 11:08:50,506 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,532 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:08:50,533 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1281, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:08:50,533 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,533 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,546 INFO [root] [key.py (post:18] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:50,547 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:08:50,547 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,547 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,547 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1282
2022-05-19 11:08:50,548 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,594 INFO [root] [key.py (post:18] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,594 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,595 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,595 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,596 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:08:50,596 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,604 INFO [root] [key.py (post:18] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:50,605 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:08:50,605 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,605 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,606 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:08:50,606 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,615 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:50,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1282}
2022-05-19 11:08:50,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,616 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,628 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:50,629 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1282}, "name": "\u6c49EV"}}
2022-05-19 11:08:50,629 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,629 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,629 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1062
2022-05-19 11:08:50,630 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,673 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,673 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,674 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,674 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,675 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:50,675 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,683 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:50,684 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:08:50,684 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,684 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,684 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:08:50,684 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,704 INFO [root] [key.py (post:18] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:50,704 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1062}
2022-05-19 11:08:50,704 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,705 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,723 INFO [root] [key.py (post:18] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:50,724 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1062}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:08:50,724 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,724 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,725 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：859
2022-05-19 11:08:50,725 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,774 INFO [root] [key.py (post:18] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,775 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,775 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,776 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,777 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:50,777 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,791 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:08:50,792 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 859}
2022-05-19 11:08:50,792 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,793 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,793 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：859的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1062}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 859}
2022-05-19 11:08:50,794 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,810 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:08:50,811 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 859}
2022-05-19 11:08:50,811 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,811 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,813 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：859的记录已成功
2022-05-19 11:08:50,813 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,866 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,867 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,867 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,867 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,868 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:50,868 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,883 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:50,883 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:08:50,884 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,884 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,884 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:08:50,884 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,932 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,932 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,933 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,933 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,933 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:50,933 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,947 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:50,947 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:08:50,948 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,948 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,948 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:08:50,948 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,994 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:50,995 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:50,995 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:50,995 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:50,996 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:50,996 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,010 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:51,012 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 11:08:51,014 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,015 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,016 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 11:08:51,017 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,072 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,074 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,076 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,077 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,078 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,079 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,100 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:51,101 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 11:08:51,103 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,104 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,105 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 11:08:51,106 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,156 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,157 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,158 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,158 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,159 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,159 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,176 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:51,176 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 11:08:51,177 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,177 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,177 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 11:08:51,178 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,225 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,226 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,227 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,227 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,228 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,282 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:08:51,284 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 11:08:51,285 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,286 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,288 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 11:08:51,292 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,343 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,344 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,346 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,347 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,348 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,349 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,418 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:08:51,420 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 11:08:51,421 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,422 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,425 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1062]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1062}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 11:08:51,429 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,446 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:51,447 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [859]}
2022-05-19 11:08:51,448 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,449 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,450 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：859的记录
2022-05-19 11:08:51,451 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,501 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,502 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,502 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,503 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,504 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,504 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,512 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:51,513 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:08:51,513 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,514 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,514 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:08:51,514 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,522 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:51,523 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1062}
2022-05-19 11:08:51,523 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,524 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,535 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:51,536 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1062}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:08:51,536 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,537 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,537 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：860
2022-05-19 11:08:51,538 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,580 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,580 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,581 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,581 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,581 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:08:51,582 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,588 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:51,588 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:08:51,589 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,590 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,590 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:08:51,590 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,599 INFO [root] [key.py (post:18] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:08:51,599 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1062}
2022-05-19 11:08:51,599 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,600 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,611 INFO [root] [key.py (post:18] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:51,612 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1062}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:08:51,612 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,612 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,613 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：861
2022-05-19 11:08:51,613 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,624 INFO [root] [key.py (post:18] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:51,624 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [860, 861]}
2022-05-19 11:08:51,624 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,624 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,625 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：860, 861的记录
2022-05-19 11:08:51,625 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,635 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:51,636 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1062]}
2022-05-19 11:08:51,636 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,636 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,636 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1062的记录
2022-05-19 11:08:51,637 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,647 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:51,648 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1282]}
2022-05-19 11:08:51,648 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,648 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,648 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1282的记录
2022-05-19 11:08:51,649 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,662 INFO [root] [key.py (get:35] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:08:51,663 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1914067313229'}
2022-05-19 11:08:51,664 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:08:51,665 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,666 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:08:51,667 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,820 INFO [root] [key.py (get:35] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 11:08:51,820 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1277512234952'}
2022-05-19 11:08:51,820 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:08:51,821 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,821 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 11:08:51,821 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,836 INFO [root] [key.py (get:35] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 11:08:51,836 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 11:08:51,836 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:08:51,837 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,837 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 11:08:51,837 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,884 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:08:51,885 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:08:51,887 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,887 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,888 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 11:08:51,888 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,900 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:51,901 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:08:51,902 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,903 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,904 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:08:51,904 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,921 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:51,922 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:08:51,923 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,923 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,924 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：778
2022-05-19 11:08:51,925 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,939 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:08:51,940 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 778}
2022-05-19 11:08:51,941 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,941 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,942 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：778的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 778, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 11:08:51,943 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,959 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:08:51,959 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 778}
2022-05-19 11:08:51,960 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,961 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,961 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：778的记录已成功
2022-05-19 11:08:51,962 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,978 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:51,979 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 11:08:51,980 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,980 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,981 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 11:08:51,981 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,995 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:51,996 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 11:08:51,997 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:51,998 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:51,998 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:08:51,999 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,013 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:52,013 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 11:08:52,014 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,015 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,015 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:08:52,016 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,034 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:08:52,035 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 11:08:52,036 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,036 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,037 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 11:08:52,037 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,096 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:08:52,096 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 11:08:52,096 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,097 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,097 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 11:08:52,098 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,109 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:08:52,110 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 11:08:52,110 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,110 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,110 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 11:08:52,111 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,123 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:52,124 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [778]}
2022-05-19 11:08:52,124 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,124 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,124 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：778的记录
2022-05-19 11:08:52,124 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,133 INFO [root] [key.py (post:18] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:52,133 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:08:52,133 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,133 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,133 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:08:52,133 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,147 INFO [root] [key.py (post:18] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:52,147 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:08:52,147 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,147 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,147 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：779
2022-05-19 11:08:52,148 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,156 INFO [root] [key.py (post:18] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:08:52,157 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:08:52,157 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,157 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,157 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:08:52,158 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,171 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:08:52,171 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 11:08:52,171 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,171 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,171 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：780
2022-05-19 11:08:52,172 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,187 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:08:52,188 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [779, 780]}
2022-05-19 11:08:52,188 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:08:52,188 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:08:52,189 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：779, 780的记录
2022-05-19 11:08:52,189 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,236 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 11:17:23,236 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 11:17:23,237 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:23,237 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,237 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 11:17:23,237 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,277 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 11:17:23,277 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "4BL7"}
2022-05-19 11:17:23,277 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,277 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,278 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：598d900e87b84a97ab07aff58c1670d6
2022-05-19 11:17:23,278 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,289 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:17:23,289 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6204914703221'}
2022-05-19 11:17:23,289 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:23,290 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,290 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:17:23,290 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,304 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:17:23,304 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0708460497918'}
2022-05-19 11:17:23,304 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:23,305 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,305 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:17:23,305 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,431 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 11:17:23,432 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1815038285648'}
2022-05-19 11:17:23,432 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:23,432 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,432 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 11:17:23,433 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,450 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 11:17:23,451 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 11:17:23,451 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:23,451 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,451 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 11:17:23,452 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,503 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:23,504 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:23,504 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,505 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,505 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 11:17:23,505 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,515 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:23,515 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:17:23,515 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,516 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,529 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:23,530 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:17:23,530 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,530 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,531 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1283
2022-05-19 11:17:23,531 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,542 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:17:23,543 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1283}
2022-05-19 11:17:23,544 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,544 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,544 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1283的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1283, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 11:17:23,545 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,553 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:23,553 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1283, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:17:23,554 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,554 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,566 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:17:23,566 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1283}
2022-05-19 11:17:23,566 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,566 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,566 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1283的记录已成功
2022-05-19 11:17:23,567 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,580 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:23,581 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 11:17:23,583 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,584 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,585 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 11:17:23,587 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,607 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:23,608 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1283]}
2022-05-19 11:17:23,609 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,609 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,610 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1283的记录
2022-05-19 11:17:23,611 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,622 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:23,623 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1283, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:17:23,624 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,624 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,636 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:23,637 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:17:23,638 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,638 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,639 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1284
2022-05-19 11:17:23,639 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,648 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:23,649 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1284, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 11:17:23,649 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,650 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,663 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:23,663 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 11:17:23,664 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,665 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,665 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1285
2022-05-19 11:17:23,666 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,678 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:23,679 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1284, 1285]}
2022-05-19 11:17:23,679 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,680 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,680 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1284, 1285的记录
2022-05-19 11:17:23,681 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,698 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:23,698 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:17:23,699 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,699 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,712 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:23,713 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:17:23,713 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,713 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,714 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1286
2022-05-19 11:17:23,714 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,760 INFO [root] [key.py (post:18] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:23,762 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:23,764 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,765 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,767 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:23,768 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,781 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:23,782 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:17:23,782 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,782 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,782 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:17:23,783 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,792 INFO [root] [key.py (post:18] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:23,793 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1286}
2022-05-19 11:17:23,793 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,793 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,804 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:23,805 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1286}, "name": "\u6c49EV"}}
2022-05-19 11:17:23,805 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,805 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,805 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1063
2022-05-19 11:17:23,806 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,846 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:23,846 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:23,847 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,847 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,847 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:23,848 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,858 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:17:23,858 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1063}
2022-05-19 11:17:23,859 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,859 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,859 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1063的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1286}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1063, 'nationalStandard': 255}
2022-05-19 11:17:23,860 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,872 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:17:23,873 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1063}
2022-05-19 11:17:23,874 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,875 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,876 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1063的记录已成功
2022-05-19 11:17:23,877 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,921 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:23,922 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:23,923 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,923 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,924 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:23,925 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,940 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:23,941 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 11:17:23,942 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,942 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,943 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 11:17:23,944 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,991 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:23,991 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:23,992 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:23,993 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:23,994 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:23,994 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,012 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,013 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 11:17:24,014 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,014 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,016 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 11:17:24,016 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,062 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,063 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,064 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,065 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,066 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:24,067 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,095 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:17:24,096 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 11:17:24,097 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,097 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,098 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1286]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1286}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 11:17:24,099 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,115 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:24,115 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1063]}
2022-05-19 11:17:24,116 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,117 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,117 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1063的记录
2022-05-19 11:17:24,118 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,168 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,169 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,171 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,172 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,174 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:24,175 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,190 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:24,191 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:17:24,193 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,194 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,195 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:17:24,196 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,211 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:24,212 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1286}
2022-05-19 11:17:24,212 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,213 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,226 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:24,227 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1286}, "name": "\u6c49EV"}}
2022-05-19 11:17:24,228 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,229 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,230 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1064
2022-05-19 11:17:24,231 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,264 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,264 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,265 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,266 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,267 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:24,267 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,278 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:24,278 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:17:24,279 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,279 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,280 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:17:24,281 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,289 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:24,290 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1286}
2022-05-19 11:17:24,291 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,292 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,309 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:24,310 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1286}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 11:17:24,310 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,311 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,312 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1065
2022-05-19 11:17:24,312 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,323 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:24,324 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1064, 1065]}
2022-05-19 11:17:24,324 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,325 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,325 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1064, 1065的记录
2022-05-19 11:17:24,326 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,336 INFO [root] [key.py (post:18] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:24,336 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1286]}
2022-05-19 11:17:24,337 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,337 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,338 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1286的记录
2022-05-19 11:17:24,338 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,348 INFO [root] [key.py (post:18] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 11:17:24,349 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1286, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 11:17:24,349 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,349 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,361 INFO [root] [key.py (post:18] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:24,362 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 11:17:24,362 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,362 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,363 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1287
2022-05-19 11:17:24,363 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,411 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,413 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,414 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,415 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,417 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 11:17:24,418 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,434 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:24,435 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 11:17:24,437 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,438 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,439 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 11:17:24,441 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,457 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:24,458 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1287}
2022-05-19 11:17:24,458 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,459 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,477 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:24,478 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1287}, "name": "\u6c49EV"}}
2022-05-19 11:17:24,478 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,479 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,480 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1066
2022-05-19 11:17:24,480 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,527 INFO [root] [key.py (post:18] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,528 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,529 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,530 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,531 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,531 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,541 INFO [root] [key.py (post:18] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:24,541 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:17:24,542 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,543 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,543 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:17:24,544 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,554 INFO [root] [key.py (post:18] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:24,555 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1066}
2022-05-19 11:17:24,556 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,556 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,571 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:24,572 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1066}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:17:24,572 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,573 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,573 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：862
2022-05-19 11:17:24,574 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,619 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,620 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,620 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,620 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,621 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,621 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,631 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:17:24,632 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 862}
2022-05-19 11:17:24,632 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,632 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,632 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：862的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1066}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 862}
2022-05-19 11:17:24,632 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,643 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:17:24,644 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 862}
2022-05-19 11:17:24,644 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,644 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,644 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：862的记录已成功
2022-05-19 11:17:24,644 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,688 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,689 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,690 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,690 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,691 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,692 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,706 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,707 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:17:24,707 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,707 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,708 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:17:24,708 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,755 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,756 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,756 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,756 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,756 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,757 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,769 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,770 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 11:17:24,770 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,771 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,771 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 11:17:24,771 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,815 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,815 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,816 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,817 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,818 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,818 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,835 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,836 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 11:17:24,837 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,838 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,839 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 11:17:24,839 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,891 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,892 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,893 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,894 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,895 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,896 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,914 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,915 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 11:17:24,916 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,917 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,918 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 11:17:24,919 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,973 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:24,974 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:24,976 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:24,977 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,978 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:24,979 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:24,997 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:24,998 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 11:17:24,999 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,000 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,001 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 11:17:25,002 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,052 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:25,054 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:25,055 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,057 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,058 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:25,059 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,117 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:17:25,119 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 11:17:25,121 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,122 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,124 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 8, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 16}
2022-05-19 11:17:25,128 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,180 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:25,182 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:25,183 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,184 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,186 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:25,187 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,257 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:17:25,258 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 11:17:25,260 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,261 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,263 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1066]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1066}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 11:17:25,267 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,289 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:25,290 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [862]}
2022-05-19 11:17:25,290 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,291 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,291 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：862的记录
2022-05-19 11:17:25,292 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,339 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:25,340 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:25,340 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,341 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,341 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:25,342 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,350 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:25,350 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:17:25,351 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,351 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,352 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:17:25,352 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,362 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:25,362 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1066}
2022-05-19 11:17:25,363 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,363 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,375 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:25,376 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1066}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:17:25,376 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,376 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,377 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：863
2022-05-19 11:17:25,378 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,421 INFO [root] [key.py (post:18] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:25,423 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:25,424 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,424 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,425 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 11:17:25,426 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,436 INFO [root] [key.py (post:18] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:25,437 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 11:17:25,437 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,438 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,439 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 11:17:25,439 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,451 INFO [root] [key.py (post:18] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 11:17:25,452 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1066}
2022-05-19 11:17:25,453 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,453 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,469 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:25,470 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1066}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 11:17:25,471 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,471 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,472 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：864
2022-05-19 11:17:25,473 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,487 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:25,488 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [863, 864]}
2022-05-19 11:17:25,489 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,489 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,490 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：863, 864的记录
2022-05-19 11:17:25,490 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,507 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:25,508 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1066]}
2022-05-19 11:17:25,509 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,509 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,510 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1066的记录
2022-05-19 11:17:25,510 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:25,524 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1287]}
2022-05-19 11:17:25,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,525 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,526 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1287的记录
2022-05-19 11:17:25,526 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,545 INFO [root] [key.py (get:35] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:17:25,546 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7818436605901'}
2022-05-19 11:17:25,546 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:25,547 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,547 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 11:17:25,548 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,700 INFO [root] [key.py (get:35] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 11:17:25,702 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5943780127942'}
2022-05-19 11:17:25,703 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:25,704 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,705 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 11:17:25,707 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,728 INFO [root] [key.py (get:35] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 11:17:25,729 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 11:17:25,730 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:17:25,731 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,732 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 11:17:25,733 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,789 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 11:17:25,790 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 11:17:25,792 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,793 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,795 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 11:17:25,796 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,812 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:25,812 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:17:25,813 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,814 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,814 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:17:25,814 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,828 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:25,829 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:17:25,829 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,830 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,830 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：781
2022-05-19 11:17:25,830 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,844 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 11:17:25,845 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 781}
2022-05-19 11:17:25,845 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,845 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,845 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：781的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 781, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 11:17:25,846 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,857 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 11:17:25,857 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 781}
2022-05-19 11:17:25,858 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,858 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,858 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：781的记录已成功
2022-05-19 11:17:25,858 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,870 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:25,871 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 11:17:25,872 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,872 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,872 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 11:17:25,872 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,884 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:25,885 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 11:17:25,885 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,885 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,885 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:17:25,886 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,897 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:25,898 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 11:17:25,898 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,898 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,898 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 11:17:25,899 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,913 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 11:17:25,913 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 11:17:25,913 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,914 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,914 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 11:17:25,914 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,971 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:17:25,972 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 11:17:25,973 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,974 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,975 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 11:17:25,978 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,993 INFO [root] [key.py (post:18] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 11:17:25,994 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 11:17:25,995 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:25,996 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:25,997 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 11:17:25,998 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,014 INFO [root] [key.py (post:18] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:26,015 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [781]}
2022-05-19 11:17:26,016 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,016 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,017 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：781的记录
2022-05-19 11:17:26,018 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,027 INFO [root] [key.py (post:18] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:26,028 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:17:26,028 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,029 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,029 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:17:26,029 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,039 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:26,040 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 11:17:26,040 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,041 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,041 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：782
2022-05-19 11:17:26,041 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,051 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 11:17:26,052 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 11:17:26,052 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,052 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,053 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 11:17:26,053 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,066 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 11:17:26,067 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 11:17:26,067 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,067 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,068 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：783
2022-05-19 11:17:26,068 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,079 INFO [root] [key.py (post:18] - 正在测试本次脚本的第104个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 11:17:26,080 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [782, 783]}
2022-05-19 11:17:26,080 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 11:17:26,080 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 11:17:26,080 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：782, 783的记录
2022-05-19 11:17:26,081 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 11:41:07,251 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 11:41:07,251 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7623051682967'}
2022-05-19 11:41:07,251 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 11:41:07,252 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:12:07,425 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:12:07,426 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1757393550999'}
2022-05-19 17:12:07,426 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:12:07,426 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:19:42,807 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:19:42,808 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3833465167219'}
2022-05-19 17:19:42,808 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:19:42,808 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:21:49,878 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:21:49,879 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0177009342597'}
2022-05-19 17:21:49,879 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:21:49,879 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:22:48,250 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:22:48,250 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9258409434327'}
2022-05-19 17:22:48,250 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:22:48,250 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:26:25,913 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:26:25,914 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7358475392413'}
2022-05-19 17:26:25,914 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:26:25,914 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:31:26,395 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:31:26,396 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2884451991506'}
2022-05-19 17:31:26,396 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:31:26,396 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:31:26,402 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:31:26,402 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5687102175017'}
2022-05-19 17:31:26,402 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:31:26,403 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:31:26,403 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:31:26,403 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:31:26,409 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:31:26,409 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:31:26,409 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:31:26,409 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:31:26,409 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:31:26,410 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:33:37,460 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:33:37,461 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3716026153097'}
2022-05-19 17:33:37,461 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:33:37,461 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:33:37,468 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:33:37,468 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '9706309046776'}
2022-05-19 17:33:37,468 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:33:37,469 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:33:37,469 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:33:37,469 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:33:37,479 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:33:37,479 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:33:37,479 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:33:37,479 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:33:37,479 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:33:37,480 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:36:55,780 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:36:55,780 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7547800796182'}
2022-05-19 17:36:55,780 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:36:55,780 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:36:55,786 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:36:55,787 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '5758440911906'}
2022-05-19 17:36:55,787 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:36:55,787 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:36:55,787 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:36:55,787 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:36:55,792 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:36:55,793 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:36:55,793 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:36:55,793 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:36:55,794 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:36:55,794 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:44:46,877 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:44:46,878 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1152544347695'}
2022-05-19 17:44:46,878 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 500
2022-05-19 17:44:46,878 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:44:46,878 ERROR [root] [key.py (get:44] - 出现异常，code:{}不等于200
2022-05-19 17:46:48,606 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:46:48,606 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3964253170764'}
2022-05-19 17:46:48,607 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:46:48,607 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:46:48,615 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:46:48,616 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '4642043410144'}
2022-05-19 17:46:48,616 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:46:48,616 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:46:48,616 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:46:48,616 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:46:48,624 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:46:48,624 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:46:48,625 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:46:48,625 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:46:48,625 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:46:48,626 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:49:31,655 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:49:31,656 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:49:31,656 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:49:31,657 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:49:31,657 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:49:31,657 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:49:31,926 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:49:31,926 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:49:31,926 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:49:31,927 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:49:31,927 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:49:31,927 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:50:36,245 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:50:36,246 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:50:36,246 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:50:36,246 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:50:36,246 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:50:36,246 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:50:36,283 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:50:36,283 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:50:36,284 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:50:36,284 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:50:36,284 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:50:36,284 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:52:38,643 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:52:38,644 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:52:38,644 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:52:38,644 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:52:38,644 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:52:38,644 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:52:38,696 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 17:52:38,696 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 17:52:38,697 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:52:38,697 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:52:38,697 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 17:52:38,697 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:11,906 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:53:11,906 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6685053050957'}
2022-05-19 17:53:11,907 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:11,907 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:11,917 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:53:11,917 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '7185305433761'}
2022-05-19 17:53:11,917 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:11,917 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:11,918 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:53:11,918 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:11,930 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:53:11,930 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:53:11,931 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:11,931 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:11,931 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:53:11,931 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:40,875 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:53:40,875 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2840051524608'}
2022-05-19 17:53:40,876 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:40,876 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:40,883 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:53:40,883 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '3381437081080'}
2022-05-19 17:53:40,884 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:40,884 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:40,884 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:53:40,884 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:40,893 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:53:40,893 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:53:40,893 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:53:40,893 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:53:40,894 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:53:40,894 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:54:35,116 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:54:35,117 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5311539171361'}
2022-05-19 17:54:35,117 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:54:35,117 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:54:35,126 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:54:35,127 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '1285591063598'}
2022-05-19 17:54:35,127 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:54:35,127 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:54:35,127 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:54:35,128 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:54:35,140 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:54:35,140 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:54:35,141 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:54:35,141 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:54:35,141 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:54:35,141 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 17:59:09,425 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 17:59:09,426 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8596798598041'}
2022-05-19 17:59:09,426 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:59:09,426 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:59:09,436 INFO [root] [key.py (get:35] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 17:59:09,437 INFO [root] [key.py (get:36] - 传的参数是：{'lang': '', 't': '5580797180095'}
2022-05-19 17:59:09,437 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:59:09,437 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:59:09,437 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 17:59:09,437 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 17:59:09,446 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 17:59:09,447 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': ''}
2022-05-19 17:59:09,447 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 17:59:09,447 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 17:59:09,447 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 17:59:09,447 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,494 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:11:56,495 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:11:56,495 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:11:56,495 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,495 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:11:56,495 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,551 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:11:56,552 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2RWL"}
2022-05-19 18:11:56,552 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:11:56,552 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,552 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：5275b025ba8b48358e3c8e3dcb591f65
2022-05-19 18:11:56,553 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,566 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:11:56,566 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8761626716427'}
2022-05-19 18:11:56,567 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:11:56,567 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:11:56,567 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:11:56,567 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,280 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:13:17,280 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:13:17,280 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:13:17,281 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,281 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:13:17,281 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,325 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:13:17,326 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "FND6"}
2022-05-19 18:13:17,326 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:17,326 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,327 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：59f4ae8a4c09480bbdf7dbbffe4d116b
2022-05-19 18:13:17,327 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,347 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:13:17,347 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8715679692518'}
2022-05-19 18:13:17,347 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:13:17,347 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,348 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:13:17,348 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,579 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:13:17,580 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6903158797320'}
2022-05-19 18:13:17,580 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:13:17,580 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,581 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:13:17,581 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,779 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:13:17,780 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5430128952047'}
2022-05-19 18:13:17,780 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:13:17,781 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,781 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:13:17,782 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,811 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:13:17,811 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:13:17,812 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:13:17,812 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,813 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:13:17,813 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,900 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:13:17,901 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:13:17,902 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:17,902 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,902 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:13:17,902 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,957 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:13:17,959 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:13:17,961 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:17,961 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:17,962 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:13:17,962 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,316 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:13:18,317 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:13:18,317 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,317 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,318 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：784
2022-05-19 18:13:18,318 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,336 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:13:18,337 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 784}
2022-05-19 18:13:18,337 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,337 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,338 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：784的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 784, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:13:18,338 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,374 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:13:18,375 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 784}
2022-05-19 18:13:18,375 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,376 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,376 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：784的记录已成功
2022-05-19 18:13:18,376 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,393 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:13:18,393 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:13:18,394 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,394 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,394 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:13:18,394 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,412 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:13:18,412 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:13:18,412 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,412 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,413 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:13:18,413 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,428 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:13:18,428 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:13:18,429 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,429 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,429 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:13:18,429 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,442 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:13:18,443 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:13:18,443 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,443 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,444 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:13:18,444 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,532 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:13:18,533 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:13:18,533 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,533 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,538 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:13:18,540 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,565 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:13:18,565 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:13:18,565 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,565 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,566 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:13:18,566 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,606 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:13:18,607 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [784]}
2022-05-19 18:13:18,608 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,609 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,609 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：784的记录
2022-05-19 18:13:18,609 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,624 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:13:18,626 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:13:18,627 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,628 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,628 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:13:18,628 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,649 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:13:18,649 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:13:18,649 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,650 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,650 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：785
2022-05-19 18:13:18,650 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,662 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:13:18,662 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:13:18,663 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,663 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,663 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:13:18,663 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,681 INFO [root] [key.py (post:18] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:13:18,681 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:13:18,682 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,682 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,682 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：786
2022-05-19 18:13:18,682 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,703 INFO [root] [key.py (post:18] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:13:18,705 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [785, 786]}
2022-05-19 18:13:18,705 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:13:18,705 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:13:18,705 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：785, 786的记录
2022-05-19 18:13:18,705 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,703 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:15:43,704 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:15:43,704 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:15:43,704 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,704 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:15:43,704 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,748 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:15:43,749 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "BEKB"}
2022-05-19 18:15:43,749 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:15:43,749 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,749 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：06c5ec42b3fe49609bd7db06e58fd32d
2022-05-19 18:15:43,750 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,768 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:15:43,768 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0691084036349'}
2022-05-19 18:15:43,768 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:15:43,768 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:15:43,769 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:15:43,769 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,511 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:19:11,512 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:19:11,512 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:11,512 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,512 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:19:11,512 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,563 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:19:11,563 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "7FAS"}
2022-05-19 18:19:11,563 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:11,563 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,564 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：8a6192c2f5f34939880f89e36e0451cc
2022-05-19 18:19:11,564 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,579 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:11,580 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1951530363286'}
2022-05-19 18:19:11,580 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:11,580 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,580 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:11,580 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,600 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:11,600 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3179925041512'}
2022-05-19 18:19:11,601 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:11,601 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,601 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:11,602 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,787 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:19:11,789 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '9618308371732'}
2022-05-19 18:19:11,790 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:11,792 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,793 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:19:11,794 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,833 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:19:11,834 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:19:11,835 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:11,836 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,837 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:19:11,837 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,910 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:19:11,911 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:19:11,912 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:11,912 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:11,913 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:19:11,913 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,190 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:12,192 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:19:12,193 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,194 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,259 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:12,260 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:19:12,260 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,260 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,261 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1288
2022-05-19 18:19:12,261 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,305 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:19:12,305 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1288}
2022-05-19 18:19:12,306 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,306 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,306 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1288的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1288, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:19:12,307 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,331 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:12,332 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1288, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:19:12,333 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,333 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,356 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:19:12,357 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1288}
2022-05-19 18:19:12,358 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,358 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,359 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1288的记录已成功
2022-05-19 18:19:12,359 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,380 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:12,381 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:19:12,381 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,382 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,382 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:19:12,383 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,402 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:12,403 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1288]}
2022-05-19 18:19:12,403 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,403 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,404 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1288的记录
2022-05-19 18:19:12,404 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,415 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:12,415 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1288, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:19:12,416 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,416 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,433 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:12,434 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:19:12,434 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,435 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,435 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1289
2022-05-19 18:19:12,436 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,446 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:12,447 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1289, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:19:12,447 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,447 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,466 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:12,466 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:19:12,466 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,467 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,467 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1290
2022-05-19 18:19:12,467 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,480 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:12,480 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1289, 1290]}
2022-05-19 18:19:12,481 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,481 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,481 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1289, 1290的记录
2022-05-19 18:19:12,481 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,497 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:12,497 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:19:12,498 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,498 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,521 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:12,522 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:19:12,522 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,522 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,523 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1291
2022-05-19 18:19:12,523 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,533 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:12,533 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0731163635795'}
2022-05-19 18:19:12,534 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:12,534 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,534 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:12,534 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,657 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:19:12,659 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '9057029603455'}
2022-05-19 18:19:12,660 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:12,661 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,662 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:19:12,663 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,684 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:19:12,686 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:19:12,687 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:12,688 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,689 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:19:12,690 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,737 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:19:12,738 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:19:12,739 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,739 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,740 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:19:12,741 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,761 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:12,762 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:19:12,762 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,763 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,763 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:19:12,764 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,790 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:12,791 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1291}
2022-05-19 18:19:12,792 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,793 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,836 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:12,837 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1291}, "name": "\u6c49EV"}}
2022-05-19 18:19:12,837 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,838 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,838 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1067
2022-05-19 18:19:12,839 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,870 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:19:12,871 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1067}
2022-05-19 18:19:12,872 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,872 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,873 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1067的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1291}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1067, 'nationalStandard': 255}
2022-05-19 18:19:12,873 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,896 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:19:12,897 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1067}
2022-05-19 18:19:12,897 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,898 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,898 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1067的记录已成功
2022-05-19 18:19:12,899 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,925 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:12,926 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:19:12,927 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,927 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,927 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:19:12,928 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,952 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:12,953 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:19:12,954 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,954 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,955 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:19:12,956 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,994 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:19:12,995 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:19:12,996 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:12,997 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:12,997 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1291]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1291}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:19:12,998 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,017 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:13,018 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1067]}
2022-05-19 18:19:13,018 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,019 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,020 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1067的记录
2022-05-19 18:19:13,020 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,038 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:13,039 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:19:13,039 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,040 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,040 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:19:13,041 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,068 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:13,068 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1291}
2022-05-19 18:19:13,069 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,069 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,095 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:13,095 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1291}, "name": "\u6c49EV"}}
2022-05-19 18:19:13,096 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,096 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,096 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1068
2022-05-19 18:19:13,096 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,109 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:13,110 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:19:13,110 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,110 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,110 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:19:13,111 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,125 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:13,125 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1291}
2022-05-19 18:19:13,125 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,125 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,152 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:13,152 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1291}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:19:13,152 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,152 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,153 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1069
2022-05-19 18:19:13,153 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,171 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:13,171 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1068, 1069]}
2022-05-19 18:19:13,171 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,172 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,172 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1068, 1069的记录
2022-05-19 18:19:13,172 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,189 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:13,190 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1291]}
2022-05-19 18:19:13,190 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,190 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,191 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1291的记录
2022-05-19 18:19:13,192 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,206 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:19:13,207 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1291, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:19:13,207 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,207 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,233 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:13,233 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:19:13,234 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,234 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,234 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1292
2022-05-19 18:19:13,234 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,248 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:13,249 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5195947111329'}
2022-05-19 18:19:13,249 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,249 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,250 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:13,250 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,423 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:19:13,425 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '6804290328200'}
2022-05-19 18:19:13,426 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,427 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,428 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:19:13,429 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,455 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:19:13,455 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:19:13,455 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,456 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,456 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:19:13,456 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,512 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:19:13,513 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:19:13,513 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,513 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,513 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:19:13,514 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:13,524 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:19:13,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,525 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,525 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:19:13,525 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,536 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:13,537 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1292}
2022-05-19 18:19:13,537 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,537 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,560 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:13,561 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1292}, "name": "\u6c49EV"}}
2022-05-19 18:19:13,561 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,561 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,562 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1070
2022-05-19 18:19:13,562 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,575 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:13,575 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8185634168613'}
2022-05-19 18:19:13,576 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,576 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,576 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:13,576 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,711 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:19:13,712 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1609885207854'}
2022-05-19 18:19:13,713 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,714 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,715 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:19:13,716 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,739 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:19:13,740 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:19:13,740 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:13,740 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,741 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:19:13,741 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,788 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:19:13,790 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:19:13,794 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,795 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,797 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:19:13,798 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,850 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:13,851 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:19:13,853 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,854 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,855 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:19:13,857 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,877 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:13,878 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1070}
2022-05-19 18:19:13,879 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,879 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,910 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:13,911 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1070}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:19:13,911 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,912 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,912 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：865
2022-05-19 18:19:13,913 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,940 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:19:13,941 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 865}
2022-05-19 18:19:13,943 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,944 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,945 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：865的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1070}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 865}
2022-05-19 18:19:13,945 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,987 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:19:13,988 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 865}
2022-05-19 18:19:13,988 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:13,988 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:13,988 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：865的记录已成功
2022-05-19 18:19:13,988 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,008 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,009 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:19:14,009 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,010 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,010 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:19:14,010 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,034 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,035 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:19:14,035 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,035 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,035 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:19:14,035 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,050 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,051 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:19:14,051 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,051 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,052 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:19:14,052 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,066 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,066 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:19:14,066 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,067 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,067 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:19:14,067 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,081 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,081 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:19:14,081 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,081 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,082 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:19:14,082 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,160 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:19:14,161 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:19:14,161 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,162 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,162 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:19:14,163 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,258 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:19:14,259 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:19:14,260 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,260 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,261 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1070]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1070}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:19:14,263 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,283 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:14,284 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [865]}
2022-05-19 18:19:14,285 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,285 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,286 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：865的记录
2022-05-19 18:19:14,286 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,296 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:14,297 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:19:14,297 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,298 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,298 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:19:14,298 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,315 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:14,316 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1070}
2022-05-19 18:19:14,316 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,317 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,345 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:14,347 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1070}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:19:14,347 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,348 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,348 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：866
2022-05-19 18:19:14,349 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,361 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:14,362 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:19:14,362 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,363 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,363 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:19:14,363 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,388 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:19:14,389 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1070}
2022-05-19 18:19:14,389 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,389 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,426 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:14,427 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1070}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:19:14,427 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,427 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,427 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：867
2022-05-19 18:19:14,427 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,449 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:14,449 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [866, 867]}
2022-05-19 18:19:14,449 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,449 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,449 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：866, 867的记录
2022-05-19 18:19:14,450 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,469 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:14,470 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1070]}
2022-05-19 18:19:14,470 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,470 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,470 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1070的记录
2022-05-19 18:19:14,470 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,495 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:14,496 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1292]}
2022-05-19 18:19:14,496 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,496 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,497 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1292的记录
2022-05-19 18:19:14,497 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,532 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:19:14,533 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3443137736014'}
2022-05-19 18:19:14,533 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:14,534 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,534 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:19:14,534 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,715 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:19:14,717 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1287034605568'}
2022-05-19 18:19:14,718 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:14,719 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,720 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:19:14,721 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,750 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:19:14,751 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:19:14,752 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:19:14,753 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,754 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:19:14,755 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,821 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:19:14,821 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:19:14,822 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,823 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,824 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:19:14,824 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,874 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:14,875 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:19:14,876 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,877 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,878 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:19:14,879 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,906 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:14,907 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:19:14,907 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,907 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,908 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：787
2022-05-19 18:19:14,908 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,919 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:19:14,919 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 787}
2022-05-19 18:19:14,919 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,920 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,920 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：787的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 787, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:19:14,920 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,938 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:19:14,939 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 787}
2022-05-19 18:19:14,939 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,939 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,940 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：787的记录已成功
2022-05-19 18:19:14,940 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,957 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,958 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:19:14,958 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,958 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,958 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:19:14,958 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,976 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,976 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:19:14,976 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,976 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,977 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:19:14,977 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:14,999 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:14,999 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:19:14,999 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:14,999 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,000 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:19:15,000 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,018 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:19:15,018 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:19:15,018 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,019 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,019 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:19:15,019 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,098 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:19:15,099 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:19:15,101 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,102 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,104 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:19:15,109 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,129 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:19:15,130 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:19:15,130 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,131 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,132 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:19:15,133 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,150 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:15,151 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [787]}
2022-05-19 18:19:15,151 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,151 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,152 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：787的记录
2022-05-19 18:19:15,152 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,161 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:15,162 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:19:15,162 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,163 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,163 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:19:15,163 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,178 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:15,178 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:19:15,178 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,178 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,179 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：788
2022-05-19 18:19:15,179 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,189 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:19:15,190 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:19:15,190 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,191 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,191 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:19:15,192 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,212 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:19:15,213 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:19:15,213 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,213 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,213 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：789
2022-05-19 18:19:15,213 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,230 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:19:15,230 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [788, 789]}
2022-05-19 18:19:15,231 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:19:15,231 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:19:15,231 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：788, 789的记录
2022-05-19 18:19:15,231 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,028 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:20:02,029 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:20:02,029 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:20:02,029 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,029 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:20:02,030 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,063 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:20:02,063 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "N564"}
2022-05-19 18:20:02,063 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 711
2022-05-19 18:20:02,063 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,064 ERROR [root] [key.py (post:27] - 出现异常，code:711不等于200
2022-05-19 18:20:02,162 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:20:02,162 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1451205167969'}
2022-05-19 18:20:02,162 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:20:02,163 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,182 INFO [root] [key.py (post:18] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:20:02,183 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:20:02,183 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 401
2022-05-19 18:20:02,183 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,183 ERROR [root] [key.py (post:27] - 出现异常，code:401不等于200
2022-05-19 18:20:02,209 INFO [root] [key.py (post:18] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:20:02,209 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:20:02,210 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 401
2022-05-19 18:20:02,210 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,210 ERROR [root] [key.py (post:27] - 出现异常，code:401不等于200
2022-05-19 18:20:02,237 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:20:02,238 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3271159932715'}
2022-05-19 18:20:02,238 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:20:02,238 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:20:02,265 INFO [root] [key.py (get:35] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:20:02,266 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1151922511069'}
2022-05-19 18:20:02,266 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:20:02,266 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,291 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:21:04,292 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:21:04,292 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,292 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,292 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:21:04,292 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,342 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:21:04,342 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DKAW"}
2022-05-19 18:21:04,342 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,343 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,343 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：e2dd65613e12478da364613c6c3bc69e
2022-05-19 18:21:04,343 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,362 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:04,362 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2847709829730'}
2022-05-19 18:21:04,363 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,363 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,363 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:04,363 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,390 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:04,391 INFO [root] [key.py (get:36] - 传的参数是：{'t': '1054372668513'}
2022-05-19 18:21:04,391 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,392 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,392 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:04,392 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,568 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:04,569 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4594662088616'}
2022-05-19 18:21:04,570 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,571 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,573 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:04,574 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,604 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:04,604 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:21:04,605 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,605 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,606 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:21:04,606 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,660 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:04,661 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:21:04,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,662 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:21:04,662 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,671 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:04,672 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:21:04,672 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,673 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,692 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:04,693 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:21:04,693 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,693 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,693 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1293
2022-05-19 18:21:04,693 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,703 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:21:04,704 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1293}
2022-05-19 18:21:04,704 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,704 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,704 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1293的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1293, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:21:04,704 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,713 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:04,714 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1293, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:21:04,714 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,714 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,727 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:21:04,727 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1293}
2022-05-19 18:21:04,728 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,728 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,728 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1293的记录已成功
2022-05-19 18:21:04,729 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,741 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:04,742 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:21:04,742 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,742 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,743 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:21:04,743 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,761 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:04,761 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1293]}
2022-05-19 18:21:04,762 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,762 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,762 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1293的记录
2022-05-19 18:21:04,763 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,771 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:04,772 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1293, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:21:04,772 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,772 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,787 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:04,788 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:21:04,788 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,788 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,788 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1294
2022-05-19 18:21:04,789 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,798 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:04,798 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1294, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:21:04,799 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,799 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,816 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:04,817 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:21:04,817 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,817 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,817 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1295
2022-05-19 18:21:04,817 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,830 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:04,830 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1294, 1295]}
2022-05-19 18:21:04,831 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,831 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,831 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1294, 1295的记录
2022-05-19 18:21:04,831 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,843 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:04,843 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:21:04,843 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,843 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,861 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:04,861 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:21:04,861 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:04,861 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,861 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1296
2022-05-19 18:21:04,862 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,875 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:04,876 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6279402280986'}
2022-05-19 18:21:04,876 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:04,876 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:04,876 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:04,877 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,058 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:05,060 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4568740978580'}
2022-05-19 18:21:05,061 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,062 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,063 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:05,064 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,089 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:05,090 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:21:05,091 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,092 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,092 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:21:05,093 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,159 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:05,159 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:21:05,160 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,160 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,161 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:21:05,161 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,172 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:05,173 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:21:05,173 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,173 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,174 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:21:05,175 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,189 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:05,190 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1296}
2022-05-19 18:21:05,190 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,190 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,213 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:05,214 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1296}, "name": "\u6c49EV"}}
2022-05-19 18:21:05,214 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,214 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,215 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1071
2022-05-19 18:21:05,215 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,230 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:21:05,230 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1071}
2022-05-19 18:21:05,230 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,230 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,231 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1071的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1296}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1071, 'nationalStandard': 255}
2022-05-19 18:21:05,231 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,246 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:21:05,246 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1071}
2022-05-19 18:21:05,246 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,246 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,246 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1071的记录已成功
2022-05-19 18:21:05,247 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,302 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:05,303 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:21:05,303 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,303 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,304 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:21:05,304 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,326 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:05,326 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:21:05,327 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,327 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,328 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:21:05,328 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,366 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:05,367 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:21:05,367 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,367 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,368 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1296]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1296}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:21:05,369 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,387 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:05,388 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1071]}
2022-05-19 18:21:05,388 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,388 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,389 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1071的记录
2022-05-19 18:21:05,389 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,401 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:05,402 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:21:05,402 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,403 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,403 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:21:05,403 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,415 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:05,415 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1296}
2022-05-19 18:21:05,416 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,416 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,432 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:05,433 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1296}, "name": "\u6c49EV"}}
2022-05-19 18:21:05,433 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,433 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,433 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1072
2022-05-19 18:21:05,434 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,443 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:05,443 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:21:05,444 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,444 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,444 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:21:05,444 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,457 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:05,457 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1296}
2022-05-19 18:21:05,458 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,458 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,478 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:05,479 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1296}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:21:05,479 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,479 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,480 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1073
2022-05-19 18:21:05,480 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,494 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:05,494 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1072, 1073]}
2022-05-19 18:21:05,495 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,495 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,495 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1072, 1073的记录
2022-05-19 18:21:05,495 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,508 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:05,508 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1296]}
2022-05-19 18:21:05,508 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,508 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,509 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1296的记录
2022-05-19 18:21:05,509 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,530 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:21:05,531 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1296, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:21:05,531 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,531 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,546 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:05,546 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:21:05,546 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,547 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,547 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1297
2022-05-19 18:21:05,547 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,558 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:05,558 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2115084536668'}
2022-05-19 18:21:05,559 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,559 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,559 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:05,559 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,704 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:05,706 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '9567887957797'}
2022-05-19 18:21:05,707 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,709 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,710 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:05,711 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,735 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:05,736 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:21:05,737 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,737 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,738 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:21:05,739 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,798 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:05,799 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:21:05,799 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,800 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,800 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:21:05,800 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,814 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:05,814 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:21:05,814 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,814 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,814 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:21:05,816 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,842 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:05,842 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1297}
2022-05-19 18:21:05,843 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,843 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,881 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:05,881 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1297}, "name": "\u6c49EV"}}
2022-05-19 18:21:05,881 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:05,882 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,882 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1074
2022-05-19 18:21:05,882 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,899 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:05,900 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0507285304776'}
2022-05-19 18:21:05,900 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:05,900 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:05,901 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:05,901 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,017 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:06,018 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4082390732758'}
2022-05-19 18:21:06,018 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:06,019 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,020 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:06,021 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,042 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:06,042 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:21:06,043 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:06,043 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,043 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:21:06,043 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,078 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:06,078 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:21:06,079 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,079 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,080 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:21:06,080 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,090 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:06,090 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:21:06,090 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,091 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,091 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:21:06,092 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,100 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:06,101 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1074}
2022-05-19 18:21:06,101 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,101 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,116 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:06,116 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1074}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:21:06,116 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,117 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,117 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：868
2022-05-19 18:21:06,117 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,129 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:21:06,129 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 868}
2022-05-19 18:21:06,130 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,130 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,131 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：868的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1074}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 868}
2022-05-19 18:21:06,131 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,142 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:21:06,142 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 868}
2022-05-19 18:21:06,143 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,143 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,143 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：868的记录已成功
2022-05-19 18:21:06,144 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,156 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,156 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:21:06,156 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,156 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,156 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:21:06,157 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,172 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,172 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:21:06,173 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,173 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,173 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:21:06,174 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,192 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,192 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:21:06,193 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,193 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,193 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:21:06,193 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,213 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,214 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:21:06,214 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,214 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,215 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:21:06,215 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,230 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,230 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:21:06,230 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,231 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,231 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:21:06,231 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,279 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:06,279 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:21:06,279 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,280 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,280 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:21:06,281 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,338 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:06,339 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:21:06,339 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,340 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,341 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1074]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1074}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:21:06,342 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,354 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:06,355 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [868]}
2022-05-19 18:21:06,355 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,355 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,356 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：868的记录
2022-05-19 18:21:06,356 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,368 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:06,369 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:21:06,369 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,370 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,370 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:21:06,370 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,381 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:06,382 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1074}
2022-05-19 18:21:06,382 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,382 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,401 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:06,401 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1074}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:21:06,402 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,402 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,402 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：869
2022-05-19 18:21:06,402 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,412 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:06,412 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:21:06,413 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,413 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,413 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:21:06,414 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,424 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:21:06,424 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1074}
2022-05-19 18:21:06,424 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,425 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,438 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:06,438 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1074}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:21:06,438 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,439 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,439 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：870
2022-05-19 18:21:06,439 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,470 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:06,470 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [869, 870]}
2022-05-19 18:21:06,471 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,471 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,471 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：869, 870的记录
2022-05-19 18:21:06,471 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,501 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:06,502 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1074]}
2022-05-19 18:21:06,502 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,503 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,503 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1074的记录
2022-05-19 18:21:06,504 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:06,525 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1297]}
2022-05-19 18:21:06,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,526 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,526 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1297的记录
2022-05-19 18:21:06,527 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,548 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:06,549 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5785333921790'}
2022-05-19 18:21:06,550 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:06,550 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,551 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:06,551 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,743 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:06,744 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5540985536148'}
2022-05-19 18:21:06,745 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:06,746 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,747 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:06,748 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,776 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:06,777 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:21:06,777 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:06,778 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,778 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:21:06,779 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,834 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:06,834 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:21:06,835 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,835 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,835 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:21:06,836 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,849 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:06,849 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:21:06,850 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,850 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,850 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:21:06,850 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,868 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:06,869 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:21:06,869 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,869 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,870 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：790
2022-05-19 18:21:06,870 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,887 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:21:06,887 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 790}
2022-05-19 18:21:06,887 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,887 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,888 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：790的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 790, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:21:06,888 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,908 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:21:06,908 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 790}
2022-05-19 18:21:06,909 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,909 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,910 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：790的记录已成功
2022-05-19 18:21:06,910 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,937 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,938 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:21:06,938 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,939 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,939 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:21:06,940 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,960 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,960 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:21:06,961 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,961 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,962 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:21:06,962 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,986 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:06,987 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:21:06,987 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:06,987 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:06,988 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:21:06,988 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,011 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:07,012 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:21:07,012 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,012 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,013 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:21:07,013 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,089 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:07,090 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:21:07,092 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,094 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,096 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:21:07,099 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,126 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:07,126 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:21:07,127 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,128 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,128 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:21:07,129 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,149 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:07,150 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [790]}
2022-05-19 18:21:07,151 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,151 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,152 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：790的记录
2022-05-19 18:21:07,152 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,165 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:07,165 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:21:07,166 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,167 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,167 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:21:07,168 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,185 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:07,185 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:21:07,186 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,187 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,187 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：791
2022-05-19 18:21:07,188 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,201 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:07,202 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:21:07,203 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,204 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,204 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:21:07,204 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,224 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:07,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:21:07,226 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,226 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,227 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：792
2022-05-19 18:21:07,228 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,242 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:21:07,242 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [791, 792]}
2022-05-19 18:21:07,243 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,243 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,244 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：791, 792的记录
2022-05-19 18:21:07,244 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,267 INFO [root] [key.py (get:35] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:21:07,268 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7279144323910'}
2022-05-19 18:21:07,268 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:07,268 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,269 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:21:07,269 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,418 INFO [root] [key.py (get:35] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:21:07,419 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0975286097280'}
2022-05-19 18:21:07,420 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:07,421 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,422 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:21:07,424 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,446 INFO [root] [key.py (get:35] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:21:07,446 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '29'}
2022-05-19 18:21:07,447 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:21:07,448 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,449 INFO [root] [key.py (load:163] - 呈现客户管理-个人客户模型
2022-05-19 18:21:07,449 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,509 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:21:07,510 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-19 18:21:07,511 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,511 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,512 INFO [root] [key.py (load_views:93] - 渲染模型customer_info的视图views
2022-05-19 18:21:07,513 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,531 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:21:07,531 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-05-19 18:21:07,532 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,532 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,533 INFO [root] [key.py (default_get:100] - 模型：customer_info的默认填充字段信息为：{'code': '6932998565929156635', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-05-19 18:21:07,533 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,591 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:21:07,592 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"code": "6932998565929156635", "carCount": 0, "cardCount": 0, "sex": 1, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u76ae\u5176\u7434", "phone": 15947408202}}
2022-05-19 18:21:07,592 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,593 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,593 INFO [root] [key.py (create:50] - 新建：创建模型：customer_info新记录，id为：131
2022-05-19 18:21:07,594 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,634 INFO [root] [key.py (post:18] - 正在测试本次脚本的第104个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:21:07,634 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 131}
2022-05-19 18:21:07,636 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,636 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,637 INFO [root] [key.py (read:57] - 查看：查看模型customer_info中id为：131的内容： {'code': '6932998565929156635', 'billingIds': [], 'stationIds': [], 'displayName': '皮其琴', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 131, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 1, 'accountId': {'code': '6932998566071762972', 'displayName': '6932998566071762972', 'id': 130, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '15947408202', 'name': '皮其琴', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-19 18:21:07,639 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,658 INFO [root] [key.py (post:18] - 正在测试本次脚本的第105个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:21:07,659 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"name": "\u535e\u987a", "phone": 19819287719}, "id": 131}
2022-05-19 18:21:07,660 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,661 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_info中id为：131的记录已成功
2022-05-19 18:21:07,662 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,690 INFO [root] [key.py (post:18] - 正在测试本次脚本的第106个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:07,691 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u535e\u987a"]]}
2022-05-19 18:21:07,692 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,692 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,693 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '卞顺'符合的记录数是：1条
2022-05-19 18:21:07,694 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,722 INFO [root] [key.py (post:18] - 正在测试本次脚本的第107个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:21:07,722 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 19819287719]]}
2022-05-19 18:21:07,723 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,724 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,725 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 19819287719符合的记录数是：1条
2022-05-19 18:21:07,725 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,741 INFO [root] [key.py (post:18] - 正在测试本次脚本的第108个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:07,741 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-05-19 18:21:07,742 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,742 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,743 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 7, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 95, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 8, 'sex': 1}], 'length': 3}
2022-05-19 18:21:07,743 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,756 INFO [root] [key.py (post:18] - 正在测试本次脚本的第109个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:21:07,757 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-19 18:21:07,758 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,758 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,758 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 108, 'status': 0}], 'length': 2}
2022-05-19 18:21:07,759 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,774 INFO [root] [key.py (post:18] - 正在测试本次脚本的第110个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:21:07,774 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[131], {}]}
2022-05-19 18:21:07,775 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,775 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,776 INFO [root] [key.py (call_method:130] - 冻结：已成功冻结模型customer_info中id为：131的记录
2022-05-19 18:21:07,776 INFO [root] [key.py (call_method:131] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,790 INFO [root] [key.py (post:18] - 正在测试本次脚本的第111个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:21:07,790 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[131], {}]}
2022-05-19 18:21:07,791 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,792 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,792 INFO [root] [key.py (call_method:127] - 解冻：已成功解冻模型customer_info中id为：131的记录
2022-05-19 18:21:07,792 INFO [root] [key.py (call_method:128] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,806 INFO [root] [key.py (post:18] - 正在测试本次脚本的第112个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:21:07,806 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[131], {}]}
2022-05-19 18:21:07,807 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,807 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,808 INFO [root] [key.py (call_method:136] - 打开多充：已成功开启模型customer_info中id为：131的多充功能
2022-05-19 18:21:07,808 INFO [root] [key.py (call_method:137] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,834 INFO [root] [key.py (post:18] - 正在测试本次脚本的第113个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:21:07,834 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[131], {}]}
2022-05-19 18:21:07,834 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:21:07,834 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:21:07,835 INFO [root] [key.py (call_method:133] - 关闭多充：已成功关闭模型customer_info中id为：131的多充功能
2022-05-19 18:21:07,835 INFO [root] [key.py (call_method:134] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,461 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:23:15,462 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:23:15,462 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:15,462 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,462 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:23:15,463 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,499 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:23:15,499 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "FWYG"}
2022-05-19 18:23:15,499 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,500 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,500 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：50da2dd8cb1e4075812a9e06a3d49d5f
2022-05-19 18:23:15,500 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,510 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:15,510 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6914274729977'}
2022-05-19 18:23:15,510 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:15,510 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,511 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:15,511 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,526 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:15,527 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6409828313833'}
2022-05-19 18:23:15,527 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:15,527 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,527 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:15,528 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,680 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:15,681 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0631367469628'}
2022-05-19 18:23:15,682 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:15,683 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,684 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:15,685 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,709 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:15,710 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:23:15,710 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:15,712 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,712 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:23:15,712 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,780 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:15,781 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:23:15,782 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,782 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,783 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:23:15,783 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,798 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:15,799 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:23:15,799 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,800 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,837 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:15,838 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:23:15,839 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,839 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,840 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1298
2022-05-19 18:23:15,841 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,860 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:15,861 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1298}
2022-05-19 18:23:15,861 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,862 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,862 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1298的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1298, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:23:15,863 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,875 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:15,876 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1298, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:23:15,876 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,876 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,893 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:15,893 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1298}
2022-05-19 18:23:15,894 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,894 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,895 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1298的记录已成功
2022-05-19 18:23:15,896 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,917 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:15,918 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:23:15,918 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,920 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,920 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:23:15,920 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,935 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:15,936 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1298]}
2022-05-19 18:23:15,936 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,937 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,937 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1298的记录
2022-05-19 18:23:15,938 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,949 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:15,950 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1298, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:23:15,951 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,951 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,965 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:15,966 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:23:15,966 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,967 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,967 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1299
2022-05-19 18:23:15,968 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:15,980 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:15,981 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1299, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:23:15,981 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:15,982 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,002 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,003 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:23:16,004 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,004 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,004 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1300
2022-05-19 18:23:16,005 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,022 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:16,023 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1299, 1300]}
2022-05-19 18:23:16,024 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,024 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,025 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1299, 1300的记录
2022-05-19 18:23:16,025 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,047 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:16,048 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:23:16,048 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,049 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,094 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,094 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:23:16,095 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,095 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,096 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1301
2022-05-19 18:23:16,096 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,108 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:16,109 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7015371537292'}
2022-05-19 18:23:16,109 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,110 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,110 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:16,111 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,236 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:16,237 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1344447720669'}
2022-05-19 18:23:16,237 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,237 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,237 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:16,237 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,255 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:16,255 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:23:16,256 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,256 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,256 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:23:16,257 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,374 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:16,375 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:23:16,376 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,376 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,377 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:23:16,377 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,390 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:16,391 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:23:16,391 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,392 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,392 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:23:16,392 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,408 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:16,409 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1301}
2022-05-19 18:23:16,409 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,409 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,431 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,432 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1301}, "name": "\u6c49EV"}}
2022-05-19 18:23:16,432 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,432 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,433 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1075
2022-05-19 18:23:16,433 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,451 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:16,451 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1075}
2022-05-19 18:23:16,452 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,452 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,452 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1075的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1301}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1075, 'nationalStandard': 255}
2022-05-19 18:23:16,453 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,473 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:16,474 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1075}
2022-05-19 18:23:16,474 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,474 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,475 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1075的记录已成功
2022-05-19 18:23:16,476 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,493 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:16,494 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:23:16,494 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,495 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,495 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:23:16,495 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,516 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:16,517 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:23:16,517 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,518 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,518 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:23:16,518 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,552 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:16,552 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:23:16,553 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,553 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,553 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1301]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1301}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:23:16,554 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,568 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:16,569 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1075]}
2022-05-19 18:23:16,569 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,569 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,569 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1075的记录
2022-05-19 18:23:16,569 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,581 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:16,581 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:23:16,582 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,582 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,582 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:23:16,582 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,595 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:16,596 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1301}
2022-05-19 18:23:16,596 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,597 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,614 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1301}, "name": "\u6c49EV"}}
2022-05-19 18:23:16,615 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,615 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,615 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1076
2022-05-19 18:23:16,615 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,626 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:16,626 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:23:16,627 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,627 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,627 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:23:16,627 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,640 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:16,641 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1301}
2022-05-19 18:23:16,641 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,641 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,655 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,655 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1301}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:23:16,656 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,656 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,656 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1077
2022-05-19 18:23:16,656 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,669 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:16,670 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1076, 1077]}
2022-05-19 18:23:16,670 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,670 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,670 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1076, 1077的记录
2022-05-19 18:23:16,671 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,682 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:16,682 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1301]}
2022-05-19 18:23:16,683 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,683 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,683 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1301的记录
2022-05-19 18:23:16,683 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,695 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:23:16,695 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1301, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:23:16,695 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,696 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,711 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:16,712 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:23:16,712 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,712 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,712 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1302
2022-05-19 18:23:16,713 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,730 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:16,730 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9704157869382'}
2022-05-19 18:23:16,731 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,731 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,731 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:16,731 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,870 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:16,870 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5115906011591'}
2022-05-19 18:23:16,871 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,871 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,872 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:16,872 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,893 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:16,894 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:23:16,894 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:16,895 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,895 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:23:16,895 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,954 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:16,955 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:23:16,955 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,956 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,957 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:23:16,957 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,968 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:16,969 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:23:16,969 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,970 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,970 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:23:16,970 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:16,983 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:16,984 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1302}
2022-05-19 18:23:16,984 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:16,984 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,000 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:17,001 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1302}, "name": "\u6c49EV"}}
2022-05-19 18:23:17,002 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,002 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,002 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1078
2022-05-19 18:23:17,003 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,015 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:17,016 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5512192484554'}
2022-05-19 18:23:17,016 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,016 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,016 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:17,016 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,136 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:17,138 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5129325995570'}
2022-05-19 18:23:17,139 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,140 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,141 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:17,142 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,162 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:17,163 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:23:17,164 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,165 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,166 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:23:17,167 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,205 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:17,206 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:23:17,206 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,206 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,207 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:23:17,207 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,215 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:17,215 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:23:17,215 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,215 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,215 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:23:17,216 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,225 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:17,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1078}
2022-05-19 18:23:17,225 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,225 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,239 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:17,239 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1078}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:23:17,239 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,240 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,240 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：871
2022-05-19 18:23:17,240 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,250 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:17,250 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 871}
2022-05-19 18:23:17,251 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,251 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,251 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：871的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1078}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 871}
2022-05-19 18:23:17,251 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,263 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:17,264 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 871}
2022-05-19 18:23:17,264 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,264 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,264 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：871的记录已成功
2022-05-19 18:23:17,264 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,276 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,276 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:23:17,276 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,277 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,277 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:23:17,277 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,289 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,289 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:23:17,290 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,290 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,291 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:23:17,291 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,306 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,306 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:23:17,306 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,306 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,307 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:23:17,307 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,319 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,319 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:23:17,320 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,320 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,320 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:23:17,320 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,331 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,332 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:23:17,332 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,332 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,333 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:23:17,333 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,374 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:17,375 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:23:17,375 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,376 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,376 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:23:17,378 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,445 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:17,447 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:23:17,448 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,449 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,451 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1078]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1078}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:23:17,455 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,480 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:17,481 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [871]}
2022-05-19 18:23:17,482 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,483 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,484 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：871的记录
2022-05-19 18:23:17,485 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,500 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:17,500 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:23:17,501 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,502 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,503 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:23:17,503 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,517 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:17,518 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1078}
2022-05-19 18:23:17,518 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,519 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,536 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:17,537 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1078}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:23:17,538 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,538 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,538 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：872
2022-05-19 18:23:17,539 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,553 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:17,553 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:23:17,554 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,554 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,555 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:23:17,555 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,567 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:23:17,568 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1078}
2022-05-19 18:23:17,568 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,568 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,583 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:17,584 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1078}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:23:17,584 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,584 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,585 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：873
2022-05-19 18:23:17,585 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,597 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:17,597 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [872, 873]}
2022-05-19 18:23:17,598 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,598 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,598 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：872, 873的记录
2022-05-19 18:23:17,598 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,610 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:17,610 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1078]}
2022-05-19 18:23:17,611 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,611 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,611 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1078的记录
2022-05-19 18:23:17,611 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,623 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:17,623 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1302]}
2022-05-19 18:23:17,623 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,623 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,624 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1302的记录
2022-05-19 18:23:17,624 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,638 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:17,638 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7934486646219'}
2022-05-19 18:23:17,638 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,638 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,638 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:17,639 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,791 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:17,793 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '3196053888310'}
2022-05-19 18:23:17,794 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,795 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,796 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:17,797 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,816 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:17,817 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:23:17,817 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:17,817 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,818 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:23:17,818 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,858 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:17,859 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:23:17,859 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,860 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,860 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:23:17,860 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,869 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:17,869 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:23:17,869 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,869 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,870 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:23:17,870 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,883 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:17,884 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:23:17,884 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,884 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,884 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：793
2022-05-19 18:23:17,884 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,896 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:17,896 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 793}
2022-05-19 18:23:17,896 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,897 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,897 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：793的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 793, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:23:17,897 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,912 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:17,913 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 793}
2022-05-19 18:23:17,913 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,913 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,914 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：793的记录已成功
2022-05-19 18:23:17,914 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,936 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,936 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:23:17,937 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,937 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,937 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:23:17,938 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,954 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,954 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:23:17,955 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,955 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,956 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:23:17,956 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,975 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,977 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:23:17,977 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,978 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,978 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:23:17,978 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,993 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:17,994 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:23:17,994 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:17,995 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:17,995 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:23:17,995 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,051 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:18,053 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:23:18,054 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,055 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,057 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:23:18,061 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,117 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:18,118 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:23:18,118 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,119 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,119 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:23:18,120 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,133 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:18,134 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [793]}
2022-05-19 18:23:18,134 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,134 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,135 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：793的记录
2022-05-19 18:23:18,135 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,146 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:18,147 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:23:18,147 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,148 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,148 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:23:18,148 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,165 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:18,166 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:23:18,166 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,167 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,167 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：794
2022-05-19 18:23:18,167 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,176 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:18,177 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:23:18,177 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,178 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,178 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:23:18,178 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,196 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:18,197 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:23:18,197 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,198 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,198 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：795
2022-05-19 18:23:18,198 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,213 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:23:18,214 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [794, 795]}
2022-05-19 18:23:18,214 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,214 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,215 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：794, 795的记录
2022-05-19 18:23:18,215 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,235 INFO [root] [key.py (get:35] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:18,235 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9479488615805'}
2022-05-19 18:23:18,236 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,236 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,236 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:18,237 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,382 INFO [root] [key.py (get:35] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:18,382 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5417928764518'}
2022-05-19 18:23:18,383 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,383 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,383 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:18,383 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,400 INFO [root] [key.py (get:35] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:18,400 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '29'}
2022-05-19 18:23:18,400 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,401 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,401 INFO [root] [key.py (load:163] - 呈现客户管理-个人客户模型
2022-05-19 18:23:18,401 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,511 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:18,512 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-19 18:23:18,515 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,516 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,518 INFO [root] [key.py (load_views:93] - 渲染模型customer_info的视图views
2022-05-19 18:23:18,519 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,565 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:18,566 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-05-19 18:23:18,567 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,568 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,570 INFO [root] [key.py (default_get:100] - 模型：customer_info的默认填充字段信息为：{'code': '6932999115441700920', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-05-19 18:23:18,571 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,595 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:18,596 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"code": "6932999115441700920", "carCount": 0, "cardCount": 0, "sex": 1, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u5c24\u63ed", "phone": 18991721120}}
2022-05-19 18:23:18,598 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,599 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,600 INFO [root] [key.py (create:50] - 新建：创建模型：customer_info新记录，id为：132
2022-05-19 18:23:18,601 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,625 INFO [root] [key.py (post:18] - 正在测试本次脚本的第104个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:18,625 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 132}
2022-05-19 18:23:18,626 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,626 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,627 INFO [root] [key.py (read:57] - 查看：查看模型customer_info中id为：132的内容： {'code': '6932999115441700920', 'billingIds': [], 'stationIds': [], 'displayName': '尤揭', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 132, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 1, 'accountId': {'code': '6932999115559141433', 'displayName': '6932999115559141433', 'id': 131, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18991721120', 'name': '尤揭', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-19 18:23:18,627 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,638 INFO [root] [key.py (post:18] - 正在测试本次脚本的第105个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:18,639 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"name": "\u6c64\u6bb5\u62db", "phone": 19620130158}, "id": 132}
2022-05-19 18:23:18,639 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,639 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,640 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_info中id为：132的记录已成功
2022-05-19 18:23:18,640 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,655 INFO [root] [key.py (post:18] - 正在测试本次脚本的第106个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:18,656 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u6c64\u6bb5\u62db"]]}
2022-05-19 18:23:18,656 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,656 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,656 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '汤段招'符合的记录数是：1条
2022-05-19 18:23:18,657 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,672 INFO [root] [key.py (post:18] - 正在测试本次脚本的第107个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:18,672 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 19620130158]]}
2022-05-19 18:23:18,673 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,673 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,673 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 19620130158符合的记录数是：1条
2022-05-19 18:23:18,673 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,685 INFO [root] [key.py (post:18] - 正在测试本次脚本的第108个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:18,685 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-05-19 18:23:18,686 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,686 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,686 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 7, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 95, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 9, 'sex': 1}], 'length': 3}
2022-05-19 18:23:18,687 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,695 INFO [root] [key.py (post:18] - 正在测试本次脚本的第109个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:18,696 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-19 18:23:18,696 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,697 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,697 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 109, 'status': 0}], 'length': 2}
2022-05-19 18:23:18,697 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,708 INFO [root] [key.py (post:18] - 正在测试本次脚本的第110个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:18,709 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[132], {}]}
2022-05-19 18:23:18,709 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,709 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,709 INFO [root] [key.py (call_method:130] - 冻结：已成功冻结模型customer_info中id为：132的记录
2022-05-19 18:23:18,710 INFO [root] [key.py (call_method:131] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,724 INFO [root] [key.py (post:18] - 正在测试本次脚本的第111个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:18,724 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[132], {}]}
2022-05-19 18:23:18,724 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,725 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,725 INFO [root] [key.py (call_method:127] - 解冻：已成功解冻模型customer_info中id为：132的记录
2022-05-19 18:23:18,725 INFO [root] [key.py (call_method:128] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,737 INFO [root] [key.py (post:18] - 正在测试本次脚本的第112个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:18,738 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[132], {}]}
2022-05-19 18:23:18,738 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,738 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,738 INFO [root] [key.py (call_method:136] - 打开多充：已成功开启模型customer_info中id为：132的多充功能
2022-05-19 18:23:18,739 INFO [root] [key.py (call_method:137] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,751 INFO [root] [key.py (post:18] - 正在测试本次脚本的第113个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:18,752 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[132], {}]}
2022-05-19 18:23:18,752 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:18,752 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,752 INFO [root] [key.py (call_method:133] - 关闭多充：已成功关闭模型customer_info中id为：132的多充功能
2022-05-19 18:23:18,752 INFO [root] [key.py (call_method:134] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,766 INFO [root] [key.py (get:35] - 正在测试本次脚本的第114个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:23:18,766 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5555345850441'}
2022-05-19 18:23:18,767 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,767 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,767 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:23:18,767 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,906 INFO [root] [key.py (get:35] - 正在测试本次脚本的第115个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:23:18,908 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4416708841576'}
2022-05-19 18:23:18,909 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,910 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,911 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:23:18,912 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,939 INFO [root] [key.py (get:35] - 正在测试本次脚本的第116个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:23:18,941 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '30'}
2022-05-19 18:23:18,942 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:23:18,943 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:18,944 INFO [root] [key.py (load:163] - 呈现客户管理-公司客户模型
2022-05-19 18:23:18,945 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,022 INFO [root] [key.py (post:18] - 正在测试本次脚本的第117个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:23:19,023 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-19 18:23:19,025 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,026 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,027 INFO [root] [key.py (load_views:93] - 渲染模型customer_info的视图views
2022-05-19 18:23:19,028 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,042 INFO [root] [key.py (post:18] - 正在测试本次脚本的第118个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:23:19,043 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-05-19 18:23:19,044 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,044 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,045 INFO [root] [key.py (default_get:100] - 模型：customer_info的默认填充字段信息为：{'code': '6932999117446578261', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-05-19 18:23:19,046 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,070 INFO [root] [key.py (post:18] - 正在测试本次脚本的第119个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:23:19,070 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"code": "6932999117446578261", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u595a\u4fee", "phone": 17772085220}}
2022-05-19 18:23:19,071 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,071 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,072 INFO [root] [key.py (create:50] - 新建：创建模型：customer_info新记录，id为：133
2022-05-19 18:23:19,072 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,097 INFO [root] [key.py (post:18] - 正在测试本次脚本的第120个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:23:19,097 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 133}
2022-05-19 18:23:19,098 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,099 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,099 INFO [root] [key.py (read:57] - 查看：查看模型customer_info中id为：133的内容： {'code': '6932999117446578261', 'billingIds': [], 'stationIds': [], 'displayName': '奚修', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 133, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6932999117572407382', 'displayName': '6932999117572407382', 'id': 132, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '17772085220', 'name': '奚修', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-19 18:23:19,100 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,120 INFO [root] [key.py (post:18] - 正在测试本次脚本的第121个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:23:19,120 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"name": "\u891a\u5883", "phone": 17389923343}, "id": 133}
2022-05-19 18:23:19,121 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,122 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,122 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_info中id为：133的记录已成功
2022-05-19 18:23:19,123 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,149 INFO [root] [key.py (post:18] - 正在测试本次脚本的第122个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:19,150 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u891a\u5883"]]}
2022-05-19 18:23:19,151 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,151 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,152 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '褚境'符合的记录数是：1条
2022-05-19 18:23:19,152 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,178 INFO [root] [key.py (post:18] - 正在测试本次脚本的第123个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:23:19,179 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 17389923343]]}
2022-05-19 18:23:19,179 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,179 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,180 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 17389923343符合的记录数是：1条
2022-05-19 18:23:19,180 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,194 INFO [root] [key.py (post:18] - 正在测试本次脚本的第124个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:23:19,195 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-19 18:23:19,195 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,196 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,196 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 110, 'status': 0}], 'length': 2}
2022-05-19 18:23:19,196 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,210 INFO [root] [key.py (post:18] - 正在测试本次脚本的第125个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:19,211 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[133], {}]}
2022-05-19 18:23:19,211 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,211 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,212 INFO [root] [key.py (call_method:130] - 冻结：已成功冻结模型customer_info中id为：133的记录
2022-05-19 18:23:19,212 INFO [root] [key.py (call_method:131] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,225 INFO [root] [key.py (post:18] - 正在测试本次脚本的第126个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:19,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[133], {}]}
2022-05-19 18:23:19,226 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,226 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,226 INFO [root] [key.py (call_method:127] - 解冻：已成功解冻模型customer_info中id为：133的记录
2022-05-19 18:23:19,226 INFO [root] [key.py (call_method:128] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,238 INFO [root] [key.py (post:18] - 正在测试本次脚本的第127个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:19,238 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[133], {}]}
2022-05-19 18:23:19,239 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,239 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,239 INFO [root] [key.py (call_method:136] - 打开多充：已成功开启模型customer_info中id为：133的多充功能
2022-05-19 18:23:19,239 INFO [root] [key.py (call_method:137] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,253 INFO [root] [key.py (post:18] - 正在测试本次脚本的第128个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:23:19,253 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[133], {}]}
2022-05-19 18:23:19,254 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:23:19,254 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:23:19,254 INFO [root] [key.py (call_method:133] - 关闭多充：已成功关闭模型customer_info中id为：133的多充功能
2022-05-19 18:23:19,254 INFO [root] [key.py (call_method:134] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,120 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:32:07,121 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:32:07,121 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,121 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,121 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:32:07,121 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,166 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:32:07,167 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LDB6"}
2022-05-19 18:32:07,167 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,167 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,167 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：e8f6b73bbfe9489197397bd4f0ee20a0
2022-05-19 18:32:07,167 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,179 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:07,180 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3472685350527'}
2022-05-19 18:32:07,180 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,180 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,180 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:07,181 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,196 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:07,196 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3831027412820'}
2022-05-19 18:32:07,196 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,196 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,197 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:07,197 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,340 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:32:07,341 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '3194235861628'}
2022-05-19 18:32:07,341 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,341 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,341 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:32:07,341 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,357 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:32:07,357 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:32:07,357 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,357 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,357 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:32:07,357 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,420 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:32:07,421 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:32:07,422 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,424 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,425 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:32:07,426 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,443 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:07,445 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:32:07,445 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,446 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,471 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:07,471 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:32:07,472 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,473 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,474 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1303
2022-05-19 18:32:07,474 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,488 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:32:07,489 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1303}
2022-05-19 18:32:07,490 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,491 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,492 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1303的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1303, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:32:07,492 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,504 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:07,505 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1303, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:32:07,505 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,506 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:32:07,524 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1303}
2022-05-19 18:32:07,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,526 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,526 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1303的记录已成功
2022-05-19 18:32:07,527 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,544 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:07,545 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:32:07,546 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,547 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,547 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:32:07,548 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,567 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:07,567 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1303]}
2022-05-19 18:32:07,568 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,568 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,569 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1303的记录
2022-05-19 18:32:07,569 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,583 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:07,583 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1303, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:32:07,584 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,584 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,604 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:07,605 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:32:07,605 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,606 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,607 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1304
2022-05-19 18:32:07,607 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,622 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:07,623 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1304, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:32:07,624 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,625 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,645 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:07,646 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:32:07,646 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,647 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,647 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1305
2022-05-19 18:32:07,648 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,669 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:07,669 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1304, 1305]}
2022-05-19 18:32:07,670 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,670 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,671 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1304, 1305的记录
2022-05-19 18:32:07,671 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,693 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:07,693 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:32:07,694 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,695 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,717 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:07,718 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:32:07,718 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:07,719 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,719 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1306
2022-05-19 18:32:07,720 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,732 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:07,733 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3494160915821'}
2022-05-19 18:32:07,733 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,734 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,734 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:07,735 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,898 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:32:07,900 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8533990857889'}
2022-05-19 18:32:07,901 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,902 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,903 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:32:07,904 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,933 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:32:07,934 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:32:07,935 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:07,936 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,937 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:32:07,938 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:07,999 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:32:08,002 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:32:08,003 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,004 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,006 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:32:08,008 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,033 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:08,035 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:32:08,036 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,037 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,038 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:32:08,039 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,057 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:08,057 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1306}
2022-05-19 18:32:08,058 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,059 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,080 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,080 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1306}, "name": "\u6c49EV"}}
2022-05-19 18:32:08,081 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,081 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,082 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1079
2022-05-19 18:32:08,082 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,097 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:32:08,098 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1079}
2022-05-19 18:32:08,098 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,099 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,100 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1079的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1306}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1079, 'nationalStandard': 255}
2022-05-19 18:32:08,101 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,125 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:32:08,126 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1079}
2022-05-19 18:32:08,127 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,127 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,128 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1079的记录已成功
2022-05-19 18:32:08,128 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,145 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:08,146 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:32:08,147 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,148 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,148 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:32:08,149 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,166 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:08,166 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:32:08,168 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,192 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,193 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:32:08,193 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,229 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:32:08,230 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:32:08,230 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,230 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,231 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1306]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1306}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:32:08,231 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,242 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:08,243 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1079]}
2022-05-19 18:32:08,243 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,243 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,243 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1079的记录
2022-05-19 18:32:08,243 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,254 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:08,254 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:32:08,254 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,255 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,255 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:32:08,255 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,267 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:08,267 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1306}
2022-05-19 18:32:08,268 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,268 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,285 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,285 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1306}, "name": "\u6c49EV"}}
2022-05-19 18:32:08,285 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,285 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,286 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1080
2022-05-19 18:32:08,286 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,298 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:08,298 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:32:08,299 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,299 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,299 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:32:08,299 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,312 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:08,312 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1306}
2022-05-19 18:32:08,312 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,313 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,329 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,329 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1306}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:32:08,330 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,330 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,331 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1081
2022-05-19 18:32:08,331 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,345 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:08,346 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1080, 1081]}
2022-05-19 18:32:08,347 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,347 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,347 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1080, 1081的记录
2022-05-19 18:32:08,347 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,362 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:08,362 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1306]}
2022-05-19 18:32:08,363 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,363 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,363 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1306的记录
2022-05-19 18:32:08,363 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,377 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:32:08,378 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1306, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:32:08,378 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,378 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,390 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,391 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:32:08,391 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,391 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,391 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1307
2022-05-19 18:32:08,391 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,403 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:08,403 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5572886375355'}
2022-05-19 18:32:08,404 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,404 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,404 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:08,404 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,537 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:32:08,538 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5214475528132'}
2022-05-19 18:32:08,540 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,541 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,542 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:32:08,543 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,568 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:32:08,569 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:32:08,570 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,571 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,572 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:32:08,574 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,621 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:32:08,621 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:32:08,622 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,622 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,623 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:32:08,623 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,633 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:08,633 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:32:08,633 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,633 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,633 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:32:08,634 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,646 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:08,647 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1307}
2022-05-19 18:32:08,647 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,647 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,663 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,664 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1307}, "name": "\u6c49EV"}}
2022-05-19 18:32:08,664 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,664 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,665 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1082
2022-05-19 18:32:08,665 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,677 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:08,677 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9469802858080'}
2022-05-19 18:32:08,677 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,678 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,678 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:08,678 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,809 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:32:08,810 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2448800263065'}
2022-05-19 18:32:08,811 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,812 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,813 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:32:08,814 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,837 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:32:08,838 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:32:08,839 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:08,841 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,842 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:32:08,843 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,891 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:32:08,892 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:32:08,893 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,894 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,895 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:32:08,896 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,909 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:08,910 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:32:08,911 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,912 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,913 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:32:08,914 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,927 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:08,928 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1082}
2022-05-19 18:32:08,929 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,930 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,946 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:08,947 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1082}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:32:08,947 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,948 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,949 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：874
2022-05-19 18:32:08,949 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,963 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:32:08,964 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 874}
2022-05-19 18:32:08,965 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,966 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,966 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：874的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1082}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 874}
2022-05-19 18:32:08,967 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,984 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:32:08,985 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 874}
2022-05-19 18:32:08,985 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:08,986 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:08,986 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：874的记录已成功
2022-05-19 18:32:08,987 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,001 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,002 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:32:09,003 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,003 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,004 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:32:09,004 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,019 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,020 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:32:09,021 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,021 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,022 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:32:09,022 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,037 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,038 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:32:09,038 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,039 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,039 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:32:09,040 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,057 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,058 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:32:09,058 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,059 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,059 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:32:09,060 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,073 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,074 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:32:09,075 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,076 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,076 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:32:09,077 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,121 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:32:09,123 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:32:09,125 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,126 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,128 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:32:09,132 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,197 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:32:09,199 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:32:09,201 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,202 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,204 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1082]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1082}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:32:09,210 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,230 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,231 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [874]}
2022-05-19 18:32:09,232 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,233 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,235 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：874的记录
2022-05-19 18:32:09,236 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,250 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:09,250 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:32:09,251 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,252 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,253 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:32:09,254 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,268 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:09,269 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1082}
2022-05-19 18:32:09,269 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,270 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,287 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:09,288 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1082}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:32:09,289 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,289 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,290 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：875
2022-05-19 18:32:09,291 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,300 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:09,301 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:32:09,302 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,302 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,303 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:32:09,303 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,314 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:32:09,315 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1082}
2022-05-19 18:32:09,315 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,316 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,328 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:09,329 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1082}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:32:09,329 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,330 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,330 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：876
2022-05-19 18:32:09,331 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,342 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,343 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [875, 876]}
2022-05-19 18:32:09,343 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,344 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,344 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：875, 876的记录
2022-05-19 18:32:09,344 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,356 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,356 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1082]}
2022-05-19 18:32:09,357 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,357 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,357 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1082的记录
2022-05-19 18:32:09,358 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,368 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,369 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1307]}
2022-05-19 18:32:09,369 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,370 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,370 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1307的记录
2022-05-19 18:32:09,370 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,386 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:32:09,387 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5657817289200'}
2022-05-19 18:32:09,387 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:09,387 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,388 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:32:09,388 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,491 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:32:09,493 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2876831300725'}
2022-05-19 18:32:09,494 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:09,495 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,496 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:32:09,497 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,516 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:32:09,517 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:32:09,519 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:32:09,520 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,521 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:32:09,522 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,570 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:32:09,572 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:32:09,574 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,575 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,577 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:32:09,578 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,593 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:09,594 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:32:09,596 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,597 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,598 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:32:09,598 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,615 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:09,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:32:09,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,616 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,617 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：796
2022-05-19 18:32:09,617 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,627 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:32:09,627 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 796}
2022-05-19 18:32:09,627 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,627 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,628 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：796的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 796, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:32:09,628 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,640 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:32:09,641 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 796}
2022-05-19 18:32:09,641 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,641 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,641 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：796的记录已成功
2022-05-19 18:32:09,641 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,656 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,657 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:32:09,657 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,657 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,658 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:32:09,658 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,669 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,669 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:32:09,670 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,670 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,670 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:32:09,670 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,682 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,682 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:32:09,682 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,683 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,683 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:32:09,683 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,694 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:32:09,695 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:32:09,695 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,695 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,695 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:32:09,696 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,738 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:32:09,739 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:32:09,740 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,740 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,740 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:32:09,742 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,753 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:32:09,754 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:32:09,754 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,755 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,755 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:32:09,756 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,768 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,769 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [796]}
2022-05-19 18:32:09,770 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,770 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,771 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：796的记录
2022-05-19 18:32:09,771 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,781 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:09,782 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:32:09,782 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,783 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,783 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:32:09,784 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,799 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:09,800 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:32:09,800 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,801 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,801 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：797
2022-05-19 18:32:09,802 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,810 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:32:09,811 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:32:09,811 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,812 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,812 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:32:09,813 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,830 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:32:09,830 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:32:09,830 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,832 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,832 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：798
2022-05-19 18:32:09,833 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,847 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:32:09,848 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [797, 798]}
2022-05-19 18:32:09,848 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:32:09,849 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:32:09,849 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：797, 798的记录
2022-05-19 18:32:09,850 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,741 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:36:27,742 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:36:27,742 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:27,742 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,742 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:36:27,742 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,780 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:36:27,780 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "B2FR"}
2022-05-19 18:36:27,780 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:27,780 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,781 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：5df5b6c870634ae7b0f143a891ee85af
2022-05-19 18:36:27,781 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,790 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:27,790 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5926438617328'}
2022-05-19 18:36:27,791 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:27,791 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,791 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:27,791 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,804 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:27,804 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9449160350492'}
2022-05-19 18:36:27,804 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:27,805 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,805 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:27,805 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,962 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:36:27,962 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '3962031960633'}
2022-05-19 18:36:27,963 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:27,964 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,966 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:36:27,967 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,992 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:36:27,993 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:36:27,994 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:27,995 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:27,996 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:36:27,997 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,054 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:36:28,055 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:36:28,055 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,056 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,056 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:36:28,056 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,066 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,066 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,067 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,067 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,083 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,084 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:36:28,085 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,087 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,088 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1308
2022-05-19 18:36:28,089 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,112 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:36:28,113 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1308}
2022-05-19 18:36:28,115 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,116 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,117 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1308的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1308, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:36:28,118 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,131 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,132 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1308, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,132 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,133 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,148 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:36:28,149 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1308}
2022-05-19 18:36:28,149 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,150 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,150 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1308的记录已成功
2022-05-19 18:36:28,151 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,166 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:28,167 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:36:28,168 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,168 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,169 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:36:28,170 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,184 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:28,185 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1308]}
2022-05-19 18:36:28,185 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,186 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,186 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1308的记录
2022-05-19 18:36:28,187 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,204 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,205 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1308, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,205 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,206 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,236 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,236 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:36:28,238 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,239 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,240 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1309
2022-05-19 18:36:28,240 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,254 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,254 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1309, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,255 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,256 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,275 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,275 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:36:28,276 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,277 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,277 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1310
2022-05-19 18:36:28,278 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,303 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:28,303 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1309, 1310]}
2022-05-19 18:36:28,304 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,305 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,305 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1309, 1310的记录
2022-05-19 18:36:28,306 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,330 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,330 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,331 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,331 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,351 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,351 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:36:28,352 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,353 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,354 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1311
2022-05-19 18:36:28,354 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,369 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:28,370 INFO [root] [key.py (get:36] - 传的参数是：{'t': '4016759522747'}
2022-05-19 18:36:28,371 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:28,371 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,372 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:28,373 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,534 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:36:28,535 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8342796446361'}
2022-05-19 18:36:28,535 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:28,535 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,535 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:36:28,536 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,555 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:36:28,556 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:36:28,556 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:28,556 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,557 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:36:28,557 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,603 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:36:28,604 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:36:28,604 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,604 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,605 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:36:28,605 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,615 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:28,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:36:28,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,616 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,616 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:36:28,616 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,628 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:28,628 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1311}
2022-05-19 18:36:28,628 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,629 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,647 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,647 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1311}, "name": "\u6c49EV"}}
2022-05-19 18:36:28,648 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,649 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,649 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1083
2022-05-19 18:36:28,649 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,661 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:36:28,661 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1083}
2022-05-19 18:36:28,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,662 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,662 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1083的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1311}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1083, 'nationalStandard': 255}
2022-05-19 18:36:28,662 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,675 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:36:28,676 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1083}
2022-05-19 18:36:28,676 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,676 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,676 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1083的记录已成功
2022-05-19 18:36:28,677 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,688 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:28,696 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:36:28,697 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,697 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,697 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:36:28,698 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,713 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:28,714 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:36:28,714 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,714 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,714 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:36:28,714 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,752 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:36:28,752 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:36:28,752 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,752 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,753 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1311]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1311}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:36:28,753 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,768 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:28,768 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1083]}
2022-05-19 18:36:28,768 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,768 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,769 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1083的记录
2022-05-19 18:36:28,769 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,777 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:28,777 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:36:28,778 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,778 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,778 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:36:28,779 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,787 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:28,787 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1311}
2022-05-19 18:36:28,787 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,788 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,804 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,804 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1311}, "name": "\u6c49EV"}}
2022-05-19 18:36:28,805 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,805 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,805 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1084
2022-05-19 18:36:28,806 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,813 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:28,814 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:36:28,814 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,815 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,815 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:36:28,815 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,825 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:28,825 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1311}
2022-05-19 18:36:28,825 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,826 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,838 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,839 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1311}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:36:28,839 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,839 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,840 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1085
2022-05-19 18:36:28,840 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,851 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:28,852 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1084, 1085]}
2022-05-19 18:36:28,852 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,852 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,852 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1084, 1085的记录
2022-05-19 18:36:28,852 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,863 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:28,864 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1311]}
2022-05-19 18:36:28,864 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,864 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,864 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1311的记录
2022-05-19 18:36:28,865 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,880 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:36:28,881 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1311, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:36:28,881 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,881 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,898 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:28,899 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:36:28,901 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:28,902 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,903 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1312
2022-05-19 18:36:28,904 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,922 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:28,924 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8323443065851'}
2022-05-19 18:36:28,925 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:28,927 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:28,928 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:28,928 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,095 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:36:29,096 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1771626837700'}
2022-05-19 18:36:29,096 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:29,097 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,097 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:36:29,097 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,116 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:36:29,117 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:36:29,117 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:29,118 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,118 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:36:29,118 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,171 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:36:29,171 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:36:29,172 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,172 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,172 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:36:29,173 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,183 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:29,184 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:36:29,184 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,184 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,185 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:36:29,185 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,196 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:29,201 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1312}
2022-05-19 18:36:29,201 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,201 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,220 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:29,221 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1312}, "name": "\u6c49EV"}}
2022-05-19 18:36:29,221 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,221 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,221 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1086
2022-05-19 18:36:29,221 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,232 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:29,233 INFO [root] [key.py (get:36] - 传的参数是：{'t': '7962959314074'}
2022-05-19 18:36:29,233 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:29,233 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,233 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:29,233 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,479 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:36:29,480 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1615262781698'}
2022-05-19 18:36:29,480 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:29,480 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,481 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:36:29,481 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,500 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:36:29,500 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:36:29,500 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:29,500 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,501 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:36:29,501 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,558 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:36:29,558 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:36:29,559 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,559 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,559 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:36:29,560 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,570 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:29,570 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:36:29,571 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,571 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,571 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:36:29,571 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,584 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:29,585 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1086}
2022-05-19 18:36:29,585 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,585 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,601 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:29,602 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1086}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:36:29,602 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,602 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,602 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：877
2022-05-19 18:36:29,603 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,616 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:36:29,616 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 877}
2022-05-19 18:36:29,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,617 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,617 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：877的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1086}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 877}
2022-05-19 18:36:29,617 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,633 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:36:29,633 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 877}
2022-05-19 18:36:29,633 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,634 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,634 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：877的记录已成功
2022-05-19 18:36:29,634 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,649 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:29,650 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:36:29,650 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,651 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,651 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:36:29,651 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,666 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:29,666 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:36:29,667 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,667 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,667 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:36:29,667 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,682 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:29,683 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:36:29,683 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,683 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,684 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:36:29,684 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,703 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:29,703 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:36:29,703 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,704 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,704 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:36:29,704 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,730 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:29,730 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:36:29,731 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,731 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,732 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:36:29,733 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,814 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:36:29,814 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:36:29,815 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,815 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,815 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:36:29,816 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,887 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:36:29,888 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:36:29,888 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,888 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,888 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1086]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1086}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:36:29,890 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,904 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:29,904 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [877]}
2022-05-19 18:36:29,904 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,905 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,905 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：877的记录
2022-05-19 18:36:29,905 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,916 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:29,916 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:36:29,916 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,917 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,917 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:36:29,917 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,928 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:29,928 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1086}
2022-05-19 18:36:29,928 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,928 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,942 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:29,942 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1086}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:36:29,943 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,943 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,943 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：878
2022-05-19 18:36:29,943 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,952 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:29,952 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:36:29,952 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,952 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,953 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:36:29,953 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,963 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:36:29,964 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1086}
2022-05-19 18:36:29,964 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,964 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,977 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:29,978 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1086}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:36:29,978 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,979 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,979 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：879
2022-05-19 18:36:29,979 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,991 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:29,991 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [878, 879]}
2022-05-19 18:36:29,993 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:29,993 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:29,994 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：878, 879的记录
2022-05-19 18:36:29,994 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,005 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:30,007 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1086]}
2022-05-19 18:36:30,007 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,008 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,009 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1086的记录
2022-05-19 18:36:30,009 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,026 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:30,028 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1312]}
2022-05-19 18:36:30,029 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,030 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,031 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1312的记录
2022-05-19 18:36:30,032 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,064 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:36:30,065 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8537397488213'}
2022-05-19 18:36:30,066 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:30,067 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,069 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:36:30,071 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,222 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:36:30,224 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4426925452252'}
2022-05-19 18:36:30,225 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:30,226 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,227 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:36:30,228 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,250 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:36:30,251 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:36:30,252 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:36:30,253 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,254 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:36:30,256 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,312 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:36:30,313 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:36:30,315 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,317 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,319 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:36:30,321 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,334 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:30,335 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:36:30,335 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,336 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,336 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:36:30,337 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,353 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:30,354 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:36:30,354 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,354 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,355 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：799
2022-05-19 18:36:30,355 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,367 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:36:30,367 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 799}
2022-05-19 18:36:30,367 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,368 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,368 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：799的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 799, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:36:30,368 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,382 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:36:30,382 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 799}
2022-05-19 18:36:30,382 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,382 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,384 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：799的记录已成功
2022-05-19 18:36:30,384 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,398 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:30,398 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:36:30,398 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,399 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,399 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:36:30,399 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,413 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:30,414 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:36:30,414 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,415 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,415 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:36:30,415 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,430 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:30,430 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:36:30,431 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,431 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,431 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:36:30,432 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,445 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:36:30,445 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:36:30,446 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,446 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,446 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:36:30,447 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,500 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:36:30,501 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:36:30,502 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,503 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,505 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:36:30,508 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,524 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:36:30,525 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:36:30,525 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,526 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,526 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:36:30,527 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,547 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:30,547 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [799]}
2022-05-19 18:36:30,547 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,548 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,548 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：799的记录
2022-05-19 18:36:30,548 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,558 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:30,558 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:36:30,559 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,559 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,559 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:36:30,559 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,573 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:30,574 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:36:30,574 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,574 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,575 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：800
2022-05-19 18:36:30,575 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,585 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:36:30,585 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:36:30,586 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,586 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,586 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:36:30,586 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,602 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:36:30,602 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:36:30,603 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,603 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,603 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：801
2022-05-19 18:36:30,603 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,617 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:36:30,617 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [800, 801]}
2022-05-19 18:36:30,617 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:36:30,618 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:36:30,618 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：800, 801的记录
2022-05-19 18:36:30,618 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:03,971 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:41:03,971 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:41:03,971 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:03,972 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:03,972 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:41:03,972 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,014 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:41:04,015 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "VHDF"}
2022-05-19 18:41:04,015 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,015 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,015 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：b3c73225854a4226a5ba2943c82845bc
2022-05-19 18:41:04,016 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,026 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:04,027 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3249542497234'}
2022-05-19 18:41:04,027 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,027 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,028 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:04,028 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,043 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:04,043 INFO [root] [key.py (get:36] - 传的参数是：{'t': '8292641655699'}
2022-05-19 18:41:04,044 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,044 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,044 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:04,044 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,210 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:04,210 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '7741016791561'}
2022-05-19 18:41:04,211 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,212 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,212 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:04,213 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,233 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:04,233 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:41:04,233 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,233 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,234 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:41:04,234 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,291 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:04,291 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:41:04,292 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,292 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,293 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:41:04,293 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,303 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:04,304 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:41:04,304 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,305 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,325 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,325 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:41:04,326 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,326 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,327 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1313
2022-05-19 18:41:04,327 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,341 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:04,341 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1313}
2022-05-19 18:41:04,341 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,342 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,342 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1313的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1313, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:41:04,342 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,351 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:04,352 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1313, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:41:04,352 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,353 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,368 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:04,369 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1313}
2022-05-19 18:41:04,369 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,369 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,370 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1313的记录已成功
2022-05-19 18:41:04,370 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,390 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:04,391 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:41:04,391 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,392 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,392 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:41:04,393 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,408 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:04,409 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1313]}
2022-05-19 18:41:04,409 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,409 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,410 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1313的记录
2022-05-19 18:41:04,410 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,420 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:04,420 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1313, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:41:04,421 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,421 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,434 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,435 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:41:04,435 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,435 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,436 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1314
2022-05-19 18:41:04,436 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,444 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:04,445 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1314, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:41:04,445 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,445 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,457 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,457 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:41:04,457 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,457 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,458 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1315
2022-05-19 18:41:04,458 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,469 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:04,469 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1314, 1315]}
2022-05-19 18:41:04,470 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,470 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,470 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1314, 1315的记录
2022-05-19 18:41:04,470 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,482 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:04,483 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:41:04,483 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,483 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,500 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,500 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:41:04,501 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,501 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,501 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1316
2022-05-19 18:41:04,501 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,510 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:04,510 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9832201019214'}
2022-05-19 18:41:04,511 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,511 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,511 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:04,511 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,637 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:04,637 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '5978351522430'}
2022-05-19 18:41:04,637 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,637 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,638 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:04,638 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,651 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:04,651 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:41:04,651 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:04,651 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,651 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:41:04,652 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,701 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:04,702 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:41:04,703 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,703 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,704 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:41:04,704 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,717 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:04,718 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:41:04,719 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,719 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,720 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:41:04,721 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,736 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:04,736 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1316}
2022-05-19 18:41:04,737 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,737 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,758 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,758 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1316}, "name": "\u6c49EV"}}
2022-05-19 18:41:04,759 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,760 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,761 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1087
2022-05-19 18:41:04,761 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,777 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:04,778 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1087}
2022-05-19 18:41:04,778 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,779 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,780 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1087的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1316}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1087, 'nationalStandard': 255}
2022-05-19 18:41:04,781 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,800 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:04,800 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1087}
2022-05-19 18:41:04,801 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,801 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,802 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1087的记录已成功
2022-05-19 18:41:04,803 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,821 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:04,822 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:41:04,823 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,824 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,825 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:41:04,825 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,846 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:04,847 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:41:04,848 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,848 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,850 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:41:04,850 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,882 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:04,882 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:41:04,883 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,884 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,885 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1316]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1316}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:41:04,886 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,908 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:04,909 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1087]}
2022-05-19 18:41:04,910 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,910 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,911 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1087的记录
2022-05-19 18:41:04,912 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,923 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:04,924 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:41:04,925 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,925 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,926 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:41:04,927 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,943 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:04,943 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1316}
2022-05-19 18:41:04,944 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,945 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,962 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:04,963 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1316}, "name": "\u6c49EV"}}
2022-05-19 18:41:04,965 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,965 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,965 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1088
2022-05-19 18:41:04,966 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,980 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:04,981 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:41:04,981 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,982 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,983 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:41:04,983 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:04,997 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:04,998 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1316}
2022-05-19 18:41:04,998 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:04,998 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,015 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:05,016 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1316}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:41:05,017 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,017 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,018 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1089
2022-05-19 18:41:05,018 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,031 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:05,032 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1088, 1089]}
2022-05-19 18:41:05,033 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,033 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,034 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1088, 1089的记录
2022-05-19 18:41:05,034 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,049 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:05,049 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1316]}
2022-05-19 18:41:05,050 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,051 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,051 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1316的记录
2022-05-19 18:41:05,052 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,069 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:41:05,070 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1316, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:41:05,070 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,071 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,086 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:05,086 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:41:05,087 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,088 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,088 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1317
2022-05-19 18:41:05,089 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,102 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:05,103 INFO [root] [key.py (get:36] - 传的参数是：{'t': '2872276506204'}
2022-05-19 18:41:05,103 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,104 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,105 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:05,106 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,259 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:05,260 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4618964640107'}
2022-05-19 18:41:05,261 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,261 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,262 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:05,263 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,281 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:05,282 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:41:05,282 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,282 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,283 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:41:05,283 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,337 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:05,337 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:41:05,338 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,338 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,339 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:41:05,340 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,351 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:05,352 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:41:05,352 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,353 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,353 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:41:05,353 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,365 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:05,366 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1317}
2022-05-19 18:41:05,366 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,366 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,387 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:05,388 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1317}, "name": "\u6c49EV"}}
2022-05-19 18:41:05,390 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,391 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,391 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1090
2022-05-19 18:41:05,392 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,406 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:05,406 INFO [root] [key.py (get:36] - 传的参数是：{'t': '4161419725348'}
2022-05-19 18:41:05,406 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,407 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,407 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:05,408 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,574 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:05,575 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '0401296654226'}
2022-05-19 18:41:05,577 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,578 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,579 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:05,580 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,604 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:05,604 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:41:05,605 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:05,605 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,606 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:41:05,607 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,659 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:05,660 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:41:05,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,662 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,663 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:41:05,664 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,677 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:05,678 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:41:05,679 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,679 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,680 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:41:05,681 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,696 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:05,696 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1090}
2022-05-19 18:41:05,697 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,698 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,719 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:05,720 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1090}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:41:05,720 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,721 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,721 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：880
2022-05-19 18:41:05,721 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,734 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:05,735 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 880}
2022-05-19 18:41:05,735 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,736 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,736 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：880的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1090}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 880}
2022-05-19 18:41:05,737 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,753 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:05,754 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 880}
2022-05-19 18:41:05,754 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,755 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,755 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：880的记录已成功
2022-05-19 18:41:05,755 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,774 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:05,775 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:41:05,775 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,776 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,776 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:41:05,777 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,792 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:05,793 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:41:05,793 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,793 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,794 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:41:05,794 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,810 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:05,811 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:41:05,811 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,812 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,812 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:41:05,812 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,828 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:05,829 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:41:05,829 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,830 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,830 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:41:05,830 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,845 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:05,846 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:41:05,846 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,847 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,847 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:41:05,847 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,916 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:05,917 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:41:05,917 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,918 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,919 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:41:05,920 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,978 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:05,979 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:41:05,981 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:05,982 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:05,984 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1090]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1090}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:41:05,989 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,010 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,011 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [880]}
2022-05-19 18:41:06,012 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,013 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,015 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：880的记录
2022-05-19 18:41:06,016 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,031 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:06,032 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:41:06,032 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,033 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,034 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:41:06,034 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,049 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:06,050 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1090}
2022-05-19 18:41:06,050 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,051 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,065 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:06,066 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1090}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:41:06,067 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,067 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,068 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：881
2022-05-19 18:41:06,068 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,078 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:06,079 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:41:06,079 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,080 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,080 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:41:06,081 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,093 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:41:06,094 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1090}
2022-05-19 18:41:06,094 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,095 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,108 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:06,109 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1090}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:41:06,110 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,110 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,110 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：882
2022-05-19 18:41:06,111 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,123 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,123 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [881, 882]}
2022-05-19 18:41:06,124 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,124 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,125 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：881, 882的记录
2022-05-19 18:41:06,125 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,140 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,141 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1090]}
2022-05-19 18:41:06,141 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,142 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,142 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1090的记录
2022-05-19 18:41:06,143 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,156 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,157 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1317]}
2022-05-19 18:41:06,157 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,158 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,158 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1317的记录
2022-05-19 18:41:06,159 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,175 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:06,176 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0785448477120'}
2022-05-19 18:41:06,176 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,177 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,177 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:06,178 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,281 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:06,282 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '6289051459366'}
2022-05-19 18:41:06,283 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,285 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,286 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:06,287 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,308 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:06,309 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:41:06,310 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,311 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,311 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:41:06,312 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,347 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:06,347 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:41:06,348 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,348 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,349 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:41:06,349 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,356 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:06,356 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:41:06,357 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,357 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,358 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:41:06,358 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,369 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:06,370 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:41:06,370 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,370 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,370 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：802
2022-05-19 18:41:06,371 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,381 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:06,382 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 802}
2022-05-19 18:41:06,382 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,382 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,383 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：802的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 802, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:41:06,383 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,396 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:06,396 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 802}
2022-05-19 18:41:06,396 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,396 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,396 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：802的记录已成功
2022-05-19 18:41:06,397 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,410 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:06,410 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:41:06,411 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,411 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,411 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:41:06,412 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,423 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:06,424 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:41:06,424 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,424 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,424 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:41:06,425 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,436 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:06,436 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:41:06,436 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,437 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,437 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:41:06,437 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,453 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:06,454 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:41:06,454 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,454 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,455 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:41:06,455 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,516 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:06,518 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:41:06,519 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,520 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,523 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:41:06,527 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,547 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:06,548 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:41:06,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,550 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,551 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:41:06,553 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,574 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,575 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [802]}
2022-05-19 18:41:06,576 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,576 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,577 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：802的记录
2022-05-19 18:41:06,577 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,591 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:06,592 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:41:06,593 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,593 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,594 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:41:06,595 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,614 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:06,615 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:41:06,616 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,617 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,618 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：803
2022-05-19 18:41:06,618 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,633 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:06,634 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:41:06,635 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,636 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,637 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:41:06,637 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,664 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:06,664 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:41:06,665 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,665 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,666 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：804
2022-05-19 18:41:06,667 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,684 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:41:06,685 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [803, 804]}
2022-05-19 18:41:06,686 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:06,686 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,687 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：803, 804的记录
2022-05-19 18:41:06,687 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,710 INFO [root] [key.py (get:35] - 正在测试本次脚本的第98个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:06,711 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0741868509497'}
2022-05-19 18:41:06,711 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,711 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,712 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:06,712 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,884 INFO [root] [key.py (get:35] - 正在测试本次脚本的第99个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:06,886 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '7857054419404'}
2022-05-19 18:41:06,887 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,888 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,890 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:06,891 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,916 INFO [root] [key.py (get:35] - 正在测试本次脚本的第100个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:06,918 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '29'}
2022-05-19 18:41:06,919 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:06,920 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:06,922 INFO [root] [key.py (load:163] - 呈现客户管理-个人客户模型
2022-05-19 18:41:06,923 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,002 INFO [root] [key.py (post:18] - 正在测试本次脚本的第101个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:07,003 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-19 18:41:07,005 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,006 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,007 INFO [root] [key.py (load_views:93] - 渲染模型customer_info的视图views
2022-05-19 18:41:07,007 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,023 INFO [root] [key.py (post:18] - 正在测试本次脚本的第102个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:07,023 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-05-19 18:41:07,024 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,025 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,025 INFO [root] [key.py (default_get:100] - 模型：customer_info的默认填充字段信息为：{'code': '6933003596799672434', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-05-19 18:41:07,026 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,050 INFO [root] [key.py (post:18] - 正在测试本次脚本的第103个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:07,051 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"code": "6933003596799672434", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u845b\u6d01", "phone": 17023923788}}
2022-05-19 18:41:07,051 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,051 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,051 INFO [root] [key.py (create:50] - 新建：创建模型：customer_info新记录，id为：134
2022-05-19 18:41:07,052 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,077 INFO [root] [key.py (post:18] - 正在测试本次脚本的第104个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:07,078 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 134}
2022-05-19 18:41:07,078 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,078 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,078 INFO [root] [key.py (read:57] - 查看：查看模型customer_info中id为：134的内容： {'code': '6933003596799672434', 'billingIds': [], 'stationIds': [], 'displayName': '葛洁', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 134, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 0, 'accountId': {'code': '6933003596879364211', 'displayName': '6933003596879364211', 'id': 133, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '17023923788', 'name': '葛洁', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-19 18:41:07,079 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,106 INFO [root] [key.py (post:18] - 正在测试本次脚本的第105个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:07,108 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"name": "\u8881\u79cb\u91cd", "phone": 15540110179}, "id": 134}
2022-05-19 18:41:07,108 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,108 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,109 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_info中id为：134的记录已成功
2022-05-19 18:41:07,109 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,141 INFO [root] [key.py (post:18] - 正在测试本次脚本的第106个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:07,141 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u8881\u79cb\u91cd"]]}
2022-05-19 18:41:07,142 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,142 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,143 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '袁秋重'符合的记录数是：1条
2022-05-19 18:41:07,143 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,169 INFO [root] [key.py (post:18] - 正在测试本次脚本的第107个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:07,170 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 15540110179]]}
2022-05-19 18:41:07,170 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,170 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,171 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 15540110179符合的记录数是：1条
2022-05-19 18:41:07,171 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,188 INFO [root] [key.py (post:18] - 正在测试本次脚本的第108个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:07,188 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-05-19 18:41:07,188 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,189 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,190 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 7, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 97, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 9, 'sex': 1}], 'length': 3}
2022-05-19 18:41:07,191 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,207 INFO [root] [key.py (post:18] - 正在测试本次脚本的第109个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:07,208 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-19 18:41:07,209 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,209 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,210 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 111, 'status': 0}], 'length': 2}
2022-05-19 18:41:07,210 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,225 INFO [root] [key.py (post:18] - 正在测试本次脚本的第110个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,225 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[134], {}]}
2022-05-19 18:41:07,226 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,226 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,226 INFO [root] [key.py (call_method:130] - 冻结：已成功冻结模型customer_info中id为：134的记录
2022-05-19 18:41:07,226 INFO [root] [key.py (call_method:131] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,238 INFO [root] [key.py (post:18] - 正在测试本次脚本的第111个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,238 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[134], {}]}
2022-05-19 18:41:07,238 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,239 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,239 INFO [root] [key.py (call_method:127] - 解冻：已成功解冻模型customer_info中id为：134的记录
2022-05-19 18:41:07,240 INFO [root] [key.py (call_method:128] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,251 INFO [root] [key.py (post:18] - 正在测试本次脚本的第112个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,251 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[134], {}]}
2022-05-19 18:41:07,252 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,252 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,252 INFO [root] [key.py (call_method:136] - 打开多充：已成功开启模型customer_info中id为：134的多充功能
2022-05-19 18:41:07,252 INFO [root] [key.py (call_method:137] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,264 INFO [root] [key.py (post:18] - 正在测试本次脚本的第113个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,265 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[134], {}]}
2022-05-19 18:41:07,265 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,265 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,265 INFO [root] [key.py (call_method:133] - 关闭多充：已成功关闭模型customer_info中id为：134的多充功能
2022-05-19 18:41:07,266 INFO [root] [key.py (call_method:134] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,278 INFO [root] [key.py (get:35] - 正在测试本次脚本的第114个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:41:07,279 INFO [root] [key.py (get:36] - 传的参数是：{'t': '6918191887762'}
2022-05-19 18:41:07,279 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:07,279 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,279 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:41:07,279 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,412 INFO [root] [key.py (get:35] - 正在测试本次脚本的第115个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:41:07,412 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '6297728914292'}
2022-05-19 18:41:07,413 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:07,413 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,413 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:41:07,414 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,431 INFO [root] [key.py (get:35] - 正在测试本次脚本的第116个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:41:07,432 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '30'}
2022-05-19 18:41:07,433 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:41:07,433 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,433 INFO [root] [key.py (load:163] - 呈现客户管理-公司客户模型
2022-05-19 18:41:07,434 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,486 INFO [root] [key.py (post:18] - 正在测试本次脚本的第117个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:41:07,487 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-19 18:41:07,487 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,488 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,489 INFO [root] [key.py (load_views:93] - 渲染模型customer_info的视图views
2022-05-19 18:41:07,490 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,498 INFO [root] [key.py (post:18] - 正在测试本次脚本的第118个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:41:07,499 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-05-19 18:41:07,499 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,500 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,500 INFO [root] [key.py (default_get:100] - 模型：customer_info的默认填充字段信息为：{'code': '6933003598808744079', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-05-19 18:41:07,501 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,518 INFO [root] [key.py (post:18] - 正在测试本次脚本的第119个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:41:07,519 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"code": "6933003598808744079", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u502a\u5149\u5883", "phone": 19013171564}}
2022-05-19 18:41:07,521 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,522 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,524 INFO [root] [key.py (create:50] - 新建：创建模型：customer_info新记录，id为：135
2022-05-19 18:41:07,525 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,549 INFO [root] [key.py (post:18] - 正在测试本次脚本的第120个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:41:07,549 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 135}
2022-05-19 18:41:07,550 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,551 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,551 INFO [root] [key.py (read:57] - 查看：查看模型customer_info中id为：135的内容： {'code': '6933003598808744079', 'billingIds': [], 'stationIds': [], 'displayName': '倪光境', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 135, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6933003598850687120', 'displayName': '6933003598850687120', 'id': 134, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '19013171564', 'name': '倪光境', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-19 18:41:07,552 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,572 INFO [root] [key.py (post:18] - 正在测试本次脚本的第121个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:41:07,573 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "map": {"name": "\u94b1\u51ac\u66ae", "phone": 13240186628}, "id": 135}
2022-05-19 18:41:07,574 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,574 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,575 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_info中id为：135的记录已成功
2022-05-19 18:41:07,575 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,596 INFO [root] [key.py (post:18] - 正在测试本次脚本的第122个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:07,597 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u94b1\u51ac\u66ae"]]}
2022-05-19 18:41:07,598 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,598 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,599 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '钱冬暮'符合的记录数是：1条
2022-05-19 18:41:07,600 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,623 INFO [root] [key.py (post:18] - 正在测试本次脚本的第123个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:41:07,623 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 13240186628]]}
2022-05-19 18:41:07,624 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,625 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,626 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 13240186628符合的记录数是：1条
2022-05-19 18:41:07,626 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,640 INFO [root] [key.py (post:18] - 正在测试本次脚本的第124个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:41:07,640 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-19 18:41:07,641 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,642 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,643 INFO [root] [key.py (read_group:117] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 112, 'status': 0}], 'length': 2}
2022-05-19 18:41:07,644 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,659 INFO [root] [key.py (post:18] - 正在测试本次脚本的第125个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,660 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[135], {}]}
2022-05-19 18:41:07,661 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,661 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,661 INFO [root] [key.py (call_method:130] - 冻结：已成功冻结模型customer_info中id为：135的记录
2022-05-19 18:41:07,661 INFO [root] [key.py (call_method:131] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,680 INFO [root] [key.py (post:18] - 正在测试本次脚本的第126个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,681 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[135], {}]}
2022-05-19 18:41:07,681 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,682 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,683 INFO [root] [key.py (call_method:127] - 解冻：已成功解冻模型customer_info中id为：135的记录
2022-05-19 18:41:07,683 INFO [root] [key.py (call_method:128] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,697 INFO [root] [key.py (post:18] - 正在测试本次脚本的第127个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,697 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[135], {}]}
2022-05-19 18:41:07,698 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,698 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,699 INFO [root] [key.py (call_method:136] - 打开多充：已成功开启模型customer_info中id为：135的多充功能
2022-05-19 18:41:07,699 INFO [root] [key.py (call_method:137] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,715 INFO [root] [key.py (post:18] - 正在测试本次脚本的第128个接口: http://192.168.1.61/api/call_method,请求方法为：post
2022-05-19 18:41:07,715 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[135], {}]}
2022-05-19 18:41:07,716 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:41:07,716 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:41:07,717 INFO [root] [key.py (call_method:133] - 关闭多充：已成功关闭模型customer_info中id为：135的多充功能
2022-05-19 18:41:07,718 INFO [root] [key.py (call_method:134] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,739 INFO [root] [key.py (get:35] - 正在测试本次脚本的第1个接口: http://192.168.1.61/api/validate/image,请求方法为：get
2022-05-19 18:43:38,739 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0.029693380014191195'}
2022-05-19 18:43:38,739 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:38,740 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,740 INFO [root] [key.py (get_image_code:144] - 获取验证码成功
2022-05-19 18:43:38,740 INFO [root] [key.py (get_image_code:145] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,780 INFO [root] [key.py (post:18] - 正在测试本次脚本的第2个接口: http://192.168.1.61/api/login,请求方法为：post
2022-05-19 18:43:38,781 INFO [root] [key.py (post:19] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "MMYQ"}
2022-05-19 18:43:38,781 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:38,781 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,781 INFO [root] [key.py (login:151] - 登录成功，此次登录Authorization为：27421c3bfbed412480fd0662b6e7d6b7
2022-05-19 18:43:38,782 INFO [root] [key.py (login:152] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,794 INFO [root] [key.py (get:35] - 正在测试本次脚本的第3个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:38,795 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3566515372620'}
2022-05-19 18:43:38,795 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:38,795 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,795 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:38,796 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,811 INFO [root] [key.py (get:35] - 正在测试本次脚本的第4个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:38,811 INFO [root] [key.py (get:36] - 传的参数是：{'t': '9666402484585'}
2022-05-19 18:43:38,811 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:38,812 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,812 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:38,812 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,948 INFO [root] [key.py (get:35] - 正在测试本次脚本的第5个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:43:38,950 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '2383804911344'}
2022-05-19 18:43:38,950 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:38,951 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,952 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:43:38,953 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,975 INFO [root] [key.py (get:35] - 正在测试本次脚本的第6个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:43:38,976 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '34'}
2022-05-19 18:43:38,978 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:38,979 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:38,980 INFO [root] [key.py (load:163] - 呈现客户管理-车辆品牌模型
2022-05-19 18:43:38,981 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,053 INFO [root] [key.py (post:18] - 正在测试本次脚本的第7个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:43:39,054 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:43:39,056 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,057 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,058 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_brand的视图views
2022-05-19 18:43:39,059 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,074 INFO [root] [key.py (post:18] - 正在测试本次脚本的第8个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,075 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,076 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,077 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,094 INFO [root] [key.py (post:18] - 正在测试本次脚本的第9个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,095 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:43:39,095 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,095 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,095 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1318
2022-05-19 18:43:39,096 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,107 INFO [root] [key.py (post:18] - 正在测试本次脚本的第10个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:43:39,107 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 1318}
2022-05-19 18:43:39,108 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,108 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,108 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_brand中id为：1318的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 1318, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-19 18:43:39,108 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,117 INFO [root] [key.py (post:18] - 正在测试本次脚本的第11个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,117 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1318, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,118 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,118 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,136 INFO [root] [key.py (post:18] - 正在测试本次脚本的第12个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:43:39,136 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 1318}
2022-05-19 18:43:39,137 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,137 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,137 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_brand中id为：1318的记录已成功
2022-05-19 18:43:39,137 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,150 INFO [root] [key.py (post:18] - 正在测试本次脚本的第13个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:39,150 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-19 18:43:39,150 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,150 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,151 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-19 18:43:39,151 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,165 INFO [root] [key.py (post:18] - 正在测试本次脚本的第14个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:39,166 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1318]}
2022-05-19 18:43:39,166 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,166 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,166 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1318的记录
2022-05-19 18:43:39,166 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,175 INFO [root] [key.py (post:18] - 正在测试本次脚本的第15个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,176 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1318, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,176 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,176 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,190 INFO [root] [key.py (post:18] - 正在测试本次脚本的第16个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,190 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:43:39,190 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,190 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,191 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1319
2022-05-19 18:43:39,191 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,201 INFO [root] [key.py (post:18] - 正在测试本次脚本的第17个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,201 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1319, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,201 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,201 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,215 INFO [root] [key.py (post:18] - 正在测试本次脚本的第18个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,216 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-19 18:43:39,216 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,216 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,216 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1320
2022-05-19 18:43:39,216 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,229 INFO [root] [key.py (post:18] - 正在测试本次脚本的第19个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:39,230 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1319, 1320]}
2022-05-19 18:43:39,230 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,230 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,230 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_brand中id为：1319, 1320的记录
2022-05-19 18:43:39,230 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,243 INFO [root] [key.py (post:18] - 正在测试本次脚本的第20个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,244 INFO [root] [key.py (post:19] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,244 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,244 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,257 INFO [root] [key.py (post:18] - 正在测试本次脚本的第21个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,258 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:43:39,258 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,258 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,258 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1321
2022-05-19 18:43:39,259 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,271 INFO [root] [key.py (get:35] - 正在测试本次脚本的第22个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:39,271 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5268158001147'}
2022-05-19 18:43:39,272 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:39,272 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,272 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:39,272 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,412 INFO [root] [key.py (get:35] - 正在测试本次脚本的第23个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:43:39,413 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '8571889225920'}
2022-05-19 18:43:39,413 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:39,413 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,414 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:43:39,414 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,428 INFO [root] [key.py (get:35] - 正在测试本次脚本的第24个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:43:39,429 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:43:39,430 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:39,430 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,430 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:43:39,431 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,494 INFO [root] [key.py (post:18] - 正在测试本次脚本的第25个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:43:39,495 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:43:39,495 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,496 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,496 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:43:39,497 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,520 INFO [root] [key.py (post:18] - 正在测试本次脚本的第26个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:39,521 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:43:39,522 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,522 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,523 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:43:39,524 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,537 INFO [root] [key.py (post:18] - 正在测试本次脚本的第27个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:39,538 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1321}
2022-05-19 18:43:39,538 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,539 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,556 INFO [root] [key.py (post:18] - 正在测试本次脚本的第28个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,557 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1321}, "name": "\u6c49EV"}}
2022-05-19 18:43:39,558 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,558 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,558 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1091
2022-05-19 18:43:39,559 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,581 INFO [root] [key.py (post:18] - 正在测试本次脚本的第29个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:43:39,582 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 1091}
2022-05-19 18:43:39,583 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,583 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,584 INFO [root] [key.py (read:57] - 查看：查看模型customer_car_model中id为：1091的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1321}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 1091, 'nationalStandard': 255}
2022-05-19 18:43:39,585 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,602 INFO [root] [key.py (post:18] - 正在测试本次脚本的第30个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:43:39,603 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 1091}
2022-05-19 18:43:39,603 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,604 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,605 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car_model中id为：1091的记录已成功
2022-05-19 18:43:39,605 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,621 INFO [root] [key.py (post:18] - 正在测试本次脚本的第31个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:39,622 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-19 18:43:39,623 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,624 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,624 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-19 18:43:39,625 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,643 INFO [root] [key.py (post:18] - 正在测试本次脚本的第32个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:39,643 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-19 18:43:39,644 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,644 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,646 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：34条
2022-05-19 18:43:39,646 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,681 INFO [root] [key.py (post:18] - 正在测试本次脚本的第33个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:43:39,681 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-19 18:43:39,682 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,683 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,683 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 1321]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 1321}}, {'_domain': [['carBrandId', '=', 1]], '_total': 2, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}], 'length': 5}
2022-05-19 18:43:39,685 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,702 INFO [root] [key.py (post:18] - 正在测试本次脚本的第34个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:39,703 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1091]}
2022-05-19 18:43:39,704 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,704 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,705 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1091的记录
2022-05-19 18:43:39,706 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,719 INFO [root] [key.py (post:18] - 正在测试本次脚本的第35个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:39,720 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:43:39,721 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,721 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,722 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:43:39,724 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,737 INFO [root] [key.py (post:18] - 正在测试本次脚本的第36个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:39,738 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1321}
2022-05-19 18:43:39,739 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,740 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,759 INFO [root] [key.py (post:18] - 正在测试本次脚本的第37个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,760 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1321}, "name": "\u6c49EV"}}
2022-05-19 18:43:39,760 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,761 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,761 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1092
2022-05-19 18:43:39,763 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,775 INFO [root] [key.py (post:18] - 正在测试本次脚本的第38个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:39,776 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:43:39,776 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,777 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,777 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:43:39,778 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,793 INFO [root] [key.py (post:18] - 正在测试本次脚本的第39个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:39,793 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1321}
2022-05-19 18:43:39,794 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,795 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,814 INFO [root] [key.py (post:18] - 正在测试本次脚本的第40个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,814 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1321}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-19 18:43:39,815 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,816 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,817 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1093
2022-05-19 18:43:39,817 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,833 INFO [root] [key.py (post:18] - 正在测试本次脚本的第41个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:39,834 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1092, 1093]}
2022-05-19 18:43:39,835 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,835 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,836 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car_model中id为：1092, 1093的记录
2022-05-19 18:43:39,837 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,852 INFO [root] [key.py (post:18] - 正在测试本次脚本的第42个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:39,853 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1321]}
2022-05-19 18:43:39,854 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,854 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,855 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1321的记录
2022-05-19 18:43:39,855 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,872 INFO [root] [key.py (post:18] - 正在测试本次脚本的第43个接口: http://192.168.1.61/api/onchange,请求方法为：post
2022-05-19 18:43:39,873 INFO [root] [key.py (post:19] - 传的参数是：{"id": 1321, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-19 18:43:39,873 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,873 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,888 INFO [root] [key.py (post:18] - 正在测试本次脚本的第44个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:39,888 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-19 18:43:39,889 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:39,889 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,890 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_brand新记录，id为：1322
2022-05-19 18:43:39,890 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,901 INFO [root] [key.py (get:35] - 正在测试本次脚本的第45个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:39,901 INFO [root] [key.py (get:36] - 传的参数是：{'t': '5363115626715'}
2022-05-19 18:43:39,901 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:39,901 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:39,902 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:39,902 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,142 INFO [root] [key.py (get:35] - 正在测试本次脚本的第46个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:43:40,144 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '1532658606199'}
2022-05-19 18:43:40,145 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:40,146 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,147 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:43:40,148 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,170 INFO [root] [key.py (get:35] - 正在测试本次脚本的第47个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:43:40,171 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '33'}
2022-05-19 18:43:40,172 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:40,173 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,174 INFO [root] [key.py (load:163] - 呈现客户管理-车型模型
2022-05-19 18:43:40,175 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,232 INFO [root] [key.py (post:18] - 正在测试本次脚本的第48个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:43:40,233 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:43:40,235 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,236 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,238 INFO [root] [key.py (load_views:93] - 渲染模型customer_car_model的视图views
2022-05-19 18:43:40,240 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,257 INFO [root] [key.py (post:18] - 正在测试本次脚本的第49个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:40,258 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-19 18:43:40,260 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,261 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,262 INFO [root] [key.py (default_get:100] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-19 18:43:40,263 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,281 INFO [root] [key.py (post:18] - 正在测试本次脚本的第50个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:40,282 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "id": 1322}
2022-05-19 18:43:40,283 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,283 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,301 INFO [root] [key.py (post:18] - 正在测试本次脚本的第51个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:40,301 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 1322}, "name": "\u6c49EV"}}
2022-05-19 18:43:40,302 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,302 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,303 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car_model新记录，id为：1094
2022-05-19 18:43:40,303 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,314 INFO [root] [key.py (get:35] - 正在测试本次脚本的第52个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:40,315 INFO [root] [key.py (get:36] - 传的参数是：{'t': '0834498674567'}
2022-05-19 18:43:40,315 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:40,315 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,315 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:40,316 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,464 INFO [root] [key.py (get:35] - 正在测试本次脚本的第53个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:43:40,466 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '4135732539440'}
2022-05-19 18:43:40,467 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:40,468 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,469 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:43:40,470 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,495 INFO [root] [key.py (get:35] - 正在测试本次脚本的第54个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:43:40,496 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '32'}
2022-05-19 18:43:40,525 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:40,526 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,526 INFO [root] [key.py (load:163] - 呈现客户管理-车辆模型
2022-05-19 18:43:40,527 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,584 INFO [root] [key.py (post:18] - 正在测试本次脚本的第55个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:43:40,584 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:43:40,585 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,585 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,585 INFO [root] [key.py (load_views:93] - 渲染模型customer_car的视图views
2022-05-19 18:43:40,586 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,594 INFO [root] [key.py (post:18] - 正在测试本次脚本的第56个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:40,594 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:43:40,594 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,594 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,595 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:43:40,595 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,605 INFO [root] [key.py (post:18] - 正在测试本次脚本的第57个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:40,605 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1094}
2022-05-19 18:43:40,605 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,606 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,622 INFO [root] [key.py (post:18] - 正在测试本次脚本的第58个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:40,622 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1094}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:43:40,623 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,623 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,624 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：883
2022-05-19 18:43:40,624 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,635 INFO [root] [key.py (post:18] - 正在测试本次脚本的第59个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:43:40,635 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 883}
2022-05-19 18:43:40,635 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,636 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,636 INFO [root] [key.py (read:57] - 查看：查看模型customer_car中id为：883的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1094}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 883}
2022-05-19 18:43:40,636 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,649 INFO [root] [key.py (post:18] - 正在测试本次脚本的第60个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:43:40,650 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 883}
2022-05-19 18:43:40,650 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,650 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,650 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_car中id为：883的记录已成功
2022-05-19 18:43:40,650 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,663 INFO [root] [key.py (post:18] - 正在测试本次脚本的第61个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:40,664 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:43:40,664 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,664 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,665 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:43:40,665 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,678 INFO [root] [key.py (post:18] - 正在测试本次脚本的第62个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:40,679 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-19 18:43:40,679 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,680 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,680 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-19 18:43:40,680 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,694 INFO [root] [key.py (post:18] - 正在测试本次脚本的第63个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:40,694 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-19 18:43:40,694 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,695 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,695 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-19 18:43:40,695 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,708 INFO [root] [key.py (post:18] - 正在测试本次脚本的第64个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:40,709 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-19 18:43:40,709 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,710 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,710 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-19 18:43:40,710 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,723 INFO [root] [key.py (post:18] - 正在测试本次脚本的第65个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:40,723 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-19 18:43:40,724 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,724 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,724 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-19 18:43:40,724 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,774 INFO [root] [key.py (post:18] - 正在测试本次脚本的第66个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:43:40,774 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-19 18:43:40,775 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,776 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,777 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 130]], '_total': 1, 'customerId': {'displayName': 'WX89035308', 'name': 'WX89035308', 'id': 130}}, {'_domain': [['customerId', '=', 50]], '_total': 1, 'customerId': {'displayName': '恺容', 'name': '恺容', 'id': 50}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 7, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 11, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 17}
2022-05-19 18:43:40,779 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,839 INFO [root] [key.py (post:18] - 正在测试本次脚本的第67个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:43:40,839 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-19 18:43:40,840 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,841 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,841 INFO [root] [key.py (read_group:117] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 1094]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 1094}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 3}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 27}, {'_domain': [['carModelId', '=', 902]], 'carModelId': {'displayName': '奥迪A4L', 'name': '奥迪A4L', 'id': 902}, '_total': 2}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': '奥迪A3', 'name': '奥迪A3', 'id': 1}, '_total': 5}], 'length': 20}
2022-05-19 18:43:40,843 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,855 INFO [root] [key.py (post:18] - 正在测试本次脚本的第68个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:40,856 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [883]}
2022-05-19 18:43:40,856 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,856 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,857 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car中id为：883的记录
2022-05-19 18:43:40,857 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,867 INFO [root] [key.py (post:18] - 正在测试本次脚本的第69个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:40,867 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:43:40,867 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,868 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,868 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:43:40,868 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,879 INFO [root] [key.py (post:18] - 正在测试本次脚本的第70个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:40,879 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1094}
2022-05-19 18:43:40,880 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,880 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,904 INFO [root] [key.py (post:18] - 正在测试本次脚本的第71个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:40,904 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1094}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:43:40,905 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,906 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,906 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：884
2022-05-19 18:43:40,906 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,915 INFO [root] [key.py (post:18] - 正在测试本次脚本的第72个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:40,916 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-19 18:43:40,916 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,916 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,917 INFO [root] [key.py (default_get:100] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-19 18:43:40,918 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,928 INFO [root] [key.py (post:18] - 正在测试本次脚本的第73个接口: http://192.168.1.61/api/name_get,请求方法为：post
2022-05-19 18:43:40,929 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "id": 1094}
2022-05-19 18:43:40,929 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,929 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,942 INFO [root] [key.py (post:18] - 正在测试本次脚本的第74个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:40,943 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 1094}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-19 18:43:40,944 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,944 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,944 INFO [root] [key.py (create:50] - 新建：创建模型：customer_car新记录，id为：885
2022-05-19 18:43:40,944 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,956 INFO [root] [key.py (post:18] - 正在测试本次脚本的第75个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:40,956 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car", "ids": [884, 885]}
2022-05-19 18:43:40,957 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,957 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,958 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_car中id为：884, 885的记录
2022-05-19 18:43:40,958 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,970 INFO [root] [key.py (post:18] - 正在测试本次脚本的第76个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:40,971 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_model", "ids": [1094]}
2022-05-19 18:43:40,971 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,972 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,972 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_model中id为：1094的记录
2022-05-19 18:43:40,973 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,984 INFO [root] [key.py (post:18] - 正在测试本次脚本的第77个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:40,984 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_car_brand", "ids": [1322]}
2022-05-19 18:43:40,985 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:40,985 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:40,985 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_car_brand中id为：1322的记录
2022-05-19 18:43:40,986 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,001 INFO [root] [key.py (get:35] - 正在测试本次脚本的第78个接口: http://192.168.1.61/api/getUserInfo,请求方法为：get
2022-05-19 18:43:41,002 INFO [root] [key.py (get:36] - 传的参数是：{'t': '3673077131577'}
2022-05-19 18:43:41,002 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:41,003 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,003 INFO [root] [key.py (get_user_info:170] - 此次登录的用户是：admin
2022-05-19 18:43:41,003 INFO [root] [key.py (get_user_info:171] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,161 INFO [root] [key.py (get:35] - 正在测试本次脚本的第79个接口: http://192.168.1.61/api/call,请求方法为：get
2022-05-19 18:43:41,163 INFO [root] [key.py (get:36] - 传的参数是：{'lang': 'zh_CN', 't': '6712840889975'}
2022-05-19 18:43:41,163 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:41,164 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,165 INFO [root] [key.py (call:157] - 请求平台的模型结构成功
2022-05-19 18:43:41,166 INFO [root] [key.py (call:158] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,190 INFO [root] [key.py (get:35] - 正在测试本次脚本的第80个接口: http://192.168.1.61/api/load,请求方法为：get
2022-05-19 18:43:41,192 INFO [root] [key.py (get:36] - 传的参数是：{'model': 'ir_actions_act_window', 'actionId': '31'}
2022-05-19 18:43:41,193 INFO [root] [key.py (get:37] - 接口返回的响应头中的status_code是： 200
2022-05-19 18:43:41,194 INFO [root] [key.py (get:38] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,195 INFO [root] [key.py (load:163] - 呈现客户管理-充电卡模型
2022-05-19 18:43:41,196 INFO [root] [key.py (load:164] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,239 INFO [root] [key.py (post:18] - 正在测试本次脚本的第81个接口: http://192.168.1.61/api/load_views,请求方法为：post
2022-05-19 18:43:41,240 INFO [root] [key.py (post:19] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-19 18:43:41,242 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,243 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,245 INFO [root] [key.py (load_views:93] - 渲染模型customer_card的视图views
2022-05-19 18:43:41,246 INFO [root] [key.py (load_views:94] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,260 INFO [root] [key.py (post:18] - 正在测试本次脚本的第82个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:41,261 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:43:41,262 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,263 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,263 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:43:41,264 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,280 INFO [root] [key.py (post:18] - 正在测试本次脚本的第83个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:41,281 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:43:41,282 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,282 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,283 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：805
2022-05-19 18:43:41,284 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,297 INFO [root] [key.py (post:18] - 正在测试本次脚本的第84个接口: http://192.168.1.61/api/read,请求方法为：post
2022-05-19 18:43:41,298 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 805}
2022-05-19 18:43:41,299 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,300 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,301 INFO [root] [key.py (read:57] - 查看：查看模型customer_card中id为：805的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 805, 'cardNo': '1568975633213', 'status': 0}
2022-05-19 18:43:41,302 INFO [root] [key.py (read:58] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,316 INFO [root] [key.py (post:18] - 正在测试本次脚本的第85个接口: http://192.168.1.61/api/write,请求方法为：post
2022-05-19 18:43:41,317 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 805}
2022-05-19 18:43:41,318 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,319 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,319 INFO [root] [key.py (edit:64] - 编辑：编辑模型customer_card中id为：805的记录已成功
2022-05-19 18:43:41,320 INFO [root] [key.py (edit:65] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,340 INFO [root] [key.py (post:18] - 正在测试本次脚本的第86个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:41,340 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-19 18:43:41,341 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,341 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,342 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-19 18:43:41,343 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,359 INFO [root] [key.py (post:18] - 正在测试本次脚本的第87个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:41,359 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-19 18:43:41,359 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,360 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,360 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:43:41,360 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,373 INFO [root] [key.py (post:18] - 正在测试本次脚本的第88个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:41,374 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-19 18:43:41,374 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,374 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,375 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-19 18:43:41,375 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,388 INFO [root] [key.py (post:18] - 正在测试本次脚本的第89个接口: http://192.168.1.61/api/search_read,请求方法为：post
2022-05-19 18:43:41,389 INFO [root] [key.py (post:19] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-19 18:43:41,389 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,390 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,390 INFO [root] [key.py (search_read:107] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-19 18:43:41,390 INFO [root] [key.py (search_read:111] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,451 INFO [root] [key.py (post:18] - 正在测试本次脚本的第90个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:43:41,452 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-19 18:43:41,452 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,452 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,453 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 128]], '_total': 1, 'customerId': {'displayName': 'WXSteve', 'name': 'WXSteve', 'id': 128}}, {'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 2, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 37, 'customerId': {}}], 'length': 18}
2022-05-19 18:43:41,454 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,466 INFO [root] [key.py (post:18] - 正在测试本次脚本的第91个接口: http://192.168.1.61/api/read_group,请求方法为：post
2022-05-19 18:43:41,467 INFO [root] [key.py (post:19] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-19 18:43:41,467 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,467 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,467 INFO [root] [key.py (read_group:117] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 76, 'allowMoreCharge': False}], 'length': 2}
2022-05-19 18:43:41,468 INFO [root] [key.py (read_group:120] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,480 INFO [root] [key.py (post:18] - 正在测试本次脚本的第92个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:41,481 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [805]}
2022-05-19 18:43:41,481 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,481 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,481 INFO [root] [key.py (delete:72] - 删除：已删除模型customer_card中id为：805的记录
2022-05-19 18:43:41,482 INFO [root] [key.py (delete:73] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,490 INFO [root] [key.py (post:18] - 正在测试本次脚本的第93个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:41,491 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:43:41,491 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,491 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,491 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:43:41,491 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,506 INFO [root] [key.py (post:18] - 正在测试本次脚本的第94个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:41,506 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-19 18:43:41,507 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,507 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,507 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：806
2022-05-19 18:43:41,507 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,516 INFO [root] [key.py (post:18] - 正在测试本次脚本的第95个接口: http://192.168.1.61/api/default_get,请求方法为：post
2022-05-19 18:43:41,516 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-19 18:43:41,516 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,517 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,517 INFO [root] [key.py (default_get:100] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-19 18:43:41,517 INFO [root] [key.py (default_get:101] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,533 INFO [root] [key.py (post:18] - 正在测试本次脚本的第96个接口: http://192.168.1.61/api/create,请求方法为：post
2022-05-19 18:43:41,533 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-19 18:43:41,533 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,534 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,534 INFO [root] [key.py (create:50] - 新建：创建模型：customer_card新记录，id为：807
2022-05-19 18:43:41,534 INFO [root] [key.py (create:51] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,548 INFO [root] [key.py (post:18] - 正在测试本次脚本的第97个接口: http://192.168.1.61/api/unlink,请求方法为：post
2022-05-19 18:43:41,548 INFO [root] [key.py (post:19] - 传的参数是：{"model": "customer_card", "ids": [806, 807]}
2022-05-19 18:43:41,548 INFO [root] [key.py (post:20] - 接口返回的响应内容中的code是： 200
2022-05-19 18:43:41,548 INFO [root] [key.py (post:21] - -----------------------------------分割线-----------------------------------
2022-05-19 18:43:41,549 INFO [root] [key.py (delete:75] - 批量删除：已批量删除模型customer_card中id为：806, 807的记录
2022-05-19 18:43:41,549 INFO [root] [key.py (delete:77] - -----------------------------------分割线-----------------------------------
