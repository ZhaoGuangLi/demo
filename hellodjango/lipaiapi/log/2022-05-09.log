2022-05-09 15:36:21,422 WARNING [django.request] [log.py (log_response:241] - Not Found: /favicon.ico
2022-05-09 15:36:27,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:36:27,197 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KL4L"}
2022-05-09 15:36:27,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,198 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"188d346c8cc140969d9a7edb076dc6d5"}
2022-05-09 15:36:27,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:27,236 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:36:27,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:27,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:36:27,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,292 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：498
2022-05-09 15:36:27,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,335 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,336 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:36:27,349 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 498}
2022-05-09 15:36:27,351 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,352 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：498的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 498, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:36:27,363 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:27,363 INFO [root] [key.py (post:21] - 传的参数是：{"id": 498, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:36:27,364 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:36:27,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 498}
2022-05-09 15:36:27,383 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,384 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：498的记录已成功
2022-05-09 15:36:27,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,435 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:27,454 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:36:27,455 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,455 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:36:27,475 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:27,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [498]}
2022-05-09 15:36:27,477 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,477 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：498的记录
2022-05-09 15:36:27,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:27,489 INFO [root] [key.py (post:21] - 传的参数是：{"id": 498, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:36:27,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:27,504 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:36:27,504 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,505 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：499
2022-05-09 15:36:27,512 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:27,512 INFO [root] [key.py (post:21] - 传的参数是：{"id": 499, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:36:27,513 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:27,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:36:27,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,526 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：500
2022-05-09 15:36:27,548 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:27,549 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [499, 500]}
2022-05-09 15:36:27,549 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,549 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：499, 500的记录
2022-05-09 15:36:27,593 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:27,593 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:36:27,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,606 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:27,606 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:36:27,607 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,607 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：501
2022-05-09 15:36:27,655 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,656 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,656 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:27,666 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:36:27,666 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,667 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:36:27,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:27,681 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 501}
2022-05-09 15:36:27,681 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,701 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:27,702 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 501}, "name": "\u6c49EV"}}
2022-05-09 15:36:27,702 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,703 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：434
2022-05-09 15:36:27,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,748 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,749 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:36:27,761 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 434}
2022-05-09 15:36:27,762 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,763 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：434的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 501}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 434, 'nationalStandard': 255}
2022-05-09 15:36:27,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:36:27,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 434}
2022-05-09 15:36:27,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,777 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：434的记录已成功
2022-05-09 15:36:27,822 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,823 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,824 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:27,841 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:36:27,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,842 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:36:27,885 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,902 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:27,902 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:36:27,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,903 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:36:27,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:27,948 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:27,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:36:27,986 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:36:27,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:27,987 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 501]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 501}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:36:28,001 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:28,001 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [434]}
2022-05-09 15:36:28,002 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,002 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：434的记录
2022-05-09 15:36:28,048 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,049 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,049 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:28,080 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:36:28,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,080 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:36:28,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:28,092 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 501}
2022-05-09 15:36:28,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,105 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:28,106 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 501}, "name": "\u6c49EV"}}
2022-05-09 15:36:28,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,107 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：435
2022-05-09 15:36:28,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:28,171 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:36:28,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,172 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:36:28,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:28,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 501}
2022-05-09 15:36:28,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:28,201 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 501}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:36:28,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,202 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：436
2022-05-09 15:36:28,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:28,216 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [435, 436]}
2022-05-09 15:36:28,217 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,218 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：435, 436的记录
2022-05-09 15:36:28,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:28,234 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [501]}
2022-05-09 15:36:28,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,235 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：501的记录
2022-05-09 15:36:28,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:36:28,253 INFO [root] [key.py (post:21] - 传的参数是：{"id": 501, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:36:28,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:28,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:36:28,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,268 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：502
2022-05-09 15:36:28,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:28,326 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:36:28,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,326 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:36:28,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:28,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 502}
2022-05-09 15:36:28,336 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:28,349 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 502}, "name": "\u6c49EV"}}
2022-05-09 15:36:28,350 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,351 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：437
2022-05-09 15:36:28,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,394 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,404 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:28,404 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:36:28,405 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,405 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:36:28,414 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:28,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 437}
2022-05-09 15:36:28,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:28,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 437}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:36:28,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,434 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：385
2022-05-09 15:36:28,477 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,477 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,478 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:36:28,489 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 385}
2022-05-09 15:36:28,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,489 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：385的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 437}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 385}
2022-05-09 15:36:28,501 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:36:28,501 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 385}
2022-05-09 15:36:28,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,502 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：385的记录已成功
2022-05-09 15:36:28,543 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,544 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,544 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,558 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:28,558 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:36:28,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,559 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:36:28,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,602 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,610 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:28,624 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:36:28,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,625 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:36:28,666 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:28,682 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:36:28,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,683 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:36:28,728 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,730 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,745 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:28,746 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:36:28,746 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,747 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:36:28,795 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,796 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:28,814 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:36:28,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,816 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:36:28,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:36:28,911 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:36:28,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:28,919 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:36:28,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:28,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:28,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,032 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:36:29,033 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:36:29,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,034 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 437]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 437}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:36:29,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:29,047 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [385]}
2022-05-09 15:36:29,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,048 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：385的记录
2022-05-09 15:36:29,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:29,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:36:29,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,395 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:36:29,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:29,405 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 437}
2022-05-09 15:36:29,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,418 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:29,418 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 437}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:36:29,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,419 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：386
2022-05-09 15:36:29,468 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,468 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:29,477 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:36:29,477 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,477 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:36:29,487 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:36:29,488 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 437}
2022-05-09 15:36:29,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,502 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:29,502 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 437}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:36:29,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,503 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：387
2022-05-09 15:36:29,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:29,515 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [386, 387]}
2022-05-09 15:36:29,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,516 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：386, 387的记录
2022-05-09 15:36:29,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:29,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [437]}
2022-05-09 15:36:29,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,529 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：437的记录
2022-05-09 15:36:29,539 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:29,539 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [502]}
2022-05-09 15:36:29,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,540 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：502的记录
2022-05-09 15:36:29,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,588 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,596 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:29,596 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:36:29,597 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,597 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:36:29,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:29,618 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:36:29,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,619 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：360
2022-05-09 15:36:29,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:36:29,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 360}
2022-05-09 15:36:29,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,675 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：360的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 360, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:36:29,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:36:29,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 360}
2022-05-09 15:36:29,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,687 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：360的记录已成功
2022-05-09 15:36:29,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:29,748 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:36:29,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,748 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:36:29,790 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,791 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:29,804 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:36:29,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,804 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:36:29,847 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,847 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:29,861 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:36:29,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,861 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:36:29,905 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,906 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,906 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:36:29,919 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:36:29,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:29,919 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:36:29,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:29,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:29,965 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:36:30,014 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:36:30,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,014 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:36:30,052 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:30,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:30,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:36:30,065 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:36:30,065 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,065 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:36:30,076 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:30,077 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [360]}
2022-05-09 15:36:30,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,077 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：360的记录
2022-05-09 15:36:30,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:30,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:30,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:30,164 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:36:30,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,166 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:36:30,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:30,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:36:30,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,186 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：361
2022-05-09 15:36:30,229 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:36:30,229 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:36:30,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,238 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:36:30,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:36:30,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,239 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:36:30,250 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:36:30,251 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:36:30,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,252 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：362
2022-05-09 15:36:30,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:36:30,263 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [361, 362]}
2022-05-09 15:36:30,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:36:30,263 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：361, 362的记录
2022-05-09 15:36:38,327 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/app.js
2022-05-09 15:36:38,329 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/styles.css
2022-05-09 15:36:38,330 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/plugins/packages/index.js
2022-05-09 15:36:38,330 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/plugins/screen-diff/styles.css
2022-05-09 15:36:38,331 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/plugins/behaviors/index.js
2022-05-09 15:36:38,332 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/plugins/screen-diff/index.js
2022-05-09 15:41:30,979 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\settings.py changed, reloading.
2022-05-09 15:42:25,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:42:25,619 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3HCU"}
2022-05-09 15:42:25,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,619 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"abd6f06e85de441c8d3c7b76f5f6e810"}
2022-05-09 15:42:25,629 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:25,630 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:42:25,630 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:25,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:42:25,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,645 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：503
2022-05-09 15:42:25,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:25,745 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:25,745 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,790 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:42:25,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 503}
2022-05-09 15:42:25,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,791 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：503的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 503, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:42:25,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:25,805 INFO [root] [key.py (post:21] - 传的参数是：{"id": 503, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:42:25,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,820 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:42:25,821 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 503}
2022-05-09 15:42:25,821 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,821 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：503的记录已成功
2022-05-09 15:42:25,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:25,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:25,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,900 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:25,901 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:42:25,901 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,902 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:42:25,916 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:25,916 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [503]}
2022-05-09 15:42:25,917 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,917 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：503的记录
2022-05-09 15:42:25,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:25,930 INFO [root] [key.py (post:21] - 传的参数是：{"id": 503, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:42:25,930 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:25,950 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:42:25,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,952 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：504
2022-05-09 15:42:25,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:25,964 INFO [root] [key.py (post:21] - 传的参数是：{"id": 504, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:42:25,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:25,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:42:25,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,980 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：505
2022-05-09 15:42:25,992 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:25,992 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [504, 505]}
2022-05-09 15:42:25,993 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:25,993 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：504, 505的记录
2022-05-09 15:42:26,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:26,010 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:42:26,010 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,022 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,022 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:42:26,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,023 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：506
2022-05-09 15:42:26,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,060 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,071 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:26,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:42:26,072 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,072 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:42:26,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:26,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 506}
2022-05-09 15:42:26,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,098 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,098 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 506}, "name": "\u6c49EV"}}
2022-05-09 15:42:26,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,100 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：438
2022-05-09 15:42:26,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,148 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:42:26,148 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 438}
2022-05-09 15:42:26,149 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,150 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：438的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 506}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 438, 'nationalStandard': 255}
2022-05-09 15:42:26,161 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:42:26,162 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 438}
2022-05-09 15:42:26,162 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,163 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：438的记录已成功
2022-05-09 15:42:26,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,200 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,200 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:26,212 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:42:26,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,213 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:42:26,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,250 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,251 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:26,265 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:42:26,265 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,266 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:42:26,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,301 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,330 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:42:26,331 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:42:26,331 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,332 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 506]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 506}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:42:26,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:26,343 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [438]}
2022-05-09 15:42:26,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,343 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：438的记录
2022-05-09 15:42:26,384 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,396 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:26,396 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:42:26,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,397 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:42:26,407 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:26,408 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 506}
2022-05-09 15:42:26,408 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,420 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 506}, "name": "\u6c49EV"}}
2022-05-09 15:42:26,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,421 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：439
2022-05-09 15:42:26,454 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,455 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,456 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:26,465 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:42:26,466 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,466 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:42:26,475 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:26,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 506}
2022-05-09 15:42:26,477 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,489 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,490 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 506}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:42:26,491 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,491 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：440
2022-05-09 15:42:26,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:26,506 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [439, 440]}
2022-05-09 15:42:26,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,507 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：439, 440的记录
2022-05-09 15:42:26,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:26,520 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [506]}
2022-05-09 15:42:26,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,521 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：506的记录
2022-05-09 15:42:26,538 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:42:26,539 INFO [root] [key.py (post:21] - 传的参数是：{"id": 506, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:42:26,539 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,582 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,583 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:42:26,584 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,584 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：507
2022-05-09 15:42:26,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,625 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,634 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:26,635 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:42:26,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,636 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:42:26,645 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:26,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 507}
2022-05-09 15:42:26,646 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 507}, "name": "\u6c49EV"}}
2022-05-09 15:42:26,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,659 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：441
2022-05-09 15:42:26,704 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,713 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:26,713 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:42:26,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,714 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:42:26,724 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:26,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 441}
2022-05-09 15:42:26,725 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:26,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 441}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:42:26,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,739 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：388
2022-05-09 15:42:26,793 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,794 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:42:26,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 388}
2022-05-09 15:42:26,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,806 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：388的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 441}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 388}
2022-05-09 15:42:26,819 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:42:26,820 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 388}
2022-05-09 15:42:26,820 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,820 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：388的记录已成功
2022-05-09 15:42:26,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:26,884 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:42:26,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,885 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:42:26,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:26,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:26,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,956 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:26,956 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:42:26,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:26,957 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:42:27,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,014 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,031 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:42:27,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,031 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:42:27,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,087 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,103 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:42:27,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,103 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:42:27,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,167 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:42:27,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,168 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:42:27,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,213 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:42:27,254 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:42:27,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,254 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:42:27,293 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,294 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,294 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:42:27,347 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:42:27,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,348 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 441]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 441}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:42:27,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:27,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [388]}
2022-05-09 15:42:27,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,361 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：388的记录
2022-05-09 15:42:27,399 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,400 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,401 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,409 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:27,410 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:42:27,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,410 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:42:27,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:27,419 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 441}
2022-05-09 15:42:27,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:27,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 441}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:42:27,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,435 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：389
2022-05-09 15:42:27,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,470 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,471 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:27,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:42:27,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,481 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:42:27,492 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:42:27,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 441}
2022-05-09 15:42:27,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:27,505 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 441}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:42:27,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,506 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：390
2022-05-09 15:42:27,526 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:27,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [389, 390]}
2022-05-09 15:42:27,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,527 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：389, 390的记录
2022-05-09 15:42:27,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:27,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [441]}
2022-05-09 15:42:27,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,540 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：441的记录
2022-05-09 15:42:27,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:27,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [507]}
2022-05-09 15:42:27,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,553 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：507的记录
2022-05-09 15:42:27,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,604 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,604 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:27,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:42:27,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,613 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:42:27,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:27,625 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:42:27,626 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,626 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：363
2022-05-09 15:42:27,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,669 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:42:27,681 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 363}
2022-05-09 15:42:27,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,682 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：363的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 363, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:42:27,695 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:42:27,695 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 363}
2022-05-09 15:42:27,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,696 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：363的记录已成功
2022-05-09 15:42:27,743 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,743 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,744 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,759 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:42:27,759 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,759 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:42:27,809 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,810 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,810 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,823 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,823 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:42:27,824 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,824 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:42:27,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,884 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:42:27,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,885 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:42:27,923 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,924 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,938 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:42:27,938 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:42:27,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:27,939 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:42:27,993 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:27,994 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:27,994 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,045 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:42:28,046 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:42:28,046 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,046 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:42:28,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:28,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:28,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:42:28,097 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:42:28,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,098 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:42:28,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:28,109 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [363]}
2022-05-09 15:42:28,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,110 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：363的记录
2022-05-09 15:42:28,155 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:28,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:28,156 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:28,167 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:42:28,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,168 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:42:28,186 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:28,186 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:42:28,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,187 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：364
2022-05-09 15:42:28,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:42:28,232 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:42:28,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,242 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:42:28,242 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:42:28,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,242 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:42:28,255 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:42:28,255 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:42:28,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,255 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：365
2022-05-09 15:42:28,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:42:28,268 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [364, 365]}
2022-05-09 15:42:28,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:42:28,268 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：364, 365的记录
2022-05-09 15:42:38,971 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/packages/index.js
2022-05-09 15:42:38,972 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/behaviors/index.js
2022-05-09 15:42:38,973 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/app.js
2022-05-09 15:42:38,973 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/screen-diff/styles.css
2022-05-09 15:42:38,974 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/screen-diff/index.js
2022-05-09 15:42:38,975 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/styles.css
2022-05-09 15:44:55,866 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-09 15:45:01,949 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:45:01,949 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DN4W"}
2022-05-09 15:45:01,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:01,950 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"624b6c72e393408b91d1e172b910cfe1"}
2022-05-09 15:45:01,960 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:01,960 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:45:01,961 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:01,977 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:01,977 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:45:01,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:01,978 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：508
2022-05-09 15:45:02,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,028 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,039 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:45:02,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 508}
2022-05-09 15:45:02,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,040 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：508的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 508, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:45:02,048 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:02,048 INFO [root] [key.py (post:21] - 传的参数是：{"id": 508, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:45:02,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:45:02,063 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 508}
2022-05-09 15:45:02,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,063 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：508的记录已成功
2022-05-09 15:45:02,114 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,114 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,130 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:02,131 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:45:02,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,135 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:45:02,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:02,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [508]}
2022-05-09 15:45:02,156 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,157 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：508的记录
2022-05-09 15:45:02,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:02,171 INFO [root] [key.py (post:21] - 传的参数是：{"id": 508, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:45:02,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,196 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:45:02,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,198 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：509
2022-05-09 15:45:02,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:02,209 INFO [root] [key.py (post:21] - 传的参数是：{"id": 509, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:45:02,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,222 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,222 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:45:02,223 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,223 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：510
2022-05-09 15:45:02,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:02,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [509, 510]}
2022-05-09 15:45:02,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,239 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：509, 510的记录
2022-05-09 15:45:02,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:02,257 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:45:02,258 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,279 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:45:02,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,279 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：511
2022-05-09 15:45:02,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:02,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:45:02,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,332 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:45:02,344 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:02,344 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 511}
2022-05-09 15:45:02,344 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,357 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 511}, "name": "\u6c49EV"}}
2022-05-09 15:45:02,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,357 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：442
2022-05-09 15:45:02,402 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,402 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,412 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:45:02,412 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 442}
2022-05-09 15:45:02,412 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,413 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：442的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 511}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 442, 'nationalStandard': 255}
2022-05-09 15:45:02,426 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:45:02,427 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 442}
2022-05-09 15:45:02,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,427 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：442的记录已成功
2022-05-09 15:45:02,472 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:02,489 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:45:02,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,490 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:45:02,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,549 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:02,549 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:45:02,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,551 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:45:02,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,588 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:45:02,616 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:45:02,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,620 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 511]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 511}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:45:02,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:02,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [442]}
2022-05-09 15:45:02,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,641 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：442的记录
2022-05-09 15:45:02,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,698 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:02,699 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:45:02,700 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,700 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:45:02,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:02,711 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 511}
2022-05-09 15:45:02,711 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 511}, "name": "\u6c49EV"}}
2022-05-09 15:45:02,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,724 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：443
2022-05-09 15:45:02,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:02,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:45:02,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,780 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:45:02,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:02,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 511}
2022-05-09 15:45:02,790 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 511}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:45:02,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,805 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：444
2022-05-09 15:45:02,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:02,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [443, 444]}
2022-05-09 15:45:02,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,818 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：443, 444的记录
2022-05-09 15:45:02,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:02,830 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [511]}
2022-05-09 15:45:02,830 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,830 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：511的记录
2022-05-09 15:45:02,844 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:45:02,845 INFO [root] [key.py (post:21] - 传的参数是：{"id": 511, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:45:02,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,857 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:45:02,858 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,858 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：512
2022-05-09 15:45:02,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:02,903 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:02,904 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,917 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:02,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:45:02,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,921 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:45:02,932 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:02,932 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 512}
2022-05-09 15:45:02,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:02,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 512}, "name": "\u6c49EV"}}
2022-05-09 15:45:02,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:02,950 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：445
2022-05-09 15:45:03,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,002 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,012 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:03,012 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:45:03,013 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,013 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:45:03,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:03,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 445}
2022-05-09 15:45:03,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:03,039 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 445}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:45:03,039 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,040 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：391
2022-05-09 15:45:03,083 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:45:03,098 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 391}
2022-05-09 15:45:03,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,099 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：391的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 445}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 391}
2022-05-09 15:45:03,114 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:45:03,115 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 391}
2022-05-09 15:45:03,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,116 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：391的记录已成功
2022-05-09 15:45:03,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,164 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,180 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:03,180 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:45:03,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,181 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:45:03,225 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,225 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,226 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,247 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:03,248 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:45:03,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,249 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:45:03,295 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,296 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,296 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:03,312 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:45:03,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,313 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:45:03,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,376 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:03,376 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:45:03,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,377 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:45:03,423 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,424 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:03,441 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:45:03,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,442 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:45:03,486 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,487 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,487 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:45:03,528 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:45:03,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,529 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:45:03,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,582 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,647 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:45:03,649 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:45:03,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,653 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 445]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 445}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:45:03,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:03,675 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [391]}
2022-05-09 15:45:03,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,677 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：391的记录
2022-05-09 15:45:03,730 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,734 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:03,754 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:45:03,778 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,780 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:45:03,806 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:03,807 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 445}
2022-05-09 15:45:03,807 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:03,821 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 445}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:45:03,821 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,822 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：392
2022-05-09 15:45:03,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,867 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:03,877 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:45:03,877 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,877 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:45:03,887 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:45:03,887 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 445}
2022-05-09 15:45:03,888 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,900 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:03,901 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 445}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:45:03,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,902 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：393
2022-05-09 15:45:03,913 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:03,914 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [392, 393]}
2022-05-09 15:45:03,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,914 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：392, 393的记录
2022-05-09 15:45:03,927 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:03,928 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [445]}
2022-05-09 15:45:03,928 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,928 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：445的记录
2022-05-09 15:45:03,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:03,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [512]}
2022-05-09 15:45:03,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:03,942 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：512的记录
2022-05-09 15:45:03,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:03,999 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:03,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,009 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:04,009 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:45:04,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,010 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:45:04,024 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:04,025 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:45:04,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,025 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：366
2022-05-09 15:45:04,067 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,067 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,068 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:45:04,079 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 366}
2022-05-09 15:45:04,079 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,080 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：366的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 366, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:45:04,096 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:45:04,097 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 366}
2022-05-09 15:45:04,097 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,097 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：366的记录已成功
2022-05-09 15:45:04,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,140 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,140 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:04,152 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:45:04,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,153 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:45:04,189 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,189 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,190 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:04,201 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:45:04,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,202 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:45:04,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:04,249 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:45:04,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,250 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:45:04,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,293 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:45:04,304 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:45:04,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,305 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:45:04,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,342 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,389 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:45:04,389 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:45:04,390 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,390 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:45:04,452 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,453 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,463 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:45:04,463 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:45:04,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,464 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:45:04,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:04,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [366]}
2022-05-09 15:45:04,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,474 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：366的记录
2022-05-09 15:45:04,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,515 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:04,515 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:45:04,516 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,516 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:45:04,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:04,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:45:04,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,527 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：367
2022-05-09 15:45:04,557 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:45:04,557 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:45:04,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:45:04,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:45:04,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,566 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:45:04,576 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:45:04,576 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:45:04,576 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,576 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：368
2022-05-09 15:45:04,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:45:04,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [367, 368]}
2022-05-09 15:45:04,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:45:04,586 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：367, 368的记录
2022-05-09 15:46:06,707 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/
2022-05-09 15:46:38,052 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-09 15:46:39,960 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/app.js
2022-05-09 15:46:39,960 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/screen-diff/styles.css
2022-05-09 15:46:39,961 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/styles.css
2022-05-09 15:46:39,962 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/packages/index.js
2022-05-09 15:46:39,962 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/behaviors/index.js
2022-05-09 15:46:39,963 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/plugins/screen-diff/index.js
2022-05-09 15:47:46,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:47:46,200 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "W4TC"}
2022-05-09 15:47:46,200 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,201 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"4d07475edc7442498e36c2e949b1bd5f"}
2022-05-09 15:47:46,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:46,208 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:47:46,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,217 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:47:46,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,218 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：513
2022-05-09 15:47:46,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,270 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,270 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,281 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:47:46,281 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 513}
2022-05-09 15:47:46,281 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,282 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：513的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 513, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:47:46,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:46,291 INFO [root] [key.py (post:21] - 传的参数是：{"id": 513, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:47:46,291 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:47:46,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 513}
2022-05-09 15:47:46,304 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,304 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：513的记录已成功
2022-05-09 15:47:46,345 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,346 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:46,358 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:47:46,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,359 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:47:46,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:46,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [513]}
2022-05-09 15:47:46,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,370 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：513的记录
2022-05-09 15:47:46,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:46,378 INFO [root] [key.py (post:21] - 传的参数是：{"id": 513, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:47:46,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,398 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:47:46,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,400 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：514
2022-05-09 15:47:46,409 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:46,410 INFO [root] [key.py (post:21] - 传的参数是：{"id": 514, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:47:46,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:47:46,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,424 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：515
2022-05-09 15:47:46,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:46,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [514, 515]}
2022-05-09 15:47:46,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,435 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：514, 515的记录
2022-05-09 15:47:46,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:46,451 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:47:46,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,460 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,461 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:47:46,461 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,461 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：516
2022-05-09 15:47:46,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,493 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,502 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:46,502 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:47:46,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,503 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:47:46,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:46,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 516}
2022-05-09 15:47:46,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,527 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 516}, "name": "\u6c49EV"}}
2022-05-09 15:47:46,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,528 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：446
2022-05-09 15:47:46,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,572 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,584 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:47:46,585 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 446}
2022-05-09 15:47:46,585 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,585 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：446的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 516}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 446, 'nationalStandard': 255}
2022-05-09 15:47:46,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:47:46,597 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 446}
2022-05-09 15:47:46,597 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,598 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：446的记录已成功
2022-05-09 15:47:46,642 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,643 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,643 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:46,658 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:47:46,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,659 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:47:46,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:46,720 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:47:46,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,721 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:47:46,774 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,806 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:47:46,806 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:47:46,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,807 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 516]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 516}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:47:46,820 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:46,820 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [446]}
2022-05-09 15:47:46,820 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,821 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：446的记录
2022-05-09 15:47:46,870 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,870 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,879 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:46,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:47:46,880 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,880 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:47:46,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:46,889 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 516}
2022-05-09 15:47:46,890 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,902 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,903 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 516}, "name": "\u6c49EV"}}
2022-05-09 15:47:46,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,903 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：447
2022-05-09 15:47:46,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:46,948 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:46,948 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:46,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:47:46,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,960 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:47:46,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:46,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 516}
2022-05-09 15:47:46,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:46,989 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 516}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:47:46,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:46,989 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：448
2022-05-09 15:47:47,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [447, 448]}
2022-05-09 15:47:47,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,003 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：447, 448的记录
2022-05-09 15:47:47,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,014 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [516]}
2022-05-09 15:47:47,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,015 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：516的记录
2022-05-09 15:47:47,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:47:47,030 INFO [root] [key.py (post:21] - 传的参数是：{"id": 516, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:47:47,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:47:47,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,045 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：517
2022-05-09 15:47:47,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,093 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,093 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:47,103 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:47:47,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,103 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:47:47,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:47,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 517}
2022-05-09 15:47:47,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,127 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 517}, "name": "\u6c49EV"}}
2022-05-09 15:47:47,128 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,128 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：449
2022-05-09 15:47:47,174 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,175 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,175 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:47,184 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:47:47,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,185 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:47:47,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:47,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 449}
2022-05-09 15:47:47,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 449}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:47:47,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,209 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：394
2022-05-09 15:47:47,247 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,247 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,258 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:47:47,259 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 394}
2022-05-09 15:47:47,259 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,260 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：394的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 449}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 394}
2022-05-09 15:47:47,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:47:47,270 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 394}
2022-05-09 15:47:47,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,271 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：394的记录已成功
2022-05-09 15:47:47,307 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,308 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:47,320 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:47:47,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,320 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:47:47,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,354 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:47,367 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:47:47,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,367 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:47:47,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,405 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,417 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:47,418 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:47:47,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,419 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:47:47,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,457 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,474 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:47,475 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:47:47,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,476 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:47:47,510 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,511 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:47,523 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:47:47,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,525 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:47:47,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,557 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:47:47,596 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:47:47,598 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,600 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:47:47,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:47:47,713 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:47:47,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,713 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 449]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 449}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:47:47,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [394]}
2022-05-09 15:47:47,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,727 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：394的记录
2022-05-09 15:47:47,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:47,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:47:47,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,780 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:47:47,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:47,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 449}
2022-05-09 15:47:47,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,801 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,802 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 449}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:47:47,802 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,803 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：395
2022-05-09 15:47:47,844 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,844 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:47,853 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:47:47,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,853 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:47:47,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:47:47,862 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 449}
2022-05-09 15:47:47,863 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,873 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,873 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 449}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:47:47,873 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,874 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：396
2022-05-09 15:47:47,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [395, 396]}
2022-05-09 15:47:47,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,886 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：395, 396的记录
2022-05-09 15:47:47,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,896 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [449]}
2022-05-09 15:47:47,897 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,897 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：449的记录
2022-05-09 15:47:47,909 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:47,909 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [517]}
2022-05-09 15:47:47,909 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,910 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：517的记录
2022-05-09 15:47:47,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:47,952 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:47,952 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:47,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:47:47,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,960 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:47:47,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:47,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:47:47,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:47,975 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：369
2022-05-09 15:47:48,012 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,012 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,012 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:47:48,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 369}
2022-05-09 15:47:48,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,024 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：369的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 369, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:47:48,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:47:48,035 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 369}
2022-05-09 15:47:48,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,035 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：369的记录已成功
2022-05-09 15:47:48,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,082 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,082 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,098 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:48,098 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:47:48,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,098 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:47:48,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,146 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:48,147 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:47:48,147 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,148 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:47:48,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,207 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:48,208 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:47:48,208 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,209 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:47:48,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,263 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:47:48,263 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:47:48,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,263 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:47:48,309 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,309 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,309 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,351 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:47:48,351 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:47:48,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,352 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:47:48,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:47:48,397 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:47:48,397 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,397 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:47:48,406 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:48,406 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [369]}
2022-05-09 15:47:48,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,407 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：369的记录
2022-05-09 15:47:48,477 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,489 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:48,489 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:47:48,490 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,490 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:47:48,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:48,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:47:48,503 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,504 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：370
2022-05-09 15:47:48,549 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:47:48,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:47:48,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:47:48,560 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:47:48,560 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,561 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:47:48,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:47:48,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:47:48,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,574 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：371
2022-05-09 15:47:48,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:47:48,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [370, 371]}
2022-05-09 15:47:48,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:47:48,587 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：370, 371的记录
2022-05-09 15:47:54,403 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/lipaiapi/reports/plugins/packages/index.js
2022-05-09 15:47:54,404 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/lipaiapi/reports/plugins/screen-diff/styles.css
2022-05-09 15:47:54,405 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/lipaiapi/reports/styles.css
2022-05-09 15:47:54,405 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/lipaiapi/reports/plugins/screen-diff/index.js
2022-05-09 15:47:54,406 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/lipaiapi/reports/app.js
2022-05-09 15:47:54,407 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/lipaiapi/reports/plugins/behaviors/index.js
2022-05-09 15:49:57,329 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:49:57,330 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NMKQ"}
2022-05-09 15:49:57,330 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,330 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"a94f69835169445aa1efae918509b7b0"}
2022-05-09 15:49:57,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:57,340 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:49:57,340 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,352 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:57,352 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:49:57,353 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,353 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：518
2022-05-09 15:49:57,399 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,400 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,400 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,410 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:49:57,410 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 518}
2022-05-09 15:49:57,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,411 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：518的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 518, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:49:57,418 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:57,419 INFO [root] [key.py (post:21] - 传的参数是：{"id": 518, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:49:57,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,430 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:49:57,430 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 518}
2022-05-09 15:49:57,430 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,430 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：518的记录已成功
2022-05-09 15:49:57,478 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,479 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:57,495 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:49:57,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,496 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:49:57,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:57,509 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [518]}
2022-05-09 15:49:57,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,510 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：518的记录
2022-05-09 15:49:57,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:57,519 INFO [root] [key.py (post:21] - 传的参数是：{"id": 518, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:49:57,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,532 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:57,532 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:49:57,533 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,534 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：519
2022-05-09 15:49:57,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:57,541 INFO [root] [key.py (post:21] - 传的参数是：{"id": 519, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:49:57,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:57,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:49:57,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,553 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：520
2022-05-09 15:49:57,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:57,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [519, 520]}
2022-05-09 15:49:57,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,565 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：519, 520的记录
2022-05-09 15:49:57,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:57,582 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:49:57,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:57,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:49:57,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,592 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：521
2022-05-09 15:49:57,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,623 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,630 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:57,630 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:49:57,630 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,630 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:49:57,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:57,641 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 521}
2022-05-09 15:49:57,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:57,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 521}, "name": "\u6c49EV"}}
2022-05-09 15:49:57,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,654 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：450
2022-05-09 15:49:57,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:49:57,716 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 450}
2022-05-09 15:49:57,717 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,718 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：450的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 521}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 450, 'nationalStandard': 255}
2022-05-09 15:49:57,731 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:49:57,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 450}
2022-05-09 15:49:57,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,733 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：450的记录已成功
2022-05-09 15:49:57,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,777 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,778 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:57,795 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:49:57,796 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,796 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:49:57,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:57,860 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:49:57,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,862 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:49:57,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:57,907 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:57,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:49:57,941 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:49:57,942 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,943 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 521]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 521}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:49:57,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:57,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [450]}
2022-05-09 15:49:57,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:57,960 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：450的记录
2022-05-09 15:49:58,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,010 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,010 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,019 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:58,019 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:49:58,020 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,020 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:49:58,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:58,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 521}
2022-05-09 15:49:58,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:58,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 521}, "name": "\u6c49EV"}}
2022-05-09 15:49:58,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,045 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：451
2022-05-09 15:49:58,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,091 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:58,102 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:49:58,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,103 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:49:58,119 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:58,120 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 521}
2022-05-09 15:49:58,120 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:58,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 521}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:49:58,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,140 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：452
2022-05-09 15:49:58,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:58,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [451, 452]}
2022-05-09 15:49:58,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,154 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：451, 452的记录
2022-05-09 15:49:58,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:58,168 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [521]}
2022-05-09 15:49:58,168 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,168 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：521的记录
2022-05-09 15:49:58,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:49:58,181 INFO [root] [key.py (post:21] - 传的参数是：{"id": 521, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:49:58,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:58,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:49:58,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,196 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：522
2022-05-09 15:49:58,238 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:58,246 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:49:58,247 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,247 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:49:58,254 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:58,254 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 522}
2022-05-09 15:49:58,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:58,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 522}, "name": "\u6c49EV"}}
2022-05-09 15:49:58,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,268 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：453
2022-05-09 15:49:58,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,313 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,314 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:58,326 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:49:58,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,326 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:49:58,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:58,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 453}
2022-05-09 15:49:58,337 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,350 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:58,351 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 453}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:49:58,351 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,352 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：397
2022-05-09 15:49:58,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,410 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:49:58,411 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 397}
2022-05-09 15:49:58,411 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,412 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：397的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 453}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 397}
2022-05-09 15:49:58,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:49:58,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 397}
2022-05-09 15:49:58,426 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,426 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：397的记录已成功
2022-05-09 15:49:58,468 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,469 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,469 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,483 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:58,483 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:49:58,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,484 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:49:58,532 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,533 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:58,550 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:49:58,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,551 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:49:58,593 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,593 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:58,607 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:49:58,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,608 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:49:58,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,652 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:58,667 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:49:58,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,668 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:49:58,709 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,709 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,710 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:58,726 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:49:58,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,727 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:49:58,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:49:58,814 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:49:58,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,818 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:49:58,863 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,864 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,865 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,925 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:49:58,926 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:49:58,926 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,927 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 453]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 453}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:49:58,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:58,939 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [397]}
2022-05-09 15:49:58,939 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:58,940 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：397的记录
2022-05-09 15:49:58,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:58,996 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:58,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:59,006 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:49:59,006 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,006 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:49:59,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:59,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 453}
2022-05-09 15:49:59,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:59,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 453}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:49:59,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,030 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：398
2022-05-09 15:49:59,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,082 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:59,082 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:49:59,083 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,083 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:49:59,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:49:59,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 453}
2022-05-09 15:49:59,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,108 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:59,108 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 453}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:49:59,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,109 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：399
2022-05-09 15:49:59,123 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:59,123 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [398, 399]}
2022-05-09 15:49:59,124 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,124 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：398, 399的记录
2022-05-09 15:49:59,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:59,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [453]}
2022-05-09 15:49:59,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,139 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：453的记录
2022-05-09 15:49:59,149 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:59,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [522]}
2022-05-09 15:49:59,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,150 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：522的记录
2022-05-09 15:49:59,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,201 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:59,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:49:59,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,209 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:49:59,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:59,221 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:49:59,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,222 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：372
2022-05-09 15:49:59,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:49:59,262 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 372}
2022-05-09 15:49:59,262 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,263 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：372的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 372, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:49:59,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:49:59,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 372}
2022-05-09 15:49:59,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,276 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：372的记录已成功
2022-05-09 15:49:59,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:59,347 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:49:59,347 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,348 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:49:59,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:59,406 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:49:59,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,407 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:49:59,452 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,453 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:59,468 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:49:59,469 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,469 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:49:59,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,519 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,532 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:49:59,532 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:49:59,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,534 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:49:59,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,564 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,564 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,611 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:49:59,611 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:49:59,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,612 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:49:59,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:49:59,669 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:49:59,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,669 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:49:59,680 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:59,680 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [372]}
2022-05-09 15:49:59,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,681 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：372的记录
2022-05-09 15:49:59,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,745 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,747 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:59,762 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:49:59,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,764 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:49:59,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:59,780 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:49:59,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,782 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：373
2022-05-09 15:49:59,824 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:49:59,825 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:49:59,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:49:59,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:49:59,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,838 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:49:59,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:49:59,856 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:49:59,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,857 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：374
2022-05-09 15:49:59,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:49:59,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [373, 374]}
2022-05-09 15:49:59,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:49:59,872 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：373, 374的记录
2022-05-09 15:52:20,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:52:20,471 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "CL7E"}
2022-05-09 15:52:20,471 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,471 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"dd4f5dc3f5094f1f815687afe7903e92"}
2022-05-09 15:52:20,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:20,480 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:52:20,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:20,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:52:20,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,492 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：523
2022-05-09 15:52:20,539 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:20,539 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:20,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:52:20,551 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 523}
2022-05-09 15:52:20,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,552 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：523的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 523, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:52:20,560 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:20,561 INFO [root] [key.py (post:21] - 传的参数是：{"id": 523, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:52:20,561 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:52:20,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 523}
2022-05-09 15:52:20,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,573 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：523的记录已成功
2022-05-09 15:52:20,621 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:20,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:20,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,643 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:20,644 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:52:20,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,646 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:52:20,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:20,663 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [523]}
2022-05-09 15:52:20,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,664 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：523的记录
2022-05-09 15:52:20,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:20,676 INFO [root] [key.py (post:21] - 传的参数是：{"id": 523, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:52:20,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,690 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:20,691 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:52:20,691 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,692 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：524
2022-05-09 15:52:20,700 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:20,700 INFO [root] [key.py (post:21] - 传的参数是：{"id": 524, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:52:20,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,714 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:20,714 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:52:20,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,714 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：525
2022-05-09 15:52:20,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:20,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [524, 525]}
2022-05-09 15:52:20,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,727 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：524, 525的记录
2022-05-09 15:52:20,745 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:20,746 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:52:20,746 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:20,760 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:52:20,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,761 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：526
2022-05-09 15:52:20,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:20,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:20,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:20,813 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:52:20,813 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,814 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:52:20,824 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:20,824 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 526}
2022-05-09 15:52:20,824 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,838 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:20,839 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 526}, "name": "\u6c49EV"}}
2022-05-09 15:52:20,839 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,839 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：454
2022-05-09 15:52:20,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:20,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:20,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,897 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:52:20,897 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 454}
2022-05-09 15:52:20,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,898 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：454的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 526}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 454, 'nationalStandard': 255}
2022-05-09 15:52:20,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:52:20,912 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 454}
2022-05-09 15:52:20,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,912 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：454的记录已成功
2022-05-09 15:52:20,965 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:20,965 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:20,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:20,989 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:52:20,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:20,991 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:52:21,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,038 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,039 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,060 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:21,061 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:52:21,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,065 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:52:21,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:52:21,145 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:52:21,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,146 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 526]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 526}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:52:21,159 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:21,159 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [454]}
2022-05-09 15:52:21,160 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,160 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：454的记录
2022-05-09 15:52:21,204 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,205 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,205 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,214 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:21,215 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:52:21,215 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,217 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:52:21,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:21,228 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 526}
2022-05-09 15:52:21,229 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,241 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:21,241 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 526}, "name": "\u6c49EV"}}
2022-05-09 15:52:21,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,242 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：455
2022-05-09 15:52:21,285 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,285 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,286 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,294 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:21,294 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:52:21,294 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,295 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:52:21,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:21,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 526}
2022-05-09 15:52:21,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,317 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:21,318 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 526}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:52:21,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,319 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：456
2022-05-09 15:52:21,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:21,354 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [455, 456]}
2022-05-09 15:52:21,356 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,356 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：455, 456的记录
2022-05-09 15:52:21,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:21,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [526]}
2022-05-09 15:52:21,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,370 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：526的记录
2022-05-09 15:52:21,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:52:21,385 INFO [root] [key.py (post:21] - 传的参数是：{"id": 526, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:52:21,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,399 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:21,401 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:52:21,402 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,402 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：527
2022-05-09 15:52:21,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,446 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,447 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,459 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:21,459 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:52:21,460 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,460 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:52:21,469 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:21,470 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 527}
2022-05-09 15:52:21,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:21,484 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 527}, "name": "\u6c49EV"}}
2022-05-09 15:52:21,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,485 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：457
2022-05-09 15:52:21,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,544 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:21,544 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:52:21,544 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,544 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:52:21,553 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:21,554 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 457}
2022-05-09 15:52:21,554 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:21,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 457}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:52:21,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,568 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：400
2022-05-09 15:52:21,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:52:21,624 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 400}
2022-05-09 15:52:21,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,625 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：400的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 457}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 400}
2022-05-09 15:52:21,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:52:21,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 400}
2022-05-09 15:52:21,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,638 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：400的记录已成功
2022-05-09 15:52:21,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,685 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:21,712 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:52:21,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,715 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:52:21,765 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,766 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,786 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:21,787 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:52:21,788 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,789 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:52:21,838 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,839 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:21,862 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:52:21,863 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,865 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:52:21,915 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,917 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:21,940 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:52:21,943 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:21,943 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:52:21,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:21,996 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:21,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,012 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:22,013 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:52:22,013 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,014 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:52:22,061 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,061 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,062 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:52:22,111 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:52:22,112 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,113 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:52:22,163 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,164 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,227 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:52:22,228 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:52:22,228 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,229 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 457]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 457}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:52:22,241 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:22,242 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [400]}
2022-05-09 15:52:22,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,242 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：400的记录
2022-05-09 15:52:22,285 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,285 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,285 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,294 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:22,294 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:52:22,294 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,294 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:52:22,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:22,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 457}
2022-05-09 15:52:22,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:22,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 457}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:52:22,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,321 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：401
2022-05-09 15:52:22,363 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,364 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,364 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,373 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:22,374 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:52:22,374 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,375 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:52:22,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:52:22,386 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 457}
2022-05-09 15:52:22,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,401 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:22,401 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 457}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:52:22,402 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,402 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：402
2022-05-09 15:52:22,413 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:22,413 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [401, 402]}
2022-05-09 15:52:22,413 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,413 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：401, 402的记录
2022-05-09 15:52:22,426 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:22,427 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [457]}
2022-05-09 15:52:22,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,427 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：457的记录
2022-05-09 15:52:22,438 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:22,438 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [527]}
2022-05-09 15:52:22,438 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,438 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：527的记录
2022-05-09 15:52:22,485 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,486 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,495 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:22,496 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:52:22,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,497 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:52:22,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:22,510 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:52:22,510 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,511 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：375
2022-05-09 15:52:22,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,543 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:52:22,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 375}
2022-05-09 15:52:22,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,553 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：375的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 375, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:52:22,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:52:22,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 375}
2022-05-09 15:52:22,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,565 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：375的记录已成功
2022-05-09 15:52:22,590 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,591 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:22,601 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:52:22,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,602 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:52:22,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,635 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:22,651 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:52:22,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,652 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:52:22,696 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,697 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,697 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:22,713 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:52:22,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,714 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:52:22,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,759 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,772 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:52:22,773 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:52:22,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,774 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:52:22,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:52:22,870 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:52:22,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,871 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:52:22,919 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:22,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:22,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,934 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:52:22,935 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:52:22,936 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,936 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:52:22,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:22,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [375]}
2022-05-09 15:52:22,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:22,952 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：375的记录
2022-05-09 15:52:23,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:23,006 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:23,007 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:23,020 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:52:23,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,022 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:52:23,037 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:23,037 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:52:23,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,038 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：376
2022-05-09 15:52:23,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:52:23,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:52:23,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:52:23,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:52:23,094 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,094 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:52:23,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:52:23,106 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:52:23,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,106 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：377
2022-05-09 15:52:23,116 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:52:23,117 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [376, 377]}
2022-05-09 15:52:23,117 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:52:23,118 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：376, 377的记录
2022-05-09 15:53:14,563 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipaiapi/reports/index.html
2022-05-09 15:56:32,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 15:56:32,869 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "Y5CD"}
2022-05-09 15:56:32,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,869 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"3d0cd6b92f1d4096845e2231c7dfe873"}
2022-05-09 15:56:32,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:32,881 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:56:32,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:32,896 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:56:32,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,896 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：528
2022-05-09 15:56:32,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:32,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:32,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,957 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:56:32,957 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 528}
2022-05-09 15:56:32,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,957 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：528的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 528, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 15:56:32,965 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:32,966 INFO [root] [key.py (post:21] - 传的参数是：{"id": 528, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:56:32,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,981 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:56:32,982 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 528}
2022-05-09 15:56:32,982 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:32,982 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：528的记录已成功
2022-05-09 15:56:33,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,045 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:33,046 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 15:56:33,046 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,047 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 15:56:33,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:33,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [528]}
2022-05-09 15:56:33,059 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,059 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：528的记录
2022-05-09 15:56:33,067 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:33,068 INFO [root] [key.py (post:21] - 传的参数是：{"id": 528, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:56:33,068 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,081 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:56:33,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,081 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：529
2022-05-09 15:56:33,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:33,090 INFO [root] [key.py (post:21] - 传的参数是：{"id": 529, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 15:56:33,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,101 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 15:56:33,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,102 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：530
2022-05-09 15:56:33,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:33,119 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [529, 530]}
2022-05-09 15:56:33,119 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,119 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：529, 530的记录
2022-05-09 15:56:33,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:33,133 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:56:33,133 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,145 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:56:33,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,146 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：531
2022-05-09 15:56:33,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,187 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,188 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:33,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:56:33,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,195 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:56:33,203 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:33,203 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 531}
2022-05-09 15:56:33,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,217 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 531}, "name": "\u6c49EV"}}
2022-05-09 15:56:33,218 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,218 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：458
2022-05-09 15:56:33,261 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,262 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,262 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,273 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:56:33,274 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 458}
2022-05-09 15:56:33,274 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,275 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：458的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 531}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 458, 'nationalStandard': 255}
2022-05-09 15:56:33,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:56:33,287 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 458}
2022-05-09 15:56:33,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,287 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：458的记录已成功
2022-05-09 15:56:33,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,331 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,345 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:33,345 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 15:56:33,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,346 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 15:56:33,388 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,389 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,389 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:33,406 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 15:56:33,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,407 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 15:56:33,457 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:56:33,492 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 15:56:33,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,496 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 531]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 531}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 15:56:33,520 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:33,521 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [458]}
2022-05-09 15:56:33,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,523 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：458的记录
2022-05-09 15:56:33,569 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:33,581 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:56:33,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,582 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:56:33,593 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:33,594 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 531}
2022-05-09 15:56:33,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,607 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 531}, "name": "\u6c49EV"}}
2022-05-09 15:56:33,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,608 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：459
2022-05-09 15:56:33,648 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,648 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,649 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:33,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:56:33,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,657 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:56:33,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:33,665 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 531}
2022-05-09 15:56:33,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 531}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 15:56:33,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,677 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：460
2022-05-09 15:56:33,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:33,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [459, 460]}
2022-05-09 15:56:33,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,687 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：459, 460的记录
2022-05-09 15:56:33,698 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:33,698 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [531]}
2022-05-09 15:56:33,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,699 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：531的记录
2022-05-09 15:56:33,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 15:56:33,712 INFO [root] [key.py (post:21] - 传的参数是：{"id": 531, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 15:56:33,712 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,722 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 15:56:33,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,723 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：532
2022-05-09 15:56:33,760 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,760 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,761 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:33,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 15:56:33,769 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,769 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 15:56:33,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:33,777 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 532}
2022-05-09 15:56:33,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 532}, "name": "\u6c49EV"}}
2022-05-09 15:56:33,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,789 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：461
2022-05-09 15:56:33,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:33,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:56:33,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,836 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:56:33,844 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:33,844 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 461}
2022-05-09 15:56:33,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:33,855 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 461}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:56:33,856 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,856 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：403
2022-05-09 15:56:33,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:56:33,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 403}
2022-05-09 15:56:33,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,909 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：403的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 461}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 403}
2022-05-09 15:56:33,921 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:56:33,922 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 403}
2022-05-09 15:56:33,922 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,923 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：403的记录已成功
2022-05-09 15:56:33,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:33,962 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:33,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:33,984 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:56:33,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:33,986 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:56:34,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,031 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,047 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 15:56:34,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,047 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 15:56:34,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,089 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,105 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,105 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 15:56:34,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,105 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 15:56:34,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,165 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 15:56:34,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,166 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 15:56:34,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,212 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,231 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 15:56:34,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,232 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 15:56:34,281 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,281 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:56:34,336 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 15:56:34,337 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,338 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 15:56:34,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:56:34,432 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 15:56:34,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,434 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 461]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 461}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 15:56:34,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:34,447 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [403]}
2022-05-09 15:56:34,448 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,448 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：403的记录
2022-05-09 15:56:34,481 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,482 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,483 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:34,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:56:34,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,493 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:56:34,501 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:34,501 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 461}
2022-05-09 15:56:34,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:34,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 461}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:56:34,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,515 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：404
2022-05-09 15:56:34,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,546 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,548 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:34,557 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 15:56:34,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,558 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 15:56:34,568 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 15:56:34,569 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 461}
2022-05-09 15:56:34,569 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,582 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:34,583 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 461}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 15:56:34,584 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,584 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：405
2022-05-09 15:56:34,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:34,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [404, 405]}
2022-05-09 15:56:34,596 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,596 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：404, 405的记录
2022-05-09 15:56:34,606 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:34,606 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [461]}
2022-05-09 15:56:34,606 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,606 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：461的记录
2022-05-09 15:56:34,616 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:34,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [532]}
2022-05-09 15:56:34,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,617 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：532的记录
2022-05-09 15:56:34,653 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,654 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,660 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:34,661 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:56:34,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,661 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:56:34,670 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:34,671 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:56:34,671 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,671 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：378
2022-05-09 15:56:34,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 15:56:34,727 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 378}
2022-05-09 15:56:34,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,727 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：378的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 378, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 15:56:34,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 15:56:34,748 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 378}
2022-05-09 15:56:34,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,748 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：378的记录已成功
2022-05-09 15:56:34,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,795 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,809 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,810 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 15:56:34,810 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,811 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 15:56:34,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,874 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,874 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 15:56:34,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,875 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:56:34,924 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,925 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,926 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:34,942 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 15:56:34,942 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:34,943 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 15:56:34,992 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:34,993 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:34,994 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 15:56:35,011 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 15:56:35,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,012 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 15:56:35,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:35,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:35,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:56:35,116 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 15:56:35,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,117 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 15:56:35,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:35,170 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:35,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 15:56:35,182 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 15:56:35,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,183 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 15:56:35,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:35,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [378]}
2022-05-09 15:56:35,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,196 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：378的记录
2022-05-09 15:56:35,241 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:35,241 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:35,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:35,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:56:35,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,252 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:56:35,264 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:35,264 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 15:56:35,264 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,264 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：379
2022-05-09 15:56:35,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 15:56:35,311 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 15:56:35,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 15:56:35,322 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 15:56:35,322 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,323 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 15:56:35,339 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 15:56:35,339 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 15:56:35,339 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,340 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：380
2022-05-09 15:56:35,355 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 15:56:35,355 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [379, 380]}
2022-05-09 15:56:35,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 15:56:35,356 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：379, 380的记录
2022-05-09 16:14:50,950 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:17:12,730 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:17:37,978 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:18:04,388 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:18:36,989 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:18:44,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 16:18:44,063 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RXXG"}
2022-05-09 16:18:44,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,063 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2900e71982e347e3993854477b69d85f"}
2022-05-09 16:18:44,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,074 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,089 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:18:44,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,090 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：533
2022-05-09 16:18:44,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:18:44,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 533}
2022-05-09 16:18:44,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,155 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：533的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 533, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 16:18:44,163 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,164 INFO [root] [key.py (post:21] - 传的参数是：{"id": 533, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,164 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,177 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:18:44,177 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 533}
2022-05-09 16:18:44,177 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,177 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：533的记录已成功
2022-05-09 16:18:44,225 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,226 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,226 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:44,239 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 16:18:44,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,240 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 16:18:44,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:44,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [533]}
2022-05-09 16:18:44,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,253 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：533的记录
2022-05-09 16:18:44,261 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,261 INFO [root] [key.py (post:21] - 传的参数是：{"id": 533, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,261 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,276 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,276 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:18:44,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,277 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：534
2022-05-09 16:18:44,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,285 INFO [root] [key.py (post:21] - 传的参数是：{"id": 534, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,285 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,297 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 16:18:44,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,298 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：535
2022-05-09 16:18:44,309 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:44,309 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [534, 535]}
2022-05-09 16:18:44,311 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,311 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：534, 535的记录
2022-05-09 16:18:44,327 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,327 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,328 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,339 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,340 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:18:44,340 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,340 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：536
2022-05-09 16:18:44,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,396 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:44,396 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:18:44,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,397 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:18:44,407 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:44,407 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 536}
2022-05-09 16:18:44,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 536}, "name": "\u6c49EV"}}
2022-05-09 16:18:44,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,422 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：462
2022-05-09 16:18:44,466 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,468 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:18:44,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 462}
2022-05-09 16:18:44,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,481 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：462的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 536}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 462, 'nationalStandard': 255}
2022-05-09 16:18:44,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:18:44,493 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 462}
2022-05-09 16:18:44,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,494 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：462的记录已成功
2022-05-09 16:18:44,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:44,552 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 16:18:44,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,553 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 16:18:44,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,602 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,602 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:44,619 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 16:18:44,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,620 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 16:18:44,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:18:44,694 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 16:18:44,695 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,695 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 536]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 536}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 16:18:44,705 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:44,706 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [462]}
2022-05-09 16:18:44,706 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,706 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：462的记录
2022-05-09 16:18:44,748 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,748 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,749 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:44,760 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:18:44,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,760 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:18:44,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:44,771 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 536}
2022-05-09 16:18:44,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,783 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 536}, "name": "\u6c49EV"}}
2022-05-09 16:18:44,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,785 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：463
2022-05-09 16:18:44,828 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,828 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:44,837 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:18:44,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,837 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:18:44,847 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:44,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 536}
2022-05-09 16:18:44,850 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 536}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 16:18:44,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,871 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：464
2022-05-09 16:18:44,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:44,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [463, 464]}
2022-05-09 16:18:44,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,885 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：463, 464的记录
2022-05-09 16:18:44,897 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:44,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [536]}
2022-05-09 16:18:44,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,899 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：536的记录
2022-05-09 16:18:44,912 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:18:44,912 INFO [root] [key.py (post:21] - 传的参数是：{"id": 536, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:18:44,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,924 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:44,925 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:18:44,925 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,926 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：537
2022-05-09 16:18:44,969 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:44,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:44,970 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:44,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:18:44,979 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:44,979 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:18:44,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:44,988 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 537}
2022-05-09 16:18:44,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:45,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 537}, "name": "\u6c49EV"}}
2022-05-09 16:18:45,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,008 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：465
2022-05-09 16:18:45,053 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:45,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:18:45,062 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,063 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:18:45,071 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:45,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 465}
2022-05-09 16:18:45,072 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,086 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:45,087 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 465}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:18:45,089 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,090 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：406
2022-05-09 16:18:45,140 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:18:45,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 406}
2022-05-09 16:18:45,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,167 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：406的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 465}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 406}
2022-05-09 16:18:45,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:18:45,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 406}
2022-05-09 16:18:45,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,186 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：406的记录已成功
2022-05-09 16:18:45,229 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,230 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,244 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:45,245 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:18:45,245 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,245 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:18:45,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,289 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:45,303 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:18:45,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,304 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:18:45,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,348 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,349 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,364 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:45,364 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 16:18:45,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,365 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 16:18:45,408 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,408 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,409 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:45,423 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 16:18:45,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,424 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 16:18:45,468 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,469 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,469 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:45,484 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 16:18:45,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,486 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 16:18:45,534 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,590 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:18:45,590 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 16:18:45,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,591 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 16:18:45,634 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,634 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:18:45,694 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 16:18:45,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,695 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 465]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 465}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 16:18:45,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:45,707 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [406]}
2022-05-09 16:18:45,707 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,708 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：406的记录
2022-05-09 16:18:45,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,751 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,760 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:45,761 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:18:45,761 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,761 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:18:45,771 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:45,772 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 465}
2022-05-09 16:18:45,772 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:45,786 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 465}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:18:45,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,787 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：407
2022-05-09 16:18:45,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:45,845 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:18:45,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,845 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:18:45,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:18:45,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 465}
2022-05-09 16:18:45,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:45,872 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 465}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:18:45,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,873 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：408
2022-05-09 16:18:45,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:45,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [407, 408]}
2022-05-09 16:18:45,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,885 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：407, 408的记录
2022-05-09 16:18:45,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:45,899 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [465]}
2022-05-09 16:18:45,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,900 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：465的记录
2022-05-09 16:18:45,910 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:45,910 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [537]}
2022-05-09 16:18:45,911 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,911 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：537的记录
2022-05-09 16:18:45,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:45,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:45,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:45,969 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:18:45,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,970 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:18:45,987 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:45,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:18:45,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:45,988 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：381
2022-05-09 16:18:46,037 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,038 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,038 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,050 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:18:46,050 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 381}
2022-05-09 16:18:46,050 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,051 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：381的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 381, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 16:18:46,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:18:46,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 381}
2022-05-09 16:18:46,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,063 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：381的记录已成功
2022-05-09 16:18:46,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,107 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:46,123 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 16:18:46,124 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,126 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 16:18:46,175 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,175 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,176 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:46,193 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 16:18:46,194 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,194 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:18:46,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,244 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,258 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:46,258 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 16:18:46,259 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,259 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:18:46,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,310 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,310 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,328 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:18:46,328 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 16:18:46,329 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,329 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 16:18:46,374 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,374 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,374 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,428 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:18:46,430 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 16:18:46,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,435 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 16:18:46,486 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,486 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,487 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:18:46,501 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 16:18:46,501 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,501 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 16:18:46,515 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:46,516 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [381]}
2022-05-09 16:18:46,516 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,516 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：381的记录
2022-05-09 16:18:46,562 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,564 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,577 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:46,577 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:18:46,578 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,578 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:18:46,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:46,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:18:46,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,592 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：382
2022-05-09 16:18:46,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:18:46,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:18:46,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:18:46,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:18:46,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,677 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:18:46,690 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:18:46,691 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 16:18:46,691 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,691 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：383
2022-05-09 16:18:46,705 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:18:46,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [382, 383]}
2022-05-09 16:18:46,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:18:46,705 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：382, 383的记录
2022-05-09 16:24:53,779 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:25:41,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 16:25:41,020 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "7JLW"}
2022-05-09 16:25:41,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,021 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2a6a55a8d9cf4e148e90eda7a7441c9a"}
2022-05-09 16:25:41,032 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,032 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:25:41,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,045 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：538
2022-05-09 16:25:41,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,102 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,122 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:25:41,123 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 538}
2022-05-09 16:25:41,124 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,126 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：538的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 538, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 16:25:41,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,140 INFO [root] [key.py (post:21] - 传的参数是：{"id": 538, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,141 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:25:41,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 538}
2022-05-09 16:25:41,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,155 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：538的记录已成功
2022-05-09 16:25:41,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:41,216 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 16:25:41,216 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,217 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 16:25:41,229 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:41,230 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [538]}
2022-05-09 16:25:41,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,230 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：538的记录
2022-05-09 16:25:41,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,239 INFO [root] [key.py (post:21] - 传的参数是：{"id": 538, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,253 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:25:41,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,254 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：539
2022-05-09 16:25:41,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,263 INFO [root] [key.py (post:21] - 传的参数是：{"id": 539, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,276 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 16:25:41,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,276 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：540
2022-05-09 16:25:41,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:41,290 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [539, 540]}
2022-05-09 16:25:41,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,290 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：539, 540的记录
2022-05-09 16:25:41,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,304 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,316 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,317 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:25:41,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,317 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：541
2022-05-09 16:25:41,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,370 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:41,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:25:41,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,371 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:25:41,379 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:41,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 541}
2022-05-09 16:25:41,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,393 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,393 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 541}, "name": "\u6c49EV"}}
2022-05-09 16:25:41,394 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,394 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：466
2022-05-09 16:25:41,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,439 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:25:41,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 466}
2022-05-09 16:25:41,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,452 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：466的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 541}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 466, 'nationalStandard': 255}
2022-05-09 16:25:41,466 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:25:41,466 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 466}
2022-05-09 16:25:41,467 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,467 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：466的记录已成功
2022-05-09 16:25:41,527 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,542 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:41,542 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 16:25:41,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,543 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 16:25:41,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:41,603 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 16:25:41,604 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,605 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 16:25:41,647 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,647 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,679 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:25:41,679 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 16:25:41,679 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,680 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 541]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 541}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 16:25:41,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:41,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [466]}
2022-05-09 16:25:41,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,694 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：466的记录
2022-05-09 16:25:41,737 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,754 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:41,755 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:25:41,755 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,756 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:25:41,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:41,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 541}
2022-05-09 16:25:41,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,786 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 541}, "name": "\u6c49EV"}}
2022-05-09 16:25:41,787 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,787 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：467
2022-05-09 16:25:41,825 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,825 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:41,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:25:41,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,838 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:25:41,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:41,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 541}
2022-05-09 16:25:41,850 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,860 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 541}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 16:25:41,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,861 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：468
2022-05-09 16:25:41,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:41,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [467, 468]}
2022-05-09 16:25:41,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,871 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：467, 468的记录
2022-05-09 16:25:41,879 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:41,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [541]}
2022-05-09 16:25:41,880 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,880 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：541的记录
2022-05-09 16:25:41,891 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:25:41,891 INFO [root] [key.py (post:21] - 传的参数是：{"id": 541, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:25:41,892 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,902 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:25:41,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,902 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：542
2022-05-09 16:25:41,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:41,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:25:41,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,941 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:25:41,949 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:41,950 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 542}
2022-05-09 16:25:41,950 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:41,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 542}, "name": "\u6c49EV"}}
2022-05-09 16:25:41,959 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:41,959 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：469
2022-05-09 16:25:41,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:41,989 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:41,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:42,002 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:25:42,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,003 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:25:42,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:42,014 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 469}
2022-05-09 16:25:42,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,022 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:42,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 469}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:25:42,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,023 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：409
2022-05-09 16:25:42,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,056 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,057 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,067 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:25:42,067 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 409}
2022-05-09 16:25:42,067 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,068 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：409的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 469}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 409}
2022-05-09 16:25:42,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:25:42,077 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 409}
2022-05-09 16:25:42,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,078 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：409的记录已成功
2022-05-09 16:25:42,105 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,106 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,116 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:25:42,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,117 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:25:42,146 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,147 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,147 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,158 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:25:42,158 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,159 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:25:42,188 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,188 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,198 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 16:25:42,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,200 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 16:25:42,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,228 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,229 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,240 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 16:25:42,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,240 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 16:25:42,269 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,269 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,270 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,283 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 16:25:42,283 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,283 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 16:25:42,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,313 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,346 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:25:42,347 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 16:25:42,349 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,351 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 16:25:42,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,427 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:25:42,428 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 16:25:42,429 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,430 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 469]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 469}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 16:25:42,442 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:42,442 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [409]}
2022-05-09 16:25:42,443 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,443 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：409的记录
2022-05-09 16:25:42,474 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,475 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:42,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:25:42,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,486 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:25:42,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:42,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 469}
2022-05-09 16:25:42,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:42,505 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 469}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:25:42,505 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,505 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：410
2022-05-09 16:25:42,536 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,543 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:42,544 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:25:42,544 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,544 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:25:42,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:25:42,551 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 469}
2022-05-09 16:25:42,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,561 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:42,561 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 469}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:25:42,561 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,561 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：411
2022-05-09 16:25:42,569 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:42,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [410, 411]}
2022-05-09 16:25:42,570 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,570 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：410, 411的记录
2022-05-09 16:25:42,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:42,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [469]}
2022-05-09 16:25:42,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,588 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：469的记录
2022-05-09 16:25:42,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:42,597 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [542]}
2022-05-09 16:25:42,597 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,598 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：542的记录
2022-05-09 16:25:42,631 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,632 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:42,639 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:25:42,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,639 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:25:42,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:42,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:25:42,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,650 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：384
2022-05-09 16:25:42,679 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,679 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,680 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,688 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:25:42,689 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 384}
2022-05-09 16:25:42,689 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,690 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：384的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 384, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 16:25:42,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:25:42,698 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 384}
2022-05-09 16:25:42,698 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,698 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：384的记录已成功
2022-05-09 16:25:42,730 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,731 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,743 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,744 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 16:25:42,744 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,745 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 16:25:42,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,783 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,783 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 16:25:42,783 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,784 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:25:42,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,827 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 16:25:42,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,828 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:25:42,856 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,867 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:25:42,868 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 16:25:42,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,868 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 16:25:42,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:25:42,937 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 16:25:42,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,939 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 16:25:42,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:42,977 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:42,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:25:42,987 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 16:25:42,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,988 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 16:25:42,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:42,996 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [384]}
2022-05-09 16:25:42,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:42,997 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：384的记录
2022-05-09 16:25:43,027 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:43,028 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:43,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:43,037 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:25:43,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,038 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:25:43,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:43,048 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:25:43,049 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,049 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：385
2022-05-09 16:25:43,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:25:43,108 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:25:43,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,119 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:25:43,120 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:25:43,121 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,121 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:25:43,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:25:43,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 16:25:43,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,135 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：386
2022-05-09 16:25:43,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:25:43,145 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [385, 386]}
2022-05-09 16:25:43,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:25:43,145 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：385, 386的记录
2022-05-09 16:26:48,166 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:34:26,281 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 16:34:26,282 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "7GPS"}
2022-05-09 16:34:26,283 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,283 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"47b9c74dad6a421eb3ca611a808ce3a7"}
2022-05-09 16:34:26,293 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:26,293 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:34:26,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:26,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:34:26,322 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,322 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：543
2022-05-09 16:34:26,370 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,371 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:34:26,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 543}
2022-05-09 16:34:26,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,382 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：543的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 543, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 16:34:26,389 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:26,390 INFO [root] [key.py (post:21] - 传的参数是：{"id": 543, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:34:26,390 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,401 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:34:26,402 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 543}
2022-05-09 16:34:26,402 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,402 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：543的记录已成功
2022-05-09 16:34:26,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,450 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:26,468 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 16:34:26,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,469 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 16:34:26,482 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:26,482 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [543]}
2022-05-09 16:34:26,483 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,484 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：543的记录
2022-05-09 16:34:26,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:26,494 INFO [root] [key.py (post:21] - 传的参数是：{"id": 543, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:34:26,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:26,508 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:34:26,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,509 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：544
2022-05-09 16:34:26,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:26,520 INFO [root] [key.py (post:21] - 传的参数是：{"id": 544, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:34:26,521 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:26,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 16:34:26,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,537 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：545
2022-05-09 16:34:26,549 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:26,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [544, 545]}
2022-05-09 16:34:26,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,551 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：544, 545的记录
2022-05-09 16:34:26,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:26,568 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:34:26,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:26,580 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:34:26,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,581 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：546
2022-05-09 16:34:26,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,636 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:26,637 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:34:26,637 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,637 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:34:26,647 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:26,647 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 546}
2022-05-09 16:34:26,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:26,660 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 546}, "name": "\u6c49EV"}}
2022-05-09 16:34:26,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,662 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：470
2022-05-09 16:34:26,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:34:26,725 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 470}
2022-05-09 16:34:26,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,726 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：470的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 546}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 470, 'nationalStandard': 255}
2022-05-09 16:34:26,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:34:26,739 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 470}
2022-05-09 16:34:26,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,740 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：470的记录已成功
2022-05-09 16:34:26,781 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,781 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,797 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:26,798 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 16:34:26,799 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,801 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 16:34:26,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,846 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,863 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:26,863 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 16:34:26,863 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,864 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 16:34:26,912 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,912 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:26,913 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:34:26,945 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 16:34:26,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,946 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 546]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 546}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 16:34:26,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:26,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [470]}
2022-05-09 16:34:26,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:26,960 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：470的记录
2022-05-09 16:34:26,997 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:26,998 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,017 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:27,018 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:34:27,019 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,020 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:34:27,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:27,035 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 546}
2022-05-09 16:34:27,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,051 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 546}, "name": "\u6c49EV"}}
2022-05-09 16:34:27,052 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,053 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：471
2022-05-09 16:34:27,095 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,104 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:27,105 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:34:27,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,105 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:34:27,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:27,114 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 546}
2022-05-09 16:34:27,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,125 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 546}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 16:34:27,125 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,125 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：472
2022-05-09 16:34:27,135 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:27,135 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [471, 472]}
2022-05-09 16:34:27,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,135 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：471, 472的记录
2022-05-09 16:34:27,146 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:27,146 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [546]}
2022-05-09 16:34:27,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,147 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：546的记录
2022-05-09 16:34:27,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:34:27,158 INFO [root] [key.py (post:21] - 传的参数是：{"id": 546, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:34:27,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,171 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:34:27,171 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,171 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：547
2022-05-09 16:34:27,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,217 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,217 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:27,226 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:34:27,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,227 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:34:27,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:27,237 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 547}
2022-05-09 16:34:27,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,250 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 547}, "name": "\u6c49EV"}}
2022-05-09 16:34:27,250 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,251 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：473
2022-05-09 16:34:27,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,288 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,297 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:27,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:34:27,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,298 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:34:27,307 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:27,307 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 473}
2022-05-09 16:34:27,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,318 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 473}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:34:27,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,319 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：412
2022-05-09 16:34:27,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,355 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:34:27,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 412}
2022-05-09 16:34:27,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,368 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：412的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 473}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 412}
2022-05-09 16:34:27,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:34:27,380 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 412}
2022-05-09 16:34:27,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,381 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：412的记录已成功
2022-05-09 16:34:27,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,420 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:27,432 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:34:27,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,433 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:34:27,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,465 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,466 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,478 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:27,479 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:34:27,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,480 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:34:27,526 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,527 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,527 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:27,541 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 16:34:27,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,542 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 16:34:27,588 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,589 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,590 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:27,607 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 16:34:27,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,609 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 16:34:27,655 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,656 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:27,675 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 16:34:27,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,677 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 16:34:27,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,725 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:34:27,775 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 16:34:27,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,777 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 16:34:27,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,888 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:34:27,888 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 16:34:27,889 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,890 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 473]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 473}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 16:34:27,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:27,902 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [412]}
2022-05-09 16:34:27,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,902 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：412的记录
2022-05-09 16:34:27,944 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:27,945 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:27,945 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,952 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:27,953 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:34:27,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,954 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:34:27,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:27,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 473}
2022-05-09 16:34:27,965 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:27,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 473}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:34:27,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:27,977 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：413
2022-05-09 16:34:28,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,031 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:28,042 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:34:28,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,043 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:34:28,054 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:34:28,055 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 473}
2022-05-09 16:34:28,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,068 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:28,068 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 473}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:34:28,069 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,069 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：414
2022-05-09 16:34:28,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:28,082 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [413, 414]}
2022-05-09 16:34:28,082 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,083 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：413, 414的记录
2022-05-09 16:34:28,098 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:28,099 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [473]}
2022-05-09 16:34:28,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,100 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：473的记录
2022-05-09 16:34:28,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:28,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [547]}
2022-05-09 16:34:28,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,113 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：547的记录
2022-05-09 16:34:28,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,168 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,168 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,179 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:28,179 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:34:28,179 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,179 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:34:28,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:28,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:34:28,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,200 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：387
2022-05-09 16:34:28,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,254 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:34:28,268 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 387}
2022-05-09 16:34:28,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,269 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：387的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 387, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 16:34:28,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:34:28,283 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 387}
2022-05-09 16:34:28,283 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,284 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：387的记录已成功
2022-05-09 16:34:28,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,346 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:28,347 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 16:34:28,347 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,348 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 16:34:28,391 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,403 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:28,403 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 16:34:28,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,404 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:34:28,443 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,443 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,444 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,456 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:28,456 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 16:34:28,457 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,457 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:34:28,492 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,493 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:34:28,506 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 16:34:28,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,507 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 16:34:28,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:34:28,574 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 16:34:28,575 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,575 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 16:34:28,617 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,617 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,617 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,629 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:34:28,629 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 16:34:28,629 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,629 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 16:34:28,641 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:28,641 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [387]}
2022-05-09 16:34:28,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,642 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：387的记录
2022-05-09 16:34:28,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:28,692 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:34:28,692 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,693 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:34:28,705 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:28,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:34:28,706 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,706 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：388
2022-05-09 16:34:28,772 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:34:28,772 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:34:28,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,784 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:34:28,785 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:34:28,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,786 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:34:28,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:34:28,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 16:34:28,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,807 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：389
2022-05-09 16:34:28,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:34:28,818 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [388, 389]}
2022-05-09 16:34:28,818 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:34:28,818 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：388, 389的记录
2022-05-09 16:45:43,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 16:45:43,785 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "7EXY"}
2022-05-09 16:45:43,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,786 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"35ab4fae952a4ade9451e10b2c6202d8"}
2022-05-09 16:45:43,796 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:43,796 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:45:43,796 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,810 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:43,810 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:45:43,810 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,811 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：548
2022-05-09 16:45:43,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:43,860 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:43,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:45:43,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 548}
2022-05-09 16:45:43,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,872 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：548的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 548, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 16:45:43,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:43,884 INFO [root] [key.py (post:21] - 传的参数是：{"id": 548, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:45:43,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:45:43,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 548}
2022-05-09 16:45:43,895 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,896 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：548的记录已成功
2022-05-09 16:45:43,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:43,944 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:43,945 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:43,959 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 16:45:43,959 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,960 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 16:45:43,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:43,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [548]}
2022-05-09 16:45:43,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:43,974 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：548的记录
2022-05-09 16:45:43,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:43,984 INFO [root] [key.py (post:21] - 传的参数是：{"id": 548, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:45:43,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,000 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,001 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:45:44,001 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,002 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：549
2022-05-09 16:45:44,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:44,011 INFO [root] [key.py (post:21] - 传的参数是：{"id": 549, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:45:44,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,026 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 16:45:44,027 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,027 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：550
2022-05-09 16:45:44,037 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:44,039 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [549, 550]}
2022-05-09 16:45:44,039 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,039 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：549, 550的记录
2022-05-09 16:45:44,057 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:44,058 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:45:44,058 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,070 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,071 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:45:44,071 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,071 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：551
2022-05-09 16:45:44,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,107 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,107 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:44,115 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:45:44,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,116 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:45:44,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:44,124 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 551}
2022-05-09 16:45:44,125 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,136 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 551}, "name": "\u6c49EV"}}
2022-05-09 16:45:44,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,137 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：474
2022-05-09 16:45:44,177 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,178 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,178 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,188 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:45:44,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 474}
2022-05-09 16:45:44,189 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,189 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：474的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 551}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 474, 'nationalStandard': 255}
2022-05-09 16:45:44,200 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:45:44,200 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 474}
2022-05-09 16:45:44,200 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,201 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：474的记录已成功
2022-05-09 16:45:44,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,240 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,252 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:44,253 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 16:45:44,253 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,254 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 16:45:44,293 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,294 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,295 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,316 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:44,316 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 16:45:44,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,318 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 16:45:44,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:45:44,387 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 16:45:44,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,388 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 551]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 551}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 16:45:44,398 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:44,399 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [474]}
2022-05-09 16:45:44,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,400 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：474的记录
2022-05-09 16:45:44,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,441 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:44,450 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:45:44,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,451 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:45:44,459 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:44,460 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 551}
2022-05-09 16:45:44,460 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,471 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,471 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 551}, "name": "\u6c49EV"}}
2022-05-09 16:45:44,472 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,472 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：475
2022-05-09 16:45:44,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,519 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:44,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:45:44,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,529 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:45:44,538 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:44,539 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 551}
2022-05-09 16:45:44,539 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 551}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 16:45:44,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,551 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：476
2022-05-09 16:45:44,562 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:44,563 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [475, 476]}
2022-05-09 16:45:44,563 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,563 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：475, 476的记录
2022-05-09 16:45:44,573 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:44,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [551]}
2022-05-09 16:45:44,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,574 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：551的记录
2022-05-09 16:45:44,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:45:44,586 INFO [root] [key.py (post:21] - 传的参数是：{"id": 551, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:45:44,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,598 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,599 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:45:44,599 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,599 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：552
2022-05-09 16:45:44,646 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,647 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:44,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:45:44,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,658 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:45:44,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:44,669 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 552}
2022-05-09 16:45:44,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 552}, "name": "\u6c49EV"}}
2022-05-09 16:45:44,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,684 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：477
2022-05-09 16:45:44,731 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,741 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:44,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:45:44,742 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,742 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:45:44,752 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:44,753 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 477}
2022-05-09 16:45:44,753 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,765 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:44,766 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 477}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:45:44,766 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,767 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：415
2022-05-09 16:45:44,810 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,811 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,811 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,822 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:45:44,823 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 415}
2022-05-09 16:45:44,823 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,824 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：415的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 477}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 415}
2022-05-09 16:45:44,837 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:45:44,838 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 415}
2022-05-09 16:45:44,838 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,838 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：415的记录已成功
2022-05-09 16:45:44,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,882 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:44,898 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:45:44,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,900 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:45:44,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:44,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:44,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:44,963 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:45:44,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:44,964 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:45:45,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,032 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 16:45:45,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,032 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 16:45:45,076 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,077 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,092 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 16:45:45,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,093 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 16:45:45,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,152 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,153 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 16:45:45,153 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,154 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 16:45:45,189 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,190 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,191 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:45:45,238 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 16:45:45,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,239 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 16:45:45,279 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,280 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,352 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:45:45,352 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 16:45:45,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,353 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 477]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 477}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 16:45:45,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:45,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [415]}
2022-05-09 16:45:45,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,367 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：415的记录
2022-05-09 16:45:45,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,416 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:45,425 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:45:45,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,425 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:45:45,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:45,437 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 477}
2022-05-09 16:45:45,437 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,448 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:45,449 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 477}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:45:45,449 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,450 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：416
2022-05-09 16:45:45,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,498 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:45,510 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:45:45,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,511 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:45:45,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:45:45,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 477}
2022-05-09 16:45:45,527 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,542 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:45,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 477}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:45:45,543 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,543 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：417
2022-05-09 16:45:45,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:45,556 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [416, 417]}
2022-05-09 16:45:45,557 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,557 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：416, 417的记录
2022-05-09 16:45:45,571 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:45,571 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [477]}
2022-05-09 16:45:45,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,571 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：477的记录
2022-05-09 16:45:45,583 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:45,584 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [552]}
2022-05-09 16:45:45,584 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,585 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：552的记录
2022-05-09 16:45:45,634 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,634 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,643 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:45,644 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:45:45,644 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,644 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:45:45,658 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:45,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:45:45,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,659 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：390
2022-05-09 16:45:45,703 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:45:45,716 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 390}
2022-05-09 16:45:45,717 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,717 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：390的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 390, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 16:45:45,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:45:45,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 390}
2022-05-09 16:45:45,730 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,730 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：390的记录已成功
2022-05-09 16:45:45,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,787 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,788 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 16:45:45,788 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,788 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 16:45:45,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,849 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 16:45:45,850 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,851 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:45:45,897 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,915 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 16:45:45,915 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,916 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:45:45,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:45,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:45,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:45:45,972 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 16:45:45,972 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:45,972 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 16:45:46,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:46,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:46,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:45:46,075 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 16:45:46,076 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,076 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 16:45:46,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:46,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:46,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:45:46,157 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 16:45:46,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,157 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 16:45:46,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:46,169 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [390]}
2022-05-09 16:45:46,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,170 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：390的记录
2022-05-09 16:45:46,214 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:46,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:46,215 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:46,225 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:45:46,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,226 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:45:46,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:46,241 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:45:46,241 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,242 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：391
2022-05-09 16:45:46,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:45:46,286 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:45:46,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,302 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:45:46,303 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:45:46,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,306 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:45:46,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:45:46,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 16:45:46,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,324 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：392
2022-05-09 16:45:46,337 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:45:46,338 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [391, 392]}
2022-05-09 16:45:46,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:45:46,339 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：391, 392的记录
2022-05-09 16:51:08,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 16:51:08,459 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KS2D"}
2022-05-09 16:51:08,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,459 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2e51dd8f54374e58a8f4c94ca101c4ea"}
2022-05-09 16:51:08,468 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:08,468 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:51:08,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,485 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:08,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:51:08,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,486 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：553
2022-05-09 16:51:08,534 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:08,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:08,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,545 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:51:08,546 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 553}
2022-05-09 16:51:08,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,546 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：553的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 553, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 16:51:08,555 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:08,555 INFO [root] [key.py (post:21] - 传的参数是：{"id": 553, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:51:08,555 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:51:08,568 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 553}
2022-05-09 16:51:08,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,568 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：553的记录已成功
2022-05-09 16:51:08,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:08,627 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:08,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,645 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:08,645 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 16:51:08,647 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,647 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 16:51:08,663 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:08,664 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [553]}
2022-05-09 16:51:08,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,666 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：553的记录
2022-05-09 16:51:08,677 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:08,678 INFO [root] [key.py (post:21] - 传的参数是：{"id": 553, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:51:08,679 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,696 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:08,698 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:51:08,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,699 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：554
2022-05-09 16:51:08,709 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:08,710 INFO [root] [key.py (post:21] - 传的参数是：{"id": 554, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 16:51:08,710 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,737 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:08,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 16:51:08,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,739 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：555
2022-05-09 16:51:08,753 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:08,753 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [554, 555]}
2022-05-09 16:51:08,754 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,754 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：554, 555的记录
2022-05-09 16:51:08,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:08,777 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:51:08,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:08,794 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:51:08,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,795 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：556
2022-05-09 16:51:08,838 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:08,838 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:08,839 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,850 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:08,850 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:51:08,851 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,851 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:51:08,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:08,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 556}
2022-05-09 16:51:08,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,875 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:08,876 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 556}, "name": "\u6c49EV"}}
2022-05-09 16:51:08,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,876 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：478
2022-05-09 16:51:08,921 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:08,921 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:08,922 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,935 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:51:08,935 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 478}
2022-05-09 16:51:08,935 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,936 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：478的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 556}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 478, 'nationalStandard': 255}
2022-05-09 16:51:08,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:51:08,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 478}
2022-05-09 16:51:08,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:08,950 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：478的记录已成功
2022-05-09 16:51:08,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:08,994 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:08,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,008 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 16:51:09,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,009 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 16:51:09,067 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,068 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,068 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,085 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 16:51:09,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,087 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 16:51:09,134 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,134 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:51:09,168 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 16:51:09,169 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,169 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 556]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 556}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 16:51:09,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:09,183 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [478]}
2022-05-09 16:51:09,184 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,184 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：478的记录
2022-05-09 16:51:09,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,233 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:09,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:51:09,244 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,244 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:51:09,254 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:09,254 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 556}
2022-05-09 16:51:09,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:09,274 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 556}, "name": "\u6c49EV"}}
2022-05-09 16:51:09,274 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,275 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：479
2022-05-09 16:51:09,322 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,323 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,332 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:09,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:51:09,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,332 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:51:09,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:09,343 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 556}
2022-05-09 16:51:09,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,355 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:09,356 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 556}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 16:51:09,356 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,356 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：480
2022-05-09 16:51:09,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:09,368 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [479, 480]}
2022-05-09 16:51:09,369 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,370 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：479, 480的记录
2022-05-09 16:51:09,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:09,381 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [556]}
2022-05-09 16:51:09,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,381 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：556的记录
2022-05-09 16:51:09,407 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 16:51:09,408 INFO [root] [key.py (post:21] - 传的参数是：{"id": 556, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 16:51:09,408 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,417 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:09,417 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 16:51:09,418 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,418 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：557
2022-05-09 16:51:09,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,459 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:09,459 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 16:51:09,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,460 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 16:51:09,469 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:09,469 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 557}
2022-05-09 16:51:09,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,479 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:09,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 557}, "name": "\u6c49EV"}}
2022-05-09 16:51:09,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,480 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：481
2022-05-09 16:51:09,521 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,521 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:09,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:51:09,531 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,532 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:51:09,542 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:09,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 481}
2022-05-09 16:51:09,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,554 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:09,555 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 481}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:51:09,555 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,556 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：418
2022-05-09 16:51:09,594 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,594 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,608 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:51:09,609 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 418}
2022-05-09 16:51:09,610 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,611 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：418的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 481}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 418}
2022-05-09 16:51:09,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:51:09,625 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 418}
2022-05-09 16:51:09,626 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,626 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：418的记录已成功
2022-05-09 16:51:09,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,688 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:51:09,688 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,689 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:51:09,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,730 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,730 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,745 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 16:51:09,745 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,745 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 16:51:09,787 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,788 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,801 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,802 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 16:51:09,802 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,802 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 16:51:09,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,847 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,864 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,864 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 16:51:09,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,865 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 16:51:09,910 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,911 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,911 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,925 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:09,926 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 16:51:09,926 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:09,926 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 16:51:09,970 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:09,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:09,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:51:10,023 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 16:51:10,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,025 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 16:51:10,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,079 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:51:10,142 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 16:51:10,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,142 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 481]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 481}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 16:51:10,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:10,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [418]}
2022-05-09 16:51:10,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,155 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：418的记录
2022-05-09 16:51:10,200 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,200 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,201 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:10,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:51:10,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,209 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:51:10,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:10,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 481}
2022-05-09 16:51:10,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:10,237 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 481}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:51:10,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,237 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：419
2022-05-09 16:51:10,281 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,281 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:10,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 16:51:10,291 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,292 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 16:51:10,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 16:51:10,302 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 481}
2022-05-09 16:51:10,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:10,316 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 481}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 16:51:10,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,317 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：420
2022-05-09 16:51:10,328 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:10,328 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [419, 420]}
2022-05-09 16:51:10,329 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,329 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：419, 420的记录
2022-05-09 16:51:10,343 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:10,344 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [481]}
2022-05-09 16:51:10,344 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,345 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：481的记录
2022-05-09 16:51:10,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:10,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [557]}
2022-05-09 16:51:10,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,359 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：557的记录
2022-05-09 16:51:10,407 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,407 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,408 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,418 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:10,418 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:51:10,418 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,418 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:51:10,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:10,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:51:10,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,433 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：393
2022-05-09 16:51:10,478 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 16:51:10,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 393}
2022-05-09 16:51:10,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,495 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：393的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 393, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 16:51:10,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 16:51:10,508 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 393}
2022-05-09 16:51:10,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,508 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：393的记录已成功
2022-05-09 16:51:10,553 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,553 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,554 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,566 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:10,566 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 16:51:10,567 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,567 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 16:51:10,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,619 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,633 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:10,634 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 16:51:10,634 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,635 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:51:10,708 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,709 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,710 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,727 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:10,727 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 16:51:10,728 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,729 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 16:51:10,778 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,780 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,797 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 16:51:10,798 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 16:51:10,799 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,800 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 16:51:10,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,845 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,846 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:51:10,904 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 16:51:10,905 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,906 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 16:51:10,953 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:10,954 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:10,954 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,967 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 16:51:10,967 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 16:51:10,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,968 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 16:51:10,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:10,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [393]}
2022-05-09 16:51:10,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:10,980 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：393的记录
2022-05-09 16:51:11,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:11,026 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:11,027 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:11,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:51:11,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,045 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:51:11,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:11,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 16:51:11,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,063 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：394
2022-05-09 16:51:11,111 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 16:51:11,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 16:51:11,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 16:51:11,125 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 16:51:11,125 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,125 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 16:51:11,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 16:51:11,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 16:51:11,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,138 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：395
2022-05-09 16:51:11,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 16:51:11,152 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [394, 395]}
2022-05-09 16:51:11,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 16:51:11,152 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：394, 395的记录
2022-05-09 16:53:00,793 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 16:53:26,760 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 17:02:18,910 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:02:18,910 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "VL7E"}
2022-05-09 17:02:18,910 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:18,910 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"71b7f8e6dedd4177a4f8c1591eba5307"}
2022-05-09 17:02:18,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:18,921 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:02:18,921 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,119 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:02:19,121 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,122 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：558
2022-05-09 17:02:19,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,184 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:02:19,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 558}
2022-05-09 17:02:19,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,205 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：558的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 558, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:02:19,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:19,218 INFO [root] [key.py (post:21] - 传的参数是：{"id": 558, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:02:19,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:02:19,234 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 558}
2022-05-09 17:02:19,235 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,235 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：558的记录已成功
2022-05-09 17:02:19,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,289 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:19,301 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:02:19,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,302 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:02:19,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:19,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [558]}
2022-05-09 17:02:19,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,316 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：558的记录
2022-05-09 17:02:19,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:19,323 INFO [root] [key.py (post:21] - 传的参数是：{"id": 558, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:02:19,323 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,334 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,335 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:02:19,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,335 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：559
2022-05-09 17:02:19,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:19,342 INFO [root] [key.py (post:21] - 传的参数是：{"id": 559, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:02:19,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,355 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:02:19,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,355 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：560
2022-05-09 17:02:19,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:19,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [559, 560]}
2022-05-09 17:02:19,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,368 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：559, 560的记录
2022-05-09 17:02:19,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:19,381 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:02:19,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,394 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:02:19,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,395 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：561
2022-05-09 17:02:19,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,442 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:19,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:02:19,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,452 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:02:19,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:19,461 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 561}
2022-05-09 17:02:19,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,474 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 561}, "name": "\u6c49EV"}}
2022-05-09 17:02:19,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,474 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：482
2022-05-09 17:02:19,521 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,521 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,533 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:02:19,534 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 482}
2022-05-09 17:02:19,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,534 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：482的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 561}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 482, 'nationalStandard': 255}
2022-05-09 17:02:19,547 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:02:19,547 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 482}
2022-05-09 17:02:19,548 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,548 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：482的记录已成功
2022-05-09 17:02:19,590 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,590 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,609 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:19,609 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:02:19,609 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,610 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:02:19,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,656 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:19,673 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:02:19,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,674 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:02:19,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,741 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:02:19,741 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:02:19,742 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,743 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 561]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 561}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:02:19,754 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:19,755 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [482]}
2022-05-09 17:02:19,755 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,756 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：482的记录
2022-05-09 17:02:19,793 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,794 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:19,805 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:02:19,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,806 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:02:19,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:19,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 561}
2022-05-09 17:02:19,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,830 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,831 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 561}, "name": "\u6c49EV"}}
2022-05-09 17:02:19,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,833 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：483
2022-05-09 17:02:19,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:19,906 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:19,907 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:19,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:02:19,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,920 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:02:19,930 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:19,931 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 561}
2022-05-09 17:02:19,931 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:19,944 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 561}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:02:19,944 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,944 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：484
2022-05-09 17:02:19,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:19,958 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [483, 484]}
2022-05-09 17:02:19,958 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,959 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：483, 484的记录
2022-05-09 17:02:19,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:19,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [561]}
2022-05-09 17:02:19,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:19,973 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：561的记录
2022-05-09 17:02:19,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:02:19,998 INFO [root] [key.py (post:21] - 传的参数是：{"id": 561, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:02:19,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:20,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:02:20,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,010 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：562
2022-05-09 17:02:20,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,047 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:20,058 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:02:20,059 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,059 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:02:20,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:20,073 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 562}
2022-05-09 17:02:20,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,086 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:20,087 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 562}, "name": "\u6c49EV"}}
2022-05-09 17:02:20,087 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,088 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：485
2022-05-09 17:02:20,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,121 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:20,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:02:20,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,132 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:02:20,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:20,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 485}
2022-05-09 17:02:20,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:20,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 485}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:02:20,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,157 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：421
2022-05-09 17:02:20,206 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,206 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,207 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,222 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:02:20,223 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 421}
2022-05-09 17:02:20,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,226 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：421的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 485}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 421}
2022-05-09 17:02:20,254 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:02:20,254 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 421}
2022-05-09 17:02:20,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,255 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：421的记录已成功
2022-05-09 17:02:20,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,303 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,304 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:20,318 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:02:20,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,319 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:02:20,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,383 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:20,384 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:02:20,384 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,384 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:02:20,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,431 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,445 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:20,445 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:02:20,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,446 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:02:20,490 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,490 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,491 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:20,506 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:02:20,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,506 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:02:20,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,551 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:20,566 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:02:20,566 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,567 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:02:20,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,615 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,666 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:02:20,666 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:02:20,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,669 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:02:20,710 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,710 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,711 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:02:20,774 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:02:20,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,775 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 485]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 485}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:02:20,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:20,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [421]}
2022-05-09 17:02:20,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,793 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：421的记录
2022-05-09 17:02:20,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,852 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,863 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:20,864 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:02:20,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,864 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:02:20,872 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:20,872 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 485}
2022-05-09 17:02:20,873 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:20,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 485}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:02:20,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,884 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：422
2022-05-09 17:02:20,918 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:20,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:20,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,926 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:20,927 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:02:20,927 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,927 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:02:20,935 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:02:20,936 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 485}
2022-05-09 17:02:20,936 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:20,945 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 485}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:02:20,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,946 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：423
2022-05-09 17:02:20,957 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:20,958 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [422, 423]}
2022-05-09 17:02:20,958 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,958 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：422, 423的记录
2022-05-09 17:02:20,970 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:20,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [485]}
2022-05-09 17:02:20,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,971 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：485的记录
2022-05-09 17:02:20,981 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:20,982 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [562]}
2022-05-09 17:02:20,982 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:20,983 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：562的记录
2022-05-09 17:02:21,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,034 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:21,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:02:21,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,044 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:02:21,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:21,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:02:21,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,066 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：396
2022-05-09 17:02:21,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,114 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:02:21,128 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 396}
2022-05-09 17:02:21,128 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,129 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：396的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 396, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:02:21,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:02:21,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 396}
2022-05-09 17:02:21,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,144 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：396的记录已成功
2022-05-09 17:02:21,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,235 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:21,236 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:02:21,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,238 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:02:21,272 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,273 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,273 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:21,285 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:02:21,285 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,286 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:02:21,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,320 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:21,331 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:02:21,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,333 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:02:21,367 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:02:21,382 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:02:21,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,382 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:02:21,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,426 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,482 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:02:21,483 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:02:21,483 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,484 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:02:21,516 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,517 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,517 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,526 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:02:21,527 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:02:21,527 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,527 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:02:21,536 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:21,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [396]}
2022-05-09 17:02:21,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,537 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：396的记录
2022-05-09 17:02:21,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,566 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:21,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:02:21,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,573 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:02:21,589 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:21,589 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:02:21,589 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,590 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：397
2022-05-09 17:02:21,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:02:21,635 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:02:21,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:02:21,644 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:02:21,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,645 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:02:21,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:02:21,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:02:21,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,659 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：398
2022-05-09 17:02:21,670 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:02:21,671 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [397, 398]}
2022-05-09 17:02:21,671 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:02:21,671 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：397, 398的记录
2022-05-09 17:03:57,985 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:03:57,985 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LWG6"}
2022-05-09 17:03:57,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:57,985 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"58a798ef32a148da8bbde11ac0c457f8"}
2022-05-09 17:03:57,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:57,995 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:03:57,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:03:58,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,008 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：563
2022-05-09 17:03:58,060 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,061 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,061 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:03:58,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 563}
2022-05-09 17:03:58,072 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,073 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：563的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 563, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:03:58,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:58,081 INFO [root] [key.py (post:21] - 传的参数是：{"id": 563, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:03:58,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,093 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:03:58,093 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 563}
2022-05-09 17:03:58,093 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,093 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：563的记录已成功
2022-05-09 17:03:58,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:58,155 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:03:58,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,155 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:03:58,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:58,166 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [563]}
2022-05-09 17:03:58,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,167 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：563的记录
2022-05-09 17:03:58,174 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:58,175 INFO [root] [key.py (post:21] - 传的参数是：{"id": 563, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:03:58,175 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,187 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:03:58,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,188 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：564
2022-05-09 17:03:58,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:58,196 INFO [root] [key.py (post:21] - 传的参数是：{"id": 564, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:03:58,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:03:58,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,209 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：565
2022-05-09 17:03:58,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:58,221 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [564, 565]}
2022-05-09 17:03:58,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,221 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：564, 565的记录
2022-05-09 17:03:58,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:58,237 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:03:58,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,248 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:03:58,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,249 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：566
2022-05-09 17:03:58,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:58,301 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:03:58,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,302 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:03:58,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:58,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 566}
2022-05-09 17:03:58,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,324 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,325 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 566}, "name": "\u6c49EV"}}
2022-05-09 17:03:58,325 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,325 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：486
2022-05-09 17:03:58,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:03:58,383 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 486}
2022-05-09 17:03:58,383 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,383 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：486的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 566}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 486, 'nationalStandard': 255}
2022-05-09 17:03:58,396 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:03:58,397 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 486}
2022-05-09 17:03:58,397 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,397 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：486的记录已成功
2022-05-09 17:03:58,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,442 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,443 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,456 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:58,457 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:03:58,457 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,458 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:03:58,497 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,499 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,500 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:58,518 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:03:58,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,520 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:03:58,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,559 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,559 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,582 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:03:58,582 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:03:58,583 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,583 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 566]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 566}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:03:58,592 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:58,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [486]}
2022-05-09 17:03:58,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,592 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：486的记录
2022-05-09 17:03:58,630 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,631 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:58,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:03:58,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,641 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:03:58,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:58,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 566}
2022-05-09 17:03:58,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,661 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 566}, "name": "\u6c49EV"}}
2022-05-09 17:03:58,662 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,662 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：487
2022-05-09 17:03:58,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,708 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,708 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:58,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:03:58,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,719 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:03:58,728 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:58,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 566}
2022-05-09 17:03:58,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,743 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 566}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:03:58,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,744 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：488
2022-05-09 17:03:58,755 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:58,756 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [487, 488]}
2022-05-09 17:03:58,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,757 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：487, 488的记录
2022-05-09 17:03:58,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:58,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [566]}
2022-05-09 17:03:58,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,770 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：566的记录
2022-05-09 17:03:58,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:03:58,786 INFO [root] [key.py (post:21] - 传的参数是：{"id": 566, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:03:58,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,799 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:03:58,800 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,800 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：567
2022-05-09 17:03:58,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,845 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,856 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:58,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:03:58,858 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,858 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:03:58,867 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:58,867 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 567}
2022-05-09 17:03:58,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 567}, "name": "\u6c49EV"}}
2022-05-09 17:03:58,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,883 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：489
2022-05-09 17:03:58,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:58,930 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:58,931 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:58,940 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:03:58,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,940 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:03:58,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:58,950 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 489}
2022-05-09 17:03:58,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:58,967 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 489}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:03:58,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:58,968 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：424
2022-05-09 17:03:59,011 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,012 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,012 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:03:59,026 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 424}
2022-05-09 17:03:59,026 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,027 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：424的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 489}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 424}
2022-05-09 17:03:59,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:03:59,038 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 424}
2022-05-09 17:03:59,038 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,039 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：424的记录已成功
2022-05-09 17:03:59,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,087 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,102 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:03:59,103 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,103 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:03:59,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,142 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,156 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:03:59,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,157 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:03:59,206 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,206 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,207 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,224 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:03:59,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,226 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:03:59,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,287 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,287 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:03:59,288 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,288 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:03:59,327 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,327 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,339 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,339 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:03:59,339 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,340 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:03:59,378 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,428 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:03:59,428 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:03:59,429 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,429 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:03:59,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,474 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:03:59,541 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:03:59,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,543 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 489]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 489}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:03:59,560 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:59,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [424]}
2022-05-09 17:03:59,563 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,563 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：424的记录
2022-05-09 17:03:59,613 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,614 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,615 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:59,626 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:03:59,626 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,626 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:03:59,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:59,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 489}
2022-05-09 17:03:59,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,650 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:59,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 489}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:03:59,651 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,651 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：425
2022-05-09 17:03:59,695 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,695 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,705 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:59,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:03:59,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,706 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:03:59,714 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:03:59,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 489}
2022-05-09 17:03:59,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:59,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 489}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:03:59,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,727 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：426
2022-05-09 17:03:59,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:59,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [425, 426]}
2022-05-09 17:03:59,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,738 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：425, 426的记录
2022-05-09 17:03:59,749 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:59,750 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [489]}
2022-05-09 17:03:59,750 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,750 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：489的记录
2022-05-09 17:03:59,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:03:59,761 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [567]}
2022-05-09 17:03:59,761 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,762 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：567的记录
2022-05-09 17:03:59,818 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,819 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,819 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,828 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:03:59,828 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:03:59,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,828 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:03:59,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:03:59,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:03:59,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,840 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：399
2022-05-09 17:03:59,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,892 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:03:59,892 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 399}
2022-05-09 17:03:59,893 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,893 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：399的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 399, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:03:59,905 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:03:59,905 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 399}
2022-05-09 17:03:59,906 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,906 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：399的记录已成功
2022-05-09 17:03:59,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:03:59,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:03:59,952 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,967 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:03:59,968 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:03:59,968 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:03:59,968 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:04:00,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:04:00,024 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:04:00,026 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,027 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:04:00,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,104 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:04:00,128 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:04:00,129 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,131 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:04:00,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,182 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,202 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:04:00,203 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:04:00,205 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,206 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:04:00,256 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,257 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,258 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,316 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:04:00,317 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:04:00,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,319 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:04:00,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,368 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,369 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,383 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:04:00,384 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:04:00,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,385 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:04:00,398 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:04:00,398 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [399]}
2022-05-09 17:04:00,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,399 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：399的记录
2022-05-09 17:04:00,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,445 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:04:00,456 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:04:00,457 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,457 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:04:00,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:04:00,468 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:04:00,469 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,469 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：400
2022-05-09 17:04:00,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:04:00,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:04:00,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:04:00,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:04:00,519 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,519 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:04:00,533 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:04:00,533 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:04:00,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,534 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：401
2022-05-09 17:04:00,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:04:00,546 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [400, 401]}
2022-05-09 17:04:00,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:04:00,546 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：400, 401的记录
2022-05-09 17:07:05,147 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:07:05,148 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "S8K5"}
2022-05-09 17:07:05,148 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,148 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"158e7944f93e49afa303b696ba8f5549"}
2022-05-09 17:07:05,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,158 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,169 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:07:05,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,170 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：568
2022-05-09 17:07:05,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:07:05,232 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 568}
2022-05-09 17:07:05,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,232 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：568的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 568, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:07:05,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,240 INFO [root] [key.py (post:21] - 传的参数是：{"id": 568, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:07:05,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 568}
2022-05-09 17:07:05,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,252 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：568的记录已成功
2022-05-09 17:07:05,300 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,301 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:05,316 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:07:05,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,317 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:07:05,330 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:05,330 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [568]}
2022-05-09 17:07:05,331 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,332 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：568的记录
2022-05-09 17:07:05,341 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,341 INFO [root] [key.py (post:21] - 传的参数是：{"id": 568, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,341 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:07:05,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,362 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：569
2022-05-09 17:07:05,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,372 INFO [root] [key.py (post:21] - 传的参数是：{"id": 569, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:07:05,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,388 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：570
2022-05-09 17:07:05,400 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:05,400 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [569, 570]}
2022-05-09 17:07:05,401 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,401 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：569, 570的记录
2022-05-09 17:07:05,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,420 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:07:05,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,434 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：571
2022-05-09 17:07:05,477 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,477 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,478 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,485 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:05,486 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:07:05,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,486 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:07:05,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:05,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 571}
2022-05-09 17:07:05,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,509 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 571}, "name": "\u6c49EV"}}
2022-05-09 17:07:05,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,510 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：490
2022-05-09 17:07:05,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:07:05,564 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 490}
2022-05-09 17:07:05,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,565 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：490的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 571}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 490, 'nationalStandard': 255}
2022-05-09 17:07:05,578 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:07:05,578 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 490}
2022-05-09 17:07:05,579 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,579 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：490的记录已成功
2022-05-09 17:07:05,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:05,638 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:07:05,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,639 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:07:05,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,698 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:05,699 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:07:05,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,699 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:07:05,749 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,750 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,786 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:07:05,786 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:07:05,787 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,788 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 571]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 571}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:07:05,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:05,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [490]}
2022-05-09 17:07:05,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,802 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：490的记录
2022-05-09 17:07:05,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,847 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:05,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:07:05,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,860 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:07:05,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:05,870 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 571}
2022-05-09 17:07:05,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,885 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,886 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 571}, "name": "\u6c49EV"}}
2022-05-09 17:07:05,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,886 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：491
2022-05-09 17:07:05,924 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:05,924 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:05,925 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:05,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:07:05,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,934 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:07:05,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:05,944 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 571}
2022-05-09 17:07:05,944 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,955 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:05,956 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 571}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:07:05,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,956 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：492
2022-05-09 17:07:05,967 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:05,967 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [491, 492]}
2022-05-09 17:07:05,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,967 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：491, 492的记录
2022-05-09 17:07:05,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:05,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [571]}
2022-05-09 17:07:05,979 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:05,980 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：571的记录
2022-05-09 17:07:05,991 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:07:05,991 INFO [root] [key.py (post:21] - 传的参数是：{"id": 571, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:07:05,991 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:06,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:07:06,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,003 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：572
2022-05-09 17:07:06,052 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:06,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:07:06,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,063 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:07:06,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:06,073 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 572}
2022-05-09 17:07:06,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:06,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 572}, "name": "\u6c49EV"}}
2022-05-09 17:07:06,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,085 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：493
2022-05-09 17:07:06,117 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,118 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,118 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,125 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:06,125 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:07:06,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,126 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:07:06,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:06,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 493}
2022-05-09 17:07:06,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:06,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 493}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:07:06,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,151 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：427
2022-05-09 17:07:06,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,210 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:07:06,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 427}
2022-05-09 17:07:06,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,211 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：427的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 493}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 427}
2022-05-09 17:07:06,225 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:07:06,226 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 427}
2022-05-09 17:07:06,226 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,226 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：427的记录已成功
2022-05-09 17:07:06,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,276 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:06,290 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:07:06,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,291 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:07:06,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,342 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,356 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:06,356 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:07:06,356 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,357 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:07:06,400 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,400 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,401 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:06,415 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:07:06,416 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,416 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:07:06,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,461 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:06,477 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:07:06,477 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,477 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:07:06,526 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:06,553 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:07:06,554 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,556 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:07:06,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,608 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,609 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:07:06,662 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:07:06,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,664 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:07:06,709 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,709 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,709 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,772 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:07:06,773 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:07:06,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,775 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 493]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 493}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:07:06,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:06,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [427]}
2022-05-09 17:07:06,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,791 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：427的记录
2022-05-09 17:07:06,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,843 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:06,860 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:07:06,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,862 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:07:06,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:06,877 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 493}
2022-05-09 17:07:06,878 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,893 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:06,893 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 493}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:07:06,894 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,895 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：428
2022-05-09 17:07:06,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:06,943 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:06,944 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,954 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:06,955 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:07:06,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,957 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:07:06,970 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:07:06,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 493}
2022-05-09 17:07:06,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,987 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:06,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 493}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:07:06,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:06,989 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：429
2022-05-09 17:07:07,003 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:07,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [428, 429]}
2022-05-09 17:07:07,004 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,005 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：428, 429的记录
2022-05-09 17:07:07,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:07,020 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [493]}
2022-05-09 17:07:07,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,022 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：493的记录
2022-05-09 17:07:07,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:07,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [572]}
2022-05-09 17:07:07,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,045 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：572的记录
2022-05-09 17:07:07,104 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,105 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,116 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:07,117 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:07:07,117 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,117 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:07:07,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:07,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:07:07,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,132 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：402
2022-05-09 17:07:07,186 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,187 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:07:07,201 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 402}
2022-05-09 17:07:07,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,202 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：402的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 402, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:07:07,214 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:07:07,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 402}
2022-05-09 17:07:07,214 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,215 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：402的记录已成功
2022-05-09 17:07:07,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,258 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,259 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,271 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:07,272 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:07:07,272 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,272 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:07:07,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:07,325 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:07:07,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,326 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:07:07,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,384 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:07,385 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:07:07,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,387 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:07:07,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:07:07,453 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:07:07,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,455 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:07:07,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:07:07,588 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:07:07,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,590 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:07:07,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,646 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:07:07,660 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:07:07,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,662 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:07:07,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:07,677 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [402]}
2022-05-09 17:07:07,677 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,677 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：402的记录
2022-05-09 17:07:07,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,727 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:07,727 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:07:07,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,728 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:07:07,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:07,739 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:07:07,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,739 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：403
2022-05-09 17:07:07,778 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:07:07,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:07:07,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:07:07,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:07:07,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,789 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:07:07,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:07:07,801 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:07:07,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,802 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：404
2022-05-09 17:07:07,812 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:07:07,812 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [403, 404]}
2022-05-09 17:07:07,812 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:07:07,813 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：403, 404的记录
2022-05-09 17:44:59,621 WARNING [django.request] [log.py (log_response:241] - Not Found: /favicon.ico
2022-05-09 17:45:04,714 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:45:04,715 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "TFAQ"}
2022-05-09 17:45:04,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,715 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"479ec1e52d9d417eba374297bd2b7eeb"}
2022-05-09 17:45:04,743 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:04,743 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:45:04,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,754 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:04,754 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:45:04,754 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,754 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：573
2022-05-09 17:45:04,784 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:04,785 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:04,785 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,793 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:45:04,793 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 573}
2022-05-09 17:45:04,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,794 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：573的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 573, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:45:04,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:04,801 INFO [root] [key.py (post:21] - 传的参数是：{"id": 573, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:45:04,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,810 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:45:04,810 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 573}
2022-05-09 17:45:04,811 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,811 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：573的记录已成功
2022-05-09 17:45:04,844 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:04,844 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:04,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:04,855 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:45:04,856 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,856 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:45:04,864 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:04,865 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [573]}
2022-05-09 17:45:04,865 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,865 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：573的记录
2022-05-09 17:45:04,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:04,872 INFO [root] [key.py (post:21] - 传的参数是：{"id": 573, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:45:04,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:04,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:45:04,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,885 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：574
2022-05-09 17:45:04,891 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:04,892 INFO [root] [key.py (post:21] - 传的参数是：{"id": 574, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:45:04,892 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,902 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:04,903 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:45:04,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,903 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：575
2022-05-09 17:45:04,913 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:04,914 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [574, 575]}
2022-05-09 17:45:04,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,914 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：574, 575的记录
2022-05-09 17:45:04,961 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:04,962 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:45:04,962 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:04,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:45:04,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:04,973 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：576
2022-05-09 17:45:05,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,006 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,007 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:05,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:45:05,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,015 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:45:05,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:05,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 576}
2022-05-09 17:45:05,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,041 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 576}, "name": "\u6c49EV"}}
2022-05-09 17:45:05,041 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,041 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：494
2022-05-09 17:45:05,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,095 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:45:05,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 494}
2022-05-09 17:45:05,096 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,096 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：494的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 576}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 494, 'nationalStandard': 255}
2022-05-09 17:45:05,108 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:45:05,108 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 494}
2022-05-09 17:45:05,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,109 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：494的记录已成功
2022-05-09 17:45:05,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:05,165 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:45:05,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,165 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:45:05,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:05,228 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:45:05,229 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,230 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:45:05,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,275 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,306 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:45:05,306 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:45:05,307 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,307 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 576]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 576}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:45:05,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:05,320 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [494]}
2022-05-09 17:45:05,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,321 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：494的记录
2022-05-09 17:45:05,365 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,365 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,374 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:05,374 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:45:05,375 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,375 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:45:05,384 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:05,384 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 576}
2022-05-09 17:45:05,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,398 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 576}, "name": "\u6c49EV"}}
2022-05-09 17:45:05,398 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,398 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：495
2022-05-09 17:45:05,441 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,441 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:05,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:45:05,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,451 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:45:05,460 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:05,461 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 576}
2022-05-09 17:45:05,461 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 576}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:45:05,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,474 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：496
2022-05-09 17:45:05,485 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:05,486 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [495, 496]}
2022-05-09 17:45:05,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,486 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：495, 496的记录
2022-05-09 17:45:05,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:05,499 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [576]}
2022-05-09 17:45:05,499 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,499 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：576的记录
2022-05-09 17:45:05,510 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:45:05,510 INFO [root] [key.py (post:21] - 传的参数是：{"id": 576, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:45:05,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:45:05,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,529 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：577
2022-05-09 17:45:05,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,575 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:05,585 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:45:05,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,586 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:45:05,594 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:05,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 577}
2022-05-09 17:45:05,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,607 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 577}, "name": "\u6c49EV"}}
2022-05-09 17:45:05,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,608 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：497
2022-05-09 17:45:05,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:05,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:45:05,662 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,663 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:45:05,672 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:05,672 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 497}
2022-05-09 17:45:05,672 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:05,692 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 497}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:45:05,693 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,694 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：430
2022-05-09 17:45:05,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,743 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:45:05,756 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 430}
2022-05-09 17:45:05,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,757 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：430的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 497}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 430}
2022-05-09 17:45:05,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:45:05,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 430}
2022-05-09 17:45:05,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,771 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：430的记录已成功
2022-05-09 17:45:05,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,822 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,822 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:05,836 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:45:05,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,836 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:45:05,880 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,880 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:05,896 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:45:05,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,896 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:45:05,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:05,940 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:05,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,954 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:05,954 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:45:05,954 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:05,954 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:45:06,015 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:06,032 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:45:06,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,033 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:45:06,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,078 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,079 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:06,095 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:45:06,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,095 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:45:06,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,140 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,140 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:45:06,193 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:45:06,194 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,208 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:45:06,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,254 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,314 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:45:06,314 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:45:06,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,315 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 497]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 497}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:45:06,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:06,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [430]}
2022-05-09 17:45:06,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,333 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：430的记录
2022-05-09 17:45:06,445 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,445 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:06,456 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:45:06,456 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,457 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:45:06,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:06,468 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 497}
2022-05-09 17:45:06,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:06,481 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 497}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:45:06,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,482 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：431
2022-05-09 17:45:06,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,525 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:06,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:45:06,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,536 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:45:06,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:45:06,547 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 497}
2022-05-09 17:45:06,547 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:06,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 497}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:45:06,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,568 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：432
2022-05-09 17:45:06,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:06,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [431, 432]}
2022-05-09 17:45:06,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,587 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：431, 432的记录
2022-05-09 17:45:06,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:06,601 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [497]}
2022-05-09 17:45:06,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,602 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：497的记录
2022-05-09 17:45:06,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:06,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [577]}
2022-05-09 17:45:06,629 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,629 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：577的记录
2022-05-09 17:45:06,695 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,696 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,706 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:06,706 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:45:06,706 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,707 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:45:06,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:06,720 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:45:06,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,721 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：405
2022-05-09 17:45:06,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:45:06,783 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 405}
2022-05-09 17:45:06,783 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,784 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：405的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 405, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:45:06,799 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:45:06,799 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 405}
2022-05-09 17:45:06,799 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,799 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：405的记录已成功
2022-05-09 17:45:06,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:06,862 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:45:06,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,863 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:45:06,908 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,922 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:06,923 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:45:06,923 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,923 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:45:06,970 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:06,970 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:06,971 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,984 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:06,984 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:45:06,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:06,985 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:45:07,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:07,031 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:07,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:45:07,044 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:45:07,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,044 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:45:07,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:07,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:07,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:45:07,145 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:45:07,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,146 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:45:07,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:07,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:07,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:45:07,212 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:45:07,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,213 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:45:07,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:07,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [405]}
2022-05-09 17:45:07,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,225 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：405的记录
2022-05-09 17:45:07,273 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:07,274 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:07,274 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:07,289 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:45:07,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,290 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:45:07,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:07,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:45:07,304 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,304 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：406
2022-05-09 17:45:07,350 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:45:07,350 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:45:07,351 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:45:07,359 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:45:07,359 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,359 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:45:07,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:45:07,373 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:45:07,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,373 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：407
2022-05-09 17:45:07,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:45:07,386 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [406, 407]}
2022-05-09 17:45:07,386 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:45:07,386 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：406, 407的记录
2022-05-09 17:46:18,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:46:18,581 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "X293"}
2022-05-09 17:46:18,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,581 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"dada3bd7a9944b5dae3d04d76fc9d160"}
2022-05-09 17:46:18,590 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:18,591 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:46:18,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,602 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:18,603 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:46:18,603 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,603 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：578
2022-05-09 17:46:18,648 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:18,648 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:18,649 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:46:18,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 578}
2022-05-09 17:46:18,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,658 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：578的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 578, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:46:18,664 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:18,665 INFO [root] [key.py (post:21] - 传的参数是：{"id": 578, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:46:18,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:46:18,677 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 578}
2022-05-09 17:46:18,677 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,678 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：578的记录已成功
2022-05-09 17:46:18,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:18,727 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:18,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,740 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:18,741 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:46:18,741 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,741 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:46:18,753 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:18,753 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [578]}
2022-05-09 17:46:18,753 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,753 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：578的记录
2022-05-09 17:46:18,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:18,762 INFO [root] [key.py (post:21] - 传的参数是：{"id": 578, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:46:18,762 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:18,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:46:18,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,777 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：579
2022-05-09 17:46:18,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:18,785 INFO [root] [key.py (post:21] - 传的参数是：{"id": 579, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:46:18,785 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:18,811 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:46:18,812 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,812 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：580
2022-05-09 17:46:18,824 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:18,824 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [579, 580]}
2022-05-09 17:46:18,825 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,825 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：579, 580的记录
2022-05-09 17:46:18,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:18,841 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:46:18,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,854 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:18,855 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:46:18,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,855 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：581
2022-05-09 17:46:18,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:18,900 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:18,900 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,909 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:18,910 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:46:18,910 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,910 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:46:18,919 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:18,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 581}
2022-05-09 17:46:18,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:18,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 581}, "name": "\u6c49EV"}}
2022-05-09 17:46:18,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,934 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：498
2022-05-09 17:46:18,977 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:18,978 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:18,978 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,988 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:46:18,988 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 498}
2022-05-09 17:46:18,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:18,989 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：498的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 581}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 498, 'nationalStandard': 255}
2022-05-09 17:46:19,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:46:19,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 498}
2022-05-09 17:46:19,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,003 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：498的记录已成功
2022-05-09 17:46:19,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,057 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:46:19,057 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,058 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:46:19,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,105 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,105 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:46:19,106 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,106 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:46:19,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,151 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:46:19,181 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:46:19,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,182 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 581]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 581}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:46:19,196 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:19,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [498]}
2022-05-09 17:46:19,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,199 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：498的记录
2022-05-09 17:46:19,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,265 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,266 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:19,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:46:19,275 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,276 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:46:19,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:19,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 581}
2022-05-09 17:46:19,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:19,313 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 581}, "name": "\u6c49EV"}}
2022-05-09 17:46:19,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,316 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：499
2022-05-09 17:46:19,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,357 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,367 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:19,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:46:19,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,367 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:46:19,376 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:19,377 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 581}
2022-05-09 17:46:19,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:19,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 581}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:46:19,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,391 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：500
2022-05-09 17:46:19,403 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:19,403 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [499, 500]}
2022-05-09 17:46:19,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,403 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：499, 500的记录
2022-05-09 17:46:19,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:19,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [581]}
2022-05-09 17:46:19,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,416 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：581的记录
2022-05-09 17:46:19,427 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:46:19,428 INFO [root] [key.py (post:21] - 传的参数是：{"id": 581, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:46:19,428 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:19,439 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:46:19,439 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,440 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：582
2022-05-09 17:46:19,481 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,482 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,482 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:19,491 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:46:19,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,492 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:46:19,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:19,505 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 582}
2022-05-09 17:46:19,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:19,524 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 582}, "name": "\u6c49EV"}}
2022-05-09 17:46:19,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,524 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：501
2022-05-09 17:46:19,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,578 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:19,578 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:46:19,579 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,579 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:46:19,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:19,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 501}
2022-05-09 17:46:19,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:19,613 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 501}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:46:19,614 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,614 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：433
2022-05-09 17:46:19,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:46:19,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 433}
2022-05-09 17:46:19,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,674 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：433的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 501}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 433}
2022-05-09 17:46:19,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:46:19,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 433}
2022-05-09 17:46:19,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,687 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：433的记录已成功
2022-05-09 17:46:19,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,756 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:46:19,757 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,757 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:46:19,799 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,800 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,812 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,813 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:46:19,813 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,814 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:46:19,856 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,869 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,869 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:46:19,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,870 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:46:19,915 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,916 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,916 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,933 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:46:19,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,933 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:46:19,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:19,980 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:19,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,997 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:19,998 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:46:19,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:19,999 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:46:20,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:46:20,095 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:46:20,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,096 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:46:20,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,158 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:46:20,220 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:46:20,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,222 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 501]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 501}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:46:20,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:20,236 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [433]}
2022-05-09 17:46:20,236 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,237 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：433的记录
2022-05-09 17:46:20,283 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,284 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,284 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,294 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:20,295 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:46:20,295 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,295 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:46:20,305 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:20,306 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 501}
2022-05-09 17:46:20,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:20,319 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 501}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:46:20,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,320 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：434
2022-05-09 17:46:20,361 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,362 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,362 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,379 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:20,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:46:20,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,380 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:46:20,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:46:20,406 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 501}
2022-05-09 17:46:20,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:20,439 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 501}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:46:20,439 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,440 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：435
2022-05-09 17:46:20,454 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:20,467 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [434, 435]}
2022-05-09 17:46:20,467 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,467 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：434, 435的记录
2022-05-09 17:46:20,491 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:20,492 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [501]}
2022-05-09 17:46:20,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,492 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：501的记录
2022-05-09 17:46:20,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:20,506 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [582]}
2022-05-09 17:46:20,516 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,516 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：582的记录
2022-05-09 17:46:20,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,571 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,578 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:20,578 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:46:20,579 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,579 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:46:20,588 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:20,588 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:46:20,589 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,589 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：408
2022-05-09 17:46:20,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,623 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:46:20,637 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 408}
2022-05-09 17:46:20,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,638 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：408的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 408, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:46:20,647 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:46:20,647 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 408}
2022-05-09 17:46:20,647 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,648 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：408的记录已成功
2022-05-09 17:46:20,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:20,688 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:46:20,688 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,688 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:46:20,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:20,726 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:46:20,728 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,729 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:46:20,764 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,764 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:20,795 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:46:20,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,796 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:46:20,828 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,829 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,829 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:46:20,841 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:46:20,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,842 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:46:20,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,934 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:46:20,934 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:46:20,935 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,935 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:46:20,976 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:20,977 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:20,977 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:46:20,989 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:46:20,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:20,990 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:46:21,000 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:21,001 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [408]}
2022-05-09 17:46:21,001 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,001 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：408的记录
2022-05-09 17:46:21,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:21,047 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:21,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:21,064 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:46:21,065 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,066 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:46:21,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:21,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:46:21,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,087 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：409
2022-05-09 17:46:21,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:46:21,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:46:21,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:46:21,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:46:21,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,156 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:46:21,168 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:46:21,169 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:46:21,169 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,170 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：410
2022-05-09 17:46:21,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:46:21,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [409, 410]}
2022-05-09 17:46:21,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:46:21,186 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：409, 410的记录
2022-05-09 17:51:49,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:51:49,996 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XDXQ"}
2022-05-09 17:51:49,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:49,997 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b7177f90baa34458a589cf10933fd5b5"}
2022-05-09 17:51:50,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,005 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,005 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:51:50,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,017 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：583
2022-05-09 17:51:50,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,065 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,065 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:51:50,075 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 583}
2022-05-09 17:51:50,075 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,075 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：583的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 583, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:51:50,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,081 INFO [root] [key.py (post:21] - 传的参数是：{"id": 583, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,082 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:51:50,092 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 583}
2022-05-09 17:51:50,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,093 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：583的记录已成功
2022-05-09 17:51:50,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:50,154 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:51:50,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,155 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:51:50,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:50,167 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [583]}
2022-05-09 17:51:50,168 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,169 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：583的记录
2022-05-09 17:51:50,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,179 INFO [root] [key.py (post:21] - 传的参数是：{"id": 583, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,194 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:51:50,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,196 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：584
2022-05-09 17:51:50,205 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,206 INFO [root] [key.py (post:21] - 传的参数是：{"id": 584, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,206 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,223 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:51:50,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,225 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：585
2022-05-09 17:51:50,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:50,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [584, 585]}
2022-05-09 17:51:50,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,239 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：584, 585的记录
2022-05-09 17:51:50,259 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,259 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,260 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:51:50,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,276 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：586
2022-05-09 17:51:50,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,330 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:50,331 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:51:50,331 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,331 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:51:50,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:50,340 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 586}
2022-05-09 17:51:50,340 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,355 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 586}, "name": "\u6c49EV"}}
2022-05-09 17:51:50,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,358 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：502
2022-05-09 17:51:50,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:51:50,445 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 502}
2022-05-09 17:51:50,445 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,446 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：502的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 586}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 502, 'nationalStandard': 255}
2022-05-09 17:51:50,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:51:50,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 502}
2022-05-09 17:51:50,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,459 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：502的记录已成功
2022-05-09 17:51:50,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:50,525 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:51:50,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,526 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:51:50,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,574 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,576 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,598 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:50,599 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:51:50,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,604 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:51:50,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,651 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,685 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:51:50,686 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:51:50,686 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,687 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 586]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 586}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:51:50,700 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:50,701 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [502]}
2022-05-09 17:51:50,702 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,702 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：502的记录
2022-05-09 17:51:50,746 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,747 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:50,759 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:51:50,759 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,760 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:51:50,771 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:50,772 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 586}
2022-05-09 17:51:50,772 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,786 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 586}, "name": "\u6c49EV"}}
2022-05-09 17:51:50,787 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,788 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：503
2022-05-09 17:51:50,831 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,831 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:50,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:51:50,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,841 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:51:50,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:50,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 586}
2022-05-09 17:51:50,850 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,862 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 586}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:51:50,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,863 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：504
2022-05-09 17:51:50,873 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:50,873 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [503, 504]}
2022-05-09 17:51:50,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,874 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：503, 504的记录
2022-05-09 17:51:50,885 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:50,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [586]}
2022-05-09 17:51:50,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,885 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：586的记录
2022-05-09 17:51:50,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:51:50,896 INFO [root] [key.py (post:21] - 传的参数是：{"id": 586, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:51:50,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,908 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:51:50,909 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,909 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：587
2022-05-09 17:51:50,954 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:50,954 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:50,955 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:50,963 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:51:50,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,963 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:51:50,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:50,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 587}
2022-05-09 17:51:50,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,990 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:50,991 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 587}, "name": "\u6c49EV"}}
2022-05-09 17:51:50,991 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:50,991 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：505
2022-05-09 17:51:51,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,034 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,034 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:51,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:51:51,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,043 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:51:51,054 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:51,054 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 505}
2022-05-09 17:51:51,054 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,066 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:51,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 505}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:51:51,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,067 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：436
2022-05-09 17:51:51,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,114 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:51:51,125 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 436}
2022-05-09 17:51:51,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,126 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：436的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 505}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 436}
2022-05-09 17:51:51,140 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:51:51,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 436}
2022-05-09 17:51:51,141 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,142 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：436的记录已成功
2022-05-09 17:51:51,172 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:51,183 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:51:51,183 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,183 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:51:51,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:51,238 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:51:51,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,239 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:51:51,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,281 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:51,297 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:51:51,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,298 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:51:51,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,367 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:51,368 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:51:51,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,368 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:51:51,412 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,412 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,413 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:51,432 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:51:51,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,433 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:51:51,479 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,532 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:51:51,533 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:51:51,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,534 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:51:51,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,580 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,641 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:51:51,641 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:51:51,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,642 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 505]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 505}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:51:51,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:51,656 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [436]}
2022-05-09 17:51:51,656 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,657 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：436的记录
2022-05-09 17:51:51,700 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,701 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,709 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:51,709 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:51:51,709 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,710 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:51:51,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:51,721 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 505}
2022-05-09 17:51:51,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,733 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:51,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 505}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:51:51,734 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,734 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：437
2022-05-09 17:51:51,781 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,782 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,792 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:51,792 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:51:51,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,793 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:51:51,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:51:51,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 505}
2022-05-09 17:51:51,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,820 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:51,821 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 505}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:51:51,822 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,822 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：438
2022-05-09 17:51:51,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:51,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [437, 438]}
2022-05-09 17:51:51,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,836 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：437, 438的记录
2022-05-09 17:51:51,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:51,853 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [505]}
2022-05-09 17:51:51,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,854 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：505的记录
2022-05-09 17:51:51,867 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:51,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [587]}
2022-05-09 17:51:51,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,869 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：587的记录
2022-05-09 17:51:51,926 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,927 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,927 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,936 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:51,937 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:51:51,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,937 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:51:51,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:51,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:51:51,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:51,951 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：411
2022-05-09 17:51:51,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:51,999 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:51,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:51:52,013 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 411}
2022-05-09 17:51:52,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,015 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：411的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 411, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:51:52,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:51:52,027 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 411}
2022-05-09 17:51:52,027 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,028 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：411的记录已成功
2022-05-09 17:51:52,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,076 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,076 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:52,092 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:51:52,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,093 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:51:52,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,152 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:52,153 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:51:52,153 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,154 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:51:52,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,198 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:52,220 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:51:52,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,221 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:51:52,264 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,265 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,265 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,281 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:51:52,281 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:51:52,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,282 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:51:52,329 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,329 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,331 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:51:52,387 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:51:52,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,388 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:51:52,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:51:52,447 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:51:52,447 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,447 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:51:52,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:52,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [411]}
2022-05-09 17:51:52,462 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,463 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：411的记录
2022-05-09 17:51:52,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:52,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:51:52,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,519 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:51:52,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:52,531 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:51:52,532 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,532 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：412
2022-05-09 17:51:52,576 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:51:52,576 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:51:52,577 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:51:52,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:51:52,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,587 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:51:52,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:51:52,600 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:51:52,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,601 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：413
2022-05-09 17:51:52,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:51:52,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [412, 413]}
2022-05-09 17:51:52,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:51:52,613 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：412, 413的记录
2022-05-09 17:52:39,002 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 17:53:14,973 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:53:14,973 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "M55R"}
2022-05-09 17:53:14,974 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:14,974 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"d97507d7b72d45ca9e01ff39d9ebf1aa"}
2022-05-09 17:53:14,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:14,983 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:53:14,984 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:14,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:14,996 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:53:14,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:14,996 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：588
2022-05-09 17:53:15,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,062 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:53:15,074 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 588}
2022-05-09 17:53:15,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,074 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：588的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 588, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:53:15,082 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:15,082 INFO [root] [key.py (post:21] - 传的参数是：{"id": 588, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:53:15,082 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,095 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:53:15,096 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 588}
2022-05-09 17:53:15,096 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,096 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：588的记录已成功
2022-05-09 17:53:15,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:15,158 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:53:15,158 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,159 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:53:15,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:15,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [588]}
2022-05-09 17:53:15,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,173 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：588的记录
2022-05-09 17:53:15,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:15,182 INFO [root] [key.py (post:21] - 传的参数是：{"id": 588, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:53:15,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:53:15,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,198 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：589
2022-05-09 17:53:15,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:15,210 INFO [root] [key.py (post:21] - 传的参数是：{"id": 589, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:53:15,210 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,223 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:53:15,225 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,225 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：590
2022-05-09 17:53:15,238 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:15,238 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [589, 590]}
2022-05-09 17:53:15,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,239 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：589, 590的记录
2022-05-09 17:53:15,257 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:15,258 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:53:15,258 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,270 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,271 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:53:15,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,271 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：591
2022-05-09 17:53:15,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,324 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:15,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:53:15,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,325 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:53:15,334 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:15,335 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 591}
2022-05-09 17:53:15,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 591}, "name": "\u6c49EV"}}
2022-05-09 17:53:15,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,348 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：506
2022-05-09 17:53:15,391 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,392 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,393 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:53:15,406 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 506}
2022-05-09 17:53:15,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,407 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：506的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 591}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 506, 'nationalStandard': 255}
2022-05-09 17:53:15,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:53:15,425 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 506}
2022-05-09 17:53:15,426 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,427 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：506的记录已成功
2022-05-09 17:53:15,471 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,472 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,487 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:15,488 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:53:15,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,489 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:53:15,531 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,532 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,533 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,549 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:15,550 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:53:15,551 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,552 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:53:15,594 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,594 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,625 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:53:15,625 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:53:15,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,626 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 591]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 591}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:53:15,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:15,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [506]}
2022-05-09 17:53:15,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,639 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：506的记录
2022-05-09 17:53:15,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,679 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,679 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,689 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:15,689 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:53:15,689 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,690 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:53:15,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:15,698 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 591}
2022-05-09 17:53:15,698 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,708 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,708 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 591}, "name": "\u6c49EV"}}
2022-05-09 17:53:15,708 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,709 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：507
2022-05-09 17:53:15,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,747 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,747 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:15,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:53:15,757 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,757 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:53:15,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:15,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 591}
2022-05-09 17:53:15,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,780 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,780 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 591}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:53:15,780 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,781 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：508
2022-05-09 17:53:15,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:15,791 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [507, 508]}
2022-05-09 17:53:15,792 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,792 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：507, 508的记录
2022-05-09 17:53:15,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:15,803 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [591]}
2022-05-09 17:53:15,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,804 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：591的记录
2022-05-09 17:53:15,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:53:15,815 INFO [root] [key.py (post:21] - 传的参数是：{"id": 591, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:53:15,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,825 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,826 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:53:15,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,826 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：592
2022-05-09 17:53:15,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,863 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,863 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,870 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:15,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:53:15,871 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,871 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:53:15,880 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:15,881 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 592}
2022-05-09 17:53:15,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,892 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,892 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 592}, "name": "\u6c49EV"}}
2022-05-09 17:53:15,893 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,894 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：509
2022-05-09 17:53:15,942 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:15,943 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:15,943 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,952 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:15,953 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:53:15,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,954 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:53:15,963 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:15,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 509}
2022-05-09 17:53:15,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,977 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:15,978 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 509}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:53:15,978 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:15,979 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：439
2022-05-09 17:53:16,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,026 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,027 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:53:16,039 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 439}
2022-05-09 17:53:16,039 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,039 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：439的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 509}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 439}
2022-05-09 17:53:16,049 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:53:16,050 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 439}
2022-05-09 17:53:16,050 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,050 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：439的记录已成功
2022-05-09 17:53:16,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:16,109 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:53:16,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,110 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:53:16,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:16,167 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:53:16,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,168 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:53:16,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,218 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:16,232 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:53:16,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,232 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:53:16,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:16,288 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:53:16,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,290 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:53:16,331 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,332 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,351 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:16,352 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:53:16,353 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,353 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:53:16,401 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,402 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,403 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:53:16,454 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:53:16,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,454 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:53:16,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,504 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,554 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:53:16,554 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:53:16,555 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,556 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 509]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 509}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:53:16,571 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:16,572 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [439]}
2022-05-09 17:53:16,572 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,573 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：439的记录
2022-05-09 17:53:16,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,615 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,615 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:16,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:53:16,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,624 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:53:16,636 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:16,636 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 509}
2022-05-09 17:53:16,636 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:16,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 509}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:53:16,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,651 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：440
2022-05-09 17:53:16,695 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,696 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,697 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,709 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:16,710 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:53:16,711 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,712 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:53:16,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:53:16,726 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 509}
2022-05-09 17:53:16,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:16,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 509}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:53:16,744 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,745 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：441
2022-05-09 17:53:16,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:16,759 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [440, 441]}
2022-05-09 17:53:16,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,761 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：440, 441的记录
2022-05-09 17:53:16,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:16,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [509]}
2022-05-09 17:53:16,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,777 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：509的记录
2022-05-09 17:53:16,792 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:16,792 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [592]}
2022-05-09 17:53:16,794 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,794 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：592的记录
2022-05-09 17:53:16,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:16,859 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:53:16,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,859 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:53:16,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:16,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:53:16,871 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,872 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：414
2022-05-09 17:53:16,916 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:16,917 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:16,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:53:16,938 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 414}
2022-05-09 17:53:16,939 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,939 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：414的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 414, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:53:16,960 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:53:16,961 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 414}
2022-05-09 17:53:16,962 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:16,962 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：414的记录已成功
2022-05-09 17:53:17,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,005 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,006 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,019 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:17,019 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:53:17,020 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,020 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:53:17,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,064 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:17,077 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:53:17,077 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,078 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:53:17,120 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,121 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,135 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:17,136 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:53:17,136 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,137 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:53:17,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,182 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,183 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:53:17,200 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:53:17,201 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,202 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:53:17,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,251 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:53:17,312 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:53:17,313 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,314 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:53:17,362 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,363 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,364 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,378 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:53:17,379 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:53:17,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,381 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:53:17,391 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:17,392 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [414]}
2022-05-09 17:53:17,392 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,393 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：414的记录
2022-05-09 17:53:17,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:17,437 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:53:17,437 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,438 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:53:17,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:17,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:53:17,453 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,454 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：415
2022-05-09 17:53:17,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:53:17,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:53:17,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,495 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:53:17,495 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:53:17,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,497 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:53:17,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:53:17,510 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:53:17,512 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,512 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：416
2022-05-09 17:53:17,522 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:53:17,523 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [415, 416]}
2022-05-09 17:53:17,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:53:17,524 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：415, 416的记录
2022-05-09 17:54:41,126 WARNING [django.request] [log.py (log_response:241] - Not Found: /favicon.ico
2022-05-09 17:54:49,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:54:49,025 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "654H"}
2022-05-09 17:54:49,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,025 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"a3139ae1799046fd8b1ea2e336485821"}
2022-05-09 17:54:49,035 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,036 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,036 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,049 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,049 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:54:49,049 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,049 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：593
2022-05-09 17:54:49,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,097 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:49,109 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 593}
2022-05-09 17:54:49,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,109 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：593的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 593, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:54:49,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,119 INFO [root] [key.py (post:21] - 传的参数是：{"id": 593, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,119 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:49,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 593}
2022-05-09 17:54:49,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,132 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：593的记录已成功
2022-05-09 17:54:49,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,182 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,183 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:49,199 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:54:49,200 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,201 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:54:49,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:49,227 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [593]}
2022-05-09 17:54:49,228 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,229 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：593的记录
2022-05-09 17:54:49,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,241 INFO [root] [key.py (post:21] - 传的参数是：{"id": 593, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,241 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,258 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,258 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:54:49,258 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,258 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：594
2022-05-09 17:54:49,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,267 INFO [root] [key.py (post:21] - 传的参数是：{"id": 594, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,267 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:54:49,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,279 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：595
2022-05-09 17:54:49,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:49,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [594, 595]}
2022-05-09 17:54:49,291 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,291 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：594, 595的记录
2022-05-09 17:54:49,305 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,306 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,318 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:54:49,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,319 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：596
2022-05-09 17:54:49,363 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,363 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:49,373 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:54:49,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,373 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:54:49,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:49,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 596}
2022-05-09 17:54:49,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 596}, "name": "\u6c49EV"}}
2022-05-09 17:54:49,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,396 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：510
2022-05-09 17:54:49,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:49,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 510}
2022-05-09 17:54:49,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,451 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：510的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 596}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 510, 'nationalStandard': 255}
2022-05-09 17:54:49,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:49,463 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 510}
2022-05-09 17:54:49,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,463 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：510的记录已成功
2022-05-09 17:54:49,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,520 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:49,521 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:54:49,521 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,521 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:54:49,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,565 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:49,565 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:54:49,566 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,566 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:54:49,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,597 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,598 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:49,621 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:54:49,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,621 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 596]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 596}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:54:49,631 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:49,631 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [510]}
2022-05-09 17:54:49,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,632 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：510的记录
2022-05-09 17:54:49,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:49,670 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:54:49,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,670 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:54:49,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:49,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 596}
2022-05-09 17:54:49,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,688 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 596}, "name": "\u6c49EV"}}
2022-05-09 17:54:49,688 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,688 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：511
2022-05-09 17:54:49,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:49,725 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:54:49,725 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,726 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:54:49,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:49,735 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 596}
2022-05-09 17:54:49,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,745 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,745 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 596}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:54:49,746 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,746 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：512
2022-05-09 17:54:49,755 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:49,756 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [511, 512]}
2022-05-09 17:54:49,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,756 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：511, 512的记录
2022-05-09 17:54:49,764 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:49,765 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [596]}
2022-05-09 17:54:49,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,765 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：596的记录
2022-05-09 17:54:49,774 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:54:49,774 INFO [root] [key.py (post:21] - 传的参数是：{"id": 596, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:54:49,775 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,784 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:54:49,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,785 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：597
2022-05-09 17:54:49,823 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,823 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,824 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:49,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:54:49,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,834 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:54:49,843 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:49,843 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 597}
2022-05-09 17:54:49,843 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,856 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 597}, "name": "\u6c49EV"}}
2022-05-09 17:54:49,856 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,856 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：513
2022-05-09 17:54:49,894 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,895 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:49,904 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:54:49,904 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,904 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:54:49,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:49,915 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 513}
2022-05-09 17:54:49,915 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,926 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:49,926 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 513}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:54:49,927 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,927 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：442
2022-05-09 17:54:49,963 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:49,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:49,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:49,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 442}
2022-05-09 17:54:49,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,976 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：442的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 513}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 442}
2022-05-09 17:54:49,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:49,989 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 442}
2022-05-09 17:54:49,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:49,990 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：442的记录已成功
2022-05-09 17:54:50,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,027 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,028 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,040 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:54:50,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,041 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:54:50,083 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,096 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,097 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:54:50,097 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,097 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:54:50,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,154 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:54:50,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,155 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:54:50,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,195 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,209 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:54:50,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,209 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:54:50,261 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,262 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,262 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,276 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,276 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:54:50,277 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,277 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:54:50,321 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:50,373 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:54:50,374 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,375 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:54:50,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,422 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:50,481 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:54:50,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,482 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 513]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 513}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:54:50,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:50,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [442]}
2022-05-09 17:54:50,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,495 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：442的记录
2022-05-09 17:54:50,538 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,539 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,553 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:50,554 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:54:50,554 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,555 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:54:50,569 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:50,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 513}
2022-05-09 17:54:50,570 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:50,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 513}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:54:50,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,589 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：443
2022-05-09 17:54:50,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,633 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,634 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:50,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:54:50,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,646 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:54:50,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:54:50,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 513}
2022-05-09 17:54:50,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,672 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:50,672 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 513}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:54:50,673 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,673 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：444
2022-05-09 17:54:50,685 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:50,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [443, 444]}
2022-05-09 17:54:50,687 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,687 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：443, 444的记录
2022-05-09 17:54:50,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:50,702 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [513]}
2022-05-09 17:54:50,703 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,704 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：513的记录
2022-05-09 17:54:50,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:50,717 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [597]}
2022-05-09 17:54:50,717 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,718 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：597的记录
2022-05-09 17:54:50,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,768 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,769 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:50,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:54:50,778 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,778 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:54:50,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:50,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:54:50,790 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,790 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：417
2022-05-09 17:54:50,831 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,831 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:50,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 417}
2022-05-09 17:54:50,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,842 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：417的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 417, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:54:50,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:50,852 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 417}
2022-05-09 17:54:50,852 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,853 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：417的记录已成功
2022-05-09 17:54:50,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,890 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,890 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,902 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:54:50,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,903 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:54:50,936 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,937 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:50,948 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:54:50,948 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:50,948 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:54:50,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:50,989 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:50,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:51,002 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:54:51,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,003 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:54:51,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,032 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:51,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:51,043 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:54:51,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,043 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:54:51,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,074 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:51,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:51,114 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:54:51,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,115 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:54:51,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:51,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:51,154 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:54:51,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,154 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:54:51,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:51,162 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [417]}
2022-05-09 17:54:51,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,163 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：417的记录
2022-05-09 17:54:51,193 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,194 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:51,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,202 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:51,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:54:51,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,202 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:54:51,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:51,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:54:51,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,220 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：418
2022-05-09 17:54:51,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,266 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:54:51,266 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:51,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:54:51,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,276 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:54:51,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:51,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:54:51,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,293 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：419
2022-05-09 17:54:51,307 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:54:51,308 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [418, 419]}
2022-05-09 17:54:51,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,309 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：418, 419的记录
2022-05-09 17:54:51,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,388 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:51,389 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 0}}
2022-05-09 17:54:51,390 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,390 INFO [root] [key.py (default_get:78] - 模型：customer_info的默认填充字段信息为：{'code': '6929368077742112825', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 0, 'billingCount': 0, 'status': 0}
2022-05-09 17:54:51,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:51,436 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6929368077742112825", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 0, "billingCount": 0, "status": 0, "name": "\u5510\u63ed", "phone": 18695097022}}
2022-05-09 17:54:51,437 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,438 INFO [root] [key.py (create:35] - 新建：创建模型：customer_info新记录，id为：125
2022-05-09 17:54:51,486 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,486 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,487 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:51,519 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 125}
2022-05-09 17:54:51,519 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,519 INFO [root] [key.py (read:41] - 查看：查看模型customer_info中id为：125的内容： {'code': '6929368077742112825', 'billingIds': [], 'stationIds': [], 'displayName': '唐揭', 'cardCount': 0, 'cardIds': [], 'type': 0, 'billingCount': 0, 'equipmentIds': [], 'id': 125, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 0, 'sex': 0, 'accountId': {'code': '6929368077880524858', 'displayName': '6929368077880524858', 'id': 124, 'type': 0}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '18695097022', 'name': '唐揭', 'allowMoreCharge': False, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-09 17:54:51,532 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:51,533 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u8881\u6591\u63ed", "phone": 19666561628}, "id": 125}
2022-05-09 17:54:51,533 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,533 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_info中id为：125的记录已成功
2022-05-09 17:54:51,592 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,593 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:51,623 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u8881\u6591\u63ed"]]}
2022-05-09 17:54:51,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,625 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '袁斑揭'符合的记录数是：1条
2022-05-09 17:54:51,687 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,688 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,688 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,710 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:51,711 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 19666561628]]}
2022-05-09 17:54:51,712 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,712 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 19666561628符合的记录数是：1条
2022-05-09 17:54:51,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,758 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,759 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:51,770 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["sex"]}
2022-05-09 17:54:51,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,771 INFO [root] [key.py (read_group:93] - 分组：模型：customer_info按'sex'分组，响应内容中的data为：{'records': [{'_domain': [['sex', '=', 2]], '_total': 7, 'sex': 2}, {'_domain': [['sex', '=', 0]], '_total': 90, 'sex': 0}, {'_domain': [['sex', '=', 1]], '_total': 7, 'sex': 1}], 'length': 3}
2022-05-09 17:54:51,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,830 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[97, "tree"], [98, "form"], [99, "search"]]}}
2022-05-09 17:54:51,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:51,853 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-09 17:54:51,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,856 INFO [root] [key.py (read_group:93] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 102, 'status': 0}], 'length': 2}
2022-05-09 17:54:51,877 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:51,878 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[125], {}]}
2022-05-09 17:54:51,880 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,881 INFO [root] [key.py (call_method:104] - 冻结：已成功冻结模型customer_info中id为：125的记录
2022-05-09 17:54:51,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:51,899 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[125], {}]}
2022-05-09 17:54:51,900 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,901 INFO [root] [key.py (call_method:102] - 解冻：已成功解冻模型customer_info中id为：125的记录
2022-05-09 17:54:51,916 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:51,916 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[125], {}]}
2022-05-09 17:54:51,917 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,917 INFO [root] [key.py (call_method:108] - 打开多充：已成功开启模型customer_info中id为：125的多充功能
2022-05-09 17:54:51,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:51,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[125], {}]}
2022-05-09 17:54:51,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:51,934 INFO [root] [key.py (call_method:106] - 关闭多充：已成功关闭模型customer_info中id为：125的多充功能
2022-05-09 17:54:51,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:51,997 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-09 17:54:51,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:54:52,011 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "context": {"default_type": 1}}
2022-05-09 17:54:52,012 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,013 INFO [root] [key.py (default_get:78] - 模型：customer_info的默认填充字段信息为：{'code': '6929368080342581334', 'carCount': 0, 'cardCount': 0, 'sex': 0, 'allowMoreCharge': False, 'orgBillingCount': 0, 'type': 1, 'billingCount': 0, 'status': 0}
2022-05-09 17:54:52,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:54:52,034 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"code": "6929368080342581334", "carCount": 0, "cardCount": 0, "sex": 0, "allowMoreCharge": false, "orgBillingCount": 0, "type": 1, "billingCount": 0, "status": 0, "name": "\u738b\u594f\u5824", "phone": 19581584898}}
2022-05-09 17:54:52,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,036 INFO [root] [key.py (create:35] - 新建：创建模型：customer_info新记录，id为：126
2022-05-09 17:54:52,081 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:52,082 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-09 17:54:52,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:54:52,107 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "id": 126}
2022-05-09 17:54:52,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,109 INFO [root] [key.py (read:41] - 查看：查看模型customer_info中id为：126的内容： {'code': '6929368080342581334', 'billingIds': [], 'stationIds': [], 'displayName': '王奏堤', 'cardCount': 0, 'cardIds': [], 'type': 1, 'billingCount': 0, 'equipmentIds': [], 'id': 126, 'orgBillingCount': 0, 'collectStationIds': [], 'carCount': 0, 'accountType': 1, 'sex': 0, 'accountId': {'code': '6929368080426467415', 'displayName': '6929368080426467415', 'id': 125, 'type': 1}, 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'phone': '19581584898', 'name': '王奏堤', 'allowMoreCharge': True, 'limitEquipmentIds': [], 'limitStationIds': [], 'carIds': [], 'collectEquipmentIds': [], 'status': 0}
2022-05-09 17:54:52,126 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:54:52,127 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "map": {"name": "\u53f2\u4f1f\u4fe9", "phone": 19974519816}, "id": 126}
2022-05-09 17:54:52,128 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,129 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_info中id为：126的记录已成功
2022-05-09 17:54:52,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:52,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-09 17:54:52,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,217 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:52,218 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["name", "ilike", "\u53f2\u4f1f\u4fe9"]]}
2022-05-09 17:54:52,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,220 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_info快捷搜索条件按'name'搜索 '史伟俩'符合的记录数是：1条
2022-05-09 17:54:52,277 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:52,278 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-09 17:54:52,278 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,302 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:54:52,302 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_info", "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "domain": [["phone", "ilike", 19974519816]]}
2022-05-09 17:54:52,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,303 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_info快捷搜索条件按'phone'搜索 19974519816符合的记录数是：1条
2022-05-09 17:54:52,359 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:54:52,360 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_info", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[94, "tree"], [95, "form"], [96, "search"]]}}
2022-05-09 17:54:52,360 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:54:52,372 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_info", "domain": [], "fields": ["agentId", "code", "billingIds", "stationIds", "displayName", "cardCount", "cityId", "cardIds", "type", "billingCount", "equipmentIds", "id", "orgBillingCount", "collectStationIds", "carCount", "accountType", "sex", "provinceId", "accountId", "companyId", "headImgUrl", "phone", "name", "allowMoreCharge", "limitEquipmentIds", "limitStationIds", "carIds", "collectEquipmentIds", "status"], "group": ["status"]}
2022-05-09 17:54:52,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,373 INFO [root] [key.py (read_group:93] - 分组：模型：customer_info按'status'分组，响应内容中的data为：{'records': [{'_domain': [['status', '=', 1]], '_total': 2, 'status': 1}, {'_domain': [['status', '=', 0]], '_total': 103, 'status': 0}], 'length': 2}
2022-05-09 17:54:52,384 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:52,384 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "freezeButton", "args": [[126], {}]}
2022-05-09 17:54:52,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,385 INFO [root] [key.py (call_method:104] - 冻结：已成功冻结模型customer_info中id为：126的记录
2022-05-09 17:54:52,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:52,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unfreezeButton", "args": [[126], {}]}
2022-05-09 17:54:52,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,395 INFO [root] [key.py (call_method:102] - 解冻：已成功解冻模型customer_info中id为：126的记录
2022-05-09 17:54:52,411 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:52,412 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "allowMoreChargeButton", "args": [[126], {}]}
2022-05-09 17:54:52,412 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,412 INFO [root] [key.py (call_method:108] - 打开多充：已成功开启模型customer_info中id为：126的多充功能
2022-05-09 17:54:52,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/call_method
2022-05-09 17:54:52,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_info", "method": "unAllowMoreChargeButton", "args": [[126], {}]}
2022-05-09 17:54:52,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:54:52,427 INFO [root] [key.py (call_method:106] - 关闭多充：已成功关闭模型customer_info中id为：126的多充功能
2022-05-09 17:59:35,763 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 17:59:35,763 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "GVF4"}
2022-05-09 17:59:35,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,764 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"18222ea3291e49b18faee9a8806808f4"}
2022-05-09 17:59:35,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:35,773 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:59:35,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,786 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:35,786 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:59:35,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,787 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：598
2022-05-09 17:59:35,839 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:35,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:35,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,851 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:59:35,851 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 598}
2022-05-09 17:59:35,852 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,852 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：598的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 598, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 17:59:35,859 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:35,859 INFO [root] [key.py (post:21] - 传的参数是：{"id": 598, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:59:35,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,872 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:59:35,872 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 598}
2022-05-09 17:59:35,873 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,873 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：598的记录已成功
2022-05-09 17:59:35,923 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:35,923 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:35,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,945 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:35,946 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 17:59:35,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,947 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 17:59:35,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:35,963 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [598]}
2022-05-09 17:59:35,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,964 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：598的记录
2022-05-09 17:59:35,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:35,975 INFO [root] [key.py (post:21] - 传的参数是：{"id": 598, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:59:35,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:35,995 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:59:35,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:35,996 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：599
2022-05-09 17:59:36,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:36,007 INFO [root] [key.py (post:21] - 传的参数是：{"id": 599, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 17:59:36,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 17:59:36,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,025 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：600
2022-05-09 17:59:36,041 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:36,041 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [599, 600]}
2022-05-09 17:59:36,042 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,042 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：599, 600的记录
2022-05-09 17:59:36,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:36,064 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:59:36,065 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,080 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:59:36,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,080 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：601
2022-05-09 17:59:36,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,124 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,125 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,133 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:36,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:59:36,134 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,134 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:59:36,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:36,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 601}
2022-05-09 17:59:36,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 601}, "name": "\u6c49EV"}}
2022-05-09 17:59:36,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,158 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：514
2022-05-09 17:59:36,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:59:36,217 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 514}
2022-05-09 17:59:36,217 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,218 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：514的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 601}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 514, 'nationalStandard': 255}
2022-05-09 17:59:36,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:59:36,231 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 514}
2022-05-09 17:59:36,231 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,231 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：514的记录已成功
2022-05-09 17:59:36,283 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,283 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,284 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,299 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:36,300 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 17:59:36,301 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,302 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 17:59:36,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,349 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,350 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,373 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:36,374 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 17:59:36,374 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,375 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 17:59:36,420 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:59:36,450 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 17:59:36,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,451 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 601]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 601}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 17:59:36,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:36,464 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [514]}
2022-05-09 17:59:36,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,464 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：514的记录
2022-05-09 17:59:36,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,499 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,499 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:36,509 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:59:36,509 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,510 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:59:36,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:36,519 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 601}
2022-05-09 17:59:36,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,534 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,534 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 601}, "name": "\u6c49EV"}}
2022-05-09 17:59:36,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,535 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：515
2022-05-09 17:59:36,577 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,578 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,578 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:36,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:59:36,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,587 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:59:36,596 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:36,596 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 601}
2022-05-09 17:59:36,597 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,609 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,609 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 601}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 17:59:36,609 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,610 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：516
2022-05-09 17:59:36,621 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:36,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [515, 516]}
2022-05-09 17:59:36,622 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,622 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：515, 516的记录
2022-05-09 17:59:36,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:36,633 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [601]}
2022-05-09 17:59:36,633 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,634 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：601的记录
2022-05-09 17:59:36,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 17:59:36,645 INFO [root] [key.py (post:21] - 传的参数是：{"id": 601, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 17:59:36,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,658 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 17:59:36,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,658 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：602
2022-05-09 17:59:36,702 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,703 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,703 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:36,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 17:59:36,712 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,713 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 17:59:36,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:36,722 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 602}
2022-05-09 17:59:36,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,735 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 602}, "name": "\u6c49EV"}}
2022-05-09 17:59:36,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,736 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：517
2022-05-09 17:59:36,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,784 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:36,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:59:36,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,784 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:59:36,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:36,792 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 517}
2022-05-09 17:59:36,792 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,801 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:36,801 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 517}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:59:36,802 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,802 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：445
2022-05-09 17:59:36,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,847 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:59:36,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 445}
2022-05-09 17:59:36,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,849 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：445的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 517}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 445}
2022-05-09 17:59:36,859 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:59:36,860 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 445}
2022-05-09 17:59:36,860 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,861 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：445的记录已成功
2022-05-09 17:59:36,893 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,893 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,894 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:36,904 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:59:36,904 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,904 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:59:36,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,952 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,963 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:36,963 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 17:59:36,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:36,965 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 17:59:36,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:36,995 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:36,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,007 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 17:59:37,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,009 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 17:59:37,039 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,041 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,055 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,055 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 17:59:37,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,057 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 17:59:37,104 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,105 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,120 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,121 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 17:59:37,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,122 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 17:59:37,165 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,166 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:59:37,236 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 17:59:37,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,239 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 17:59:37,295 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,296 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:59:37,358 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 17:59:37,359 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,359 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 517]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 517}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 17:59:37,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:37,373 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [445]}
2022-05-09 17:59:37,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,373 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：445的记录
2022-05-09 17:59:37,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,422 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,430 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:37,430 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:59:37,430 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,431 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:59:37,440 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:37,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 517}
2022-05-09 17:59:37,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:37,454 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 517}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:59:37,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,454 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：446
2022-05-09 17:59:37,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:37,504 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 17:59:37,504 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,504 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 17:59:37,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 17:59:37,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 517}
2022-05-09 17:59:37,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:37,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 517}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 17:59:37,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,529 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：447
2022-05-09 17:59:37,542 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:37,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [446, 447]}
2022-05-09 17:59:37,543 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,543 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：446, 447的记录
2022-05-09 17:59:37,558 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:37,558 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [517]}
2022-05-09 17:59:37,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,559 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：517的记录
2022-05-09 17:59:37,571 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:37,572 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [602]}
2022-05-09 17:59:37,572 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,573 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：602的记录
2022-05-09 17:59:37,626 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,626 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,627 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:37,639 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:59:37,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,640 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:59:37,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:37,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:59:37,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,654 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：420
2022-05-09 17:59:37,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,700 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 17:59:37,713 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 420}
2022-05-09 17:59:37,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,714 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：420的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 420, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 17:59:37,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 17:59:37,727 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 420}
2022-05-09 17:59:37,727 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,728 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：420的记录已成功
2022-05-09 17:59:37,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,775 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,792 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 17:59:37,792 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,793 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 17:59:37,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,833 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,834 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,850 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 17:59:37,851 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,851 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:59:37,897 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,915 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 17:59:37,916 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,916 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 17:59:37,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:37,963 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:37,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,980 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 17:59:37,981 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 17:59:37,981 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:37,982 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 17:59:38,019 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:38,019 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:38,019 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,069 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:59:38,070 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 17:59:38,070 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,071 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 17:59:38,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:38,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:38,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,124 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 17:59:38,124 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 17:59:38,125 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,125 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 17:59:38,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:38,136 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [420]}
2022-05-09 17:59:38,136 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,137 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：420的记录
2022-05-09 17:59:38,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:38,183 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:38,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,196 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:38,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:59:38,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,198 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:59:38,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:38,228 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 17:59:38,229 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,230 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：421
2022-05-09 17:59:38,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 17:59:38,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 17:59:38,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 17:59:38,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 17:59:38,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,292 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 17:59:38,306 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 17:59:38,307 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 17:59:38,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,308 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：422
2022-05-09 17:59:38,322 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 17:59:38,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [421, 422]}
2022-05-09 17:59:38,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 17:59:38,324 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：421, 422的记录
2022-05-09 18:01:24,354 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:01:28,110 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipaiapi/reports/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 28, in allure
    return render(request, "http://192.168.1.216:1688/index.html")
  File "D:\python3.95\lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
  File "D:\python3.95\lib\site-packages\django\template\backends\django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "D:\python3.95\lib\site-packages\django\template\engine.py", line 176, in get_template
    template, origin = self.find_template(template_name)
  File "D:\python3.95\lib\site-packages\django\template\engine.py", line 158, in find_template
    template = loader.get_template(name, skip=skip)
  File "D:\python3.95\lib\site-packages\django\template\loaders\base.py", line 23, in get_template
    contents = self.get_contents(origin)
  File "D:\python3.95\lib\site-packages\django\template\loaders\filesystem.py", line 22, in get_contents
    with open(origin.name, encoding=self.engine.file_charset) as fp:
OSError: [Errno 22] Invalid argument: 'C:\\Users\\chen\\PycharmProjects\\hellodjango\\templates\\http:\\192.168.1.216:1688\\index.html'
2022-05-09 18:01:30,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:01:30,897 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "FRRL"}
2022-05-09 18:01:30,897 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,897 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"0826936931ed435c9606e33a592a52d8"}
2022-05-09 18:01:30,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:30,907 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:01:30,907 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,919 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:30,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:01:30,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,920 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：603
2022-05-09 18:01:30,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:30,969 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:30,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:01:30,982 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 603}
2022-05-09 18:01:30,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,983 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：603的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 603, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:01:30,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:30,989 INFO [root] [key.py (post:21] - 传的参数是：{"id": 603, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:01:30,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:01:30,998 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 603}
2022-05-09 18:01:30,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:30,999 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：603的记录已成功
2022-05-09 18:01:31,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,035 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:31,048 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:01:31,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,049 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:01:31,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:31,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [603]}
2022-05-09 18:01:31,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,064 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：603的记录
2022-05-09 18:01:31,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:31,073 INFO [root] [key.py (post:21] - 传的参数是：{"id": 603, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:01:31,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:01:31,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,089 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：604
2022-05-09 18:01:31,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:31,100 INFO [root] [key.py (post:21] - 传的参数是：{"id": 604, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:01:31,101 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,114 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,115 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:01:31,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,115 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：605
2022-05-09 18:01:31,132 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:31,132 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [604, 605]}
2022-05-09 18:01:31,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,133 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：604, 605的记录
2022-05-09 18:01:31,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:31,145 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:01:31,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,158 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:01:31,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,159 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：606
2022-05-09 18:01:31,203 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,203 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:31,212 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:01:31,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,213 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:01:31,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:31,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 606}
2022-05-09 18:01:31,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,242 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 606}, "name": "\u6c49EV"}}
2022-05-09 18:01:31,243 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,243 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：518
2022-05-09 18:01:31,287 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,288 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:01:31,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 518}
2022-05-09 18:01:31,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,306 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：518的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 606}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 518, 'nationalStandard': 255}
2022-05-09 18:01:31,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:01:31,320 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 518}
2022-05-09 18:01:31,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,321 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：518的记录已成功
2022-05-09 18:01:31,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,396 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:31,397 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:01:31,398 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,400 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:01:31,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,450 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:31,470 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:01:31,471 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,472 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:01:31,518 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,519 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,554 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:01:31,555 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:01:31,556 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,557 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 606]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 606}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:01:31,575 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:31,575 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [518]}
2022-05-09 18:01:31,576 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,577 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：518的记录
2022-05-09 18:01:31,626 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,627 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,639 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:31,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:01:31,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,642 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:01:31,654 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:31,655 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 606}
2022-05-09 18:01:31,655 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 606}, "name": "\u6c49EV"}}
2022-05-09 18:01:31,668 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,669 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：519
2022-05-09 18:01:31,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,700 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,700 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:31,707 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:01:31,708 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,708 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:01:31,714 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:31,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 606}
2022-05-09 18:01:31,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,724 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 606}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:01:31,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,725 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：520
2022-05-09 18:01:31,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:31,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [519, 520]}
2022-05-09 18:01:31,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,733 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：519, 520的记录
2022-05-09 18:01:31,740 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:31,741 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [606]}
2022-05-09 18:01:31,741 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,741 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：606的记录
2022-05-09 18:01:31,754 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:01:31,754 INFO [root] [key.py (post:21] - 传的参数是：{"id": 606, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:01:31,754 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,762 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,763 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:01:31,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,763 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：607
2022-05-09 18:01:31,807 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,807 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,808 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:31,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:01:31,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,817 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:01:31,826 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:31,826 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 607}
2022-05-09 18:01:31,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,839 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 607}, "name": "\u6c49EV"}}
2022-05-09 18:01:31,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,840 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：521
2022-05-09 18:01:31,879 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,879 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,887 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:31,887 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:01:31,887 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,888 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:01:31,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:31,897 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 521}
2022-05-09 18:01:31,897 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:31,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 521}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:01:31,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,909 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：448
2022-05-09 18:01:31,947 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:31,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:31,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,957 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:01:31,958 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 448}
2022-05-09 18:01:31,958 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,958 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：448的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 521}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 448}
2022-05-09 18:01:31,969 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:01:31,969 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 448}
2022-05-09 18:01:31,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:31,970 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：448的记录已成功
2022-05-09 18:01:32,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,007 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,021 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:01:32,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,021 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:01:32,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,060 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,073 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:01:32,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,074 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:01:32,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,125 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,126 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:01:32,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,127 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:01:32,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,188 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,201 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:01:32,201 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,201 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:01:32,245 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,245 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,246 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,259 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,260 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:01:32,260 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,260 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:01:32,300 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,301 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,301 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,345 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:01:32,346 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:01:32,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,346 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:01:32,375 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,375 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,376 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:01:32,422 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:01:32,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,423 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 521]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 521}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:01:32,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:32,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [448]}
2022-05-09 18:01:32,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,435 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：448的记录
2022-05-09 18:01:32,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,465 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,466 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:32,473 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:01:32,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,474 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:01:32,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:32,481 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 521}
2022-05-09 18:01:32,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,489 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:32,489 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 521}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:01:32,490 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,490 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：449
2022-05-09 18:01:32,521 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,521 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,528 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:32,528 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:01:32,529 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,529 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:01:32,536 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:01:32,536 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 521}
2022-05-09 18:01:32,537 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,545 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:32,545 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 521}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:01:32,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,546 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：450
2022-05-09 18:01:32,554 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:32,554 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [449, 450]}
2022-05-09 18:01:32,555 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,555 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：449, 450的记录
2022-05-09 18:01:32,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:32,570 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [521]}
2022-05-09 18:01:32,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,572 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：521的记录
2022-05-09 18:01:32,583 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:32,584 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [607]}
2022-05-09 18:01:32,584 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,584 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：607的记录
2022-05-09 18:01:32,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,620 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:32,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:01:32,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,628 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:01:32,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:32,639 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:01:32,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,639 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：423
2022-05-09 18:01:32,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,669 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,679 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:01:32,680 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 423}
2022-05-09 18:01:32,681 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,681 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：423的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 423, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:01:32,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:01:32,692 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 423}
2022-05-09 18:01:32,693 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,693 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：423的记录已成功
2022-05-09 18:01:32,724 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,725 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,736 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,737 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:01:32,737 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,738 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:01:32,767 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,780 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:01:32,780 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,781 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:01:32,812 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,812 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,813 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,824 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,825 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:01:32,825 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,826 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:01:32,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,862 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,878 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:01:32,879 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:01:32,880 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,881 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:01:32,915 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:32,915 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:32,916 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:01:32,959 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:01:32,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:32,961 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 5, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 17}
2022-05-09 18:01:33,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:33,002 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:33,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,015 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:01:33,015 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:01:33,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,016 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:01:33,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:33,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [423]}
2022-05-09 18:01:33,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,029 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：423的记录
2022-05-09 18:01:33,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:33,075 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:33,075 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:33,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:01:33,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,086 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:01:33,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:33,100 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:01:33,100 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,100 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：424
2022-05-09 18:01:33,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:01:33,145 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:01:33,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:01:33,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:01:33,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,158 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:01:33,172 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:01:33,173 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:01:33,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,174 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：425
2022-05-09 18:01:33,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:01:33,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [424, 425]}
2022-05-09 18:01:33,188 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:01:33,189 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：424, 425的记录
2022-05-09 18:01:39,031 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipaiapi/reports/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 28, in allure
    return render(request, "http://192.168.1.216:1688/index.html")
  File "D:\python3.95\lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
  File "D:\python3.95\lib\site-packages\django\template\backends\django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "D:\python3.95\lib\site-packages\django\template\engine.py", line 176, in get_template
    template, origin = self.find_template(template_name)
  File "D:\python3.95\lib\site-packages\django\template\engine.py", line 158, in find_template
    template = loader.get_template(name, skip=skip)
  File "D:\python3.95\lib\site-packages\django\template\loaders\base.py", line 23, in get_template
    contents = self.get_contents(origin)
  File "D:\python3.95\lib\site-packages\django\template\loaders\filesystem.py", line 22, in get_contents
    with open(origin.name, encoding=self.engine.file_charset) as fp:
OSError: [Errno 22] Invalid argument: 'C:\\Users\\chen\\PycharmProjects\\hellodjango\\templates\\http:\\192.168.1.216:1688\\index.html'
2022-05-09 18:04:39,106 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:08:26,843 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:08:26,844 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "Q7QR"}
2022-05-09 18:08:26,844 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,845 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2246c4b6b70c4ecfbbcf6e4f14c4646a"}
2022-05-09 18:08:26,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:26,855 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:08:26,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:26,866 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:08:26,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,867 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：608
2022-05-09 18:08:26,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:26,906 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:26,906 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,919 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:08:26,919 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 608}
2022-05-09 18:08:26,919 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,920 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：608的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 608, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:08:26,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:26,929 INFO [root] [key.py (post:21] - 传的参数是：{"id": 608, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:08:26,929 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:08:26,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 608}
2022-05-09 18:08:26,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,941 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：608的记录已成功
2022-05-09 18:08:26,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:26,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:26,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:26,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:27,000 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:08:27,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,000 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:08:27,010 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:27,011 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [608]}
2022-05-09 18:08:27,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,012 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：608的记录
2022-05-09 18:08:27,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:27,020 INFO [root] [key.py (post:21] - 传的参数是：{"id": 608, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:08:27,020 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:08:27,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,031 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：609
2022-05-09 18:08:27,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:27,038 INFO [root] [key.py (post:21] - 传的参数是：{"id": 609, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:08:27,038 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,049 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,050 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:08:27,050 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,050 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：610
2022-05-09 18:08:27,060 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:27,060 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [609, 610]}
2022-05-09 18:08:27,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,061 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：609, 610的记录
2022-05-09 18:08:27,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:27,073 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:08:27,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:08:27,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,085 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：611
2022-05-09 18:08:27,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,128 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,129 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:27,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:08:27,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,139 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:08:27,149 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:27,149 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 611}
2022-05-09 18:08:27,149 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,163 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 611}, "name": "\u6c49EV"}}
2022-05-09 18:08:27,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,164 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：522
2022-05-09 18:08:27,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,213 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,214 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:08:27,234 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 522}
2022-05-09 18:08:27,235 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,236 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：522的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 611}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 522, 'nationalStandard': 255}
2022-05-09 18:08:27,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:08:27,251 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 522}
2022-05-09 18:08:27,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,253 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：522的记录已成功
2022-05-09 18:08:27,295 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,296 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:27,313 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:08:27,314 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,315 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:08:27,361 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,361 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:27,381 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:08:27,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,384 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:08:27,420 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,447 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:08:27,448 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:08:27,449 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,450 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 611]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 611}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:08:27,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:27,463 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [522]}
2022-05-09 18:08:27,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,464 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：522的记录
2022-05-09 18:08:27,500 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,500 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,501 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,512 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:27,512 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:08:27,513 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,514 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:08:27,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:27,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 611}
2022-05-09 18:08:27,526 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,541 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 611}, "name": "\u6c49EV"}}
2022-05-09 18:08:27,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,542 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：523
2022-05-09 18:08:27,584 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,584 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,585 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,592 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:27,593 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:08:27,593 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,593 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:08:27,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:27,603 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 611}
2022-05-09 18:08:27,604 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,615 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 611}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:08:27,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,617 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：524
2022-05-09 18:08:27,628 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:27,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [523, 524]}
2022-05-09 18:08:27,629 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,629 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：523, 524的记录
2022-05-09 18:08:27,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:27,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [611]}
2022-05-09 18:08:27,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,641 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：611的记录
2022-05-09 18:08:27,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:08:27,657 INFO [root] [key.py (post:21] - 传的参数是：{"id": 611, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:08:27,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,669 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,670 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:08:27,670 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,670 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：612
2022-05-09 18:08:27,717 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,728 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:27,729 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:08:27,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,730 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:08:27,739 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:27,740 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 612}
2022-05-09 18:08:27,740 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,752 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 612}, "name": "\u6c49EV"}}
2022-05-09 18:08:27,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,753 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：525
2022-05-09 18:08:27,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,794 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:27,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:08:27,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,805 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:08:27,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:27,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 525}
2022-05-09 18:08:27,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:27,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 525}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:08:27,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,842 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：451
2022-05-09 18:08:27,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,888 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:08:27,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 451}
2022-05-09 18:08:27,909 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,911 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：451的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 525}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 451}
2022-05-09 18:08:27,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:08:27,930 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 451}
2022-05-09 18:08:27,930 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,931 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：451的记录已成功
2022-05-09 18:08:27,984 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:27,985 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:27,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,998 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:27,998 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:08:27,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:27,999 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:08:28,041 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,041 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,042 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,056 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:08:28,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,056 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:08:28,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,100 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,101 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,116 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,117 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:08:28,118 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,118 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:08:28,162 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,164 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,184 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,185 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:08:28,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,187 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:08:28,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,246 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,247 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,265 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:08:28,266 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,267 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:08:28,313 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,314 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:08:28,367 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:08:28,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,369 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:08:28,410 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,410 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:08:28,462 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:08:28,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,464 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 525]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 525}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:08:28,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:28,477 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [451]}
2022-05-09 18:08:28,478 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,478 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：451的记录
2022-05-09 18:08:28,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,519 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:28,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:08:28,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,531 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:08:28,544 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:28,545 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 525}
2022-05-09 18:08:28,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:28,560 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 525}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:08:28,561 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,561 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：452
2022-05-09 18:08:28,608 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,609 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,610 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:28,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:08:28,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,624 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:08:28,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:08:28,639 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 525}
2022-05-09 18:08:28,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,658 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:28,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 525}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:08:28,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,660 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：453
2022-05-09 18:08:28,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:28,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [452, 453]}
2022-05-09 18:08:28,677 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,678 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：452, 453的记录
2022-05-09 18:08:28,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:28,695 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [525]}
2022-05-09 18:08:28,696 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,697 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：525的记录
2022-05-09 18:08:28,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:28,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [612]}
2022-05-09 18:08:28,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,713 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：612的记录
2022-05-09 18:08:28,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,772 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:28,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:08:28,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,792 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:08:28,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:28,812 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:08:28,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,816 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：426
2022-05-09 18:08:28,863 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,864 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,874 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:08:28,875 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 426}
2022-05-09 18:08:28,875 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,876 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：426的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 426, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:08:28,886 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:08:28,887 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 426}
2022-05-09 18:08:28,887 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,887 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：426的记录已成功
2022-05-09 18:08:28,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,921 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,937 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:08:28,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,938 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:08:28,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:28,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:28,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,987 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:28,987 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:08:28,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:28,988 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:08:29,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,034 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:29,034 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:08:29,035 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,035 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:08:29,071 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,072 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,083 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:08:29,084 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:08:29,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,084 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:08:29,114 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,115 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:08:29,157 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:08:29,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,161 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:08:29,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,200 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,201 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:08:29,212 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:08:29,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,213 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:08:29,222 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:29,223 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [426]}
2022-05-09 18:08:29,223 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,224 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：426的记录
2022-05-09 18:08:29,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,282 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,283 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:29,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:08:29,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,298 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:08:29,314 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:29,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:08:29,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,317 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：427
2022-05-09 18:08:29,355 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:08:29,356 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:08:29,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:08:29,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:08:29,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,371 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:08:29,383 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:08:29,384 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:08:29,384 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,385 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：428
2022-05-09 18:08:29,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:08:29,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [427, 428]}
2022-05-09 18:08:29,396 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:08:29,397 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：427, 428的记录
2022-05-09 18:09:28,728 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:09:28,728 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WPSV"}
2022-05-09 18:09:28,729 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,729 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b88eb78e1c2c407aa284c80b4711dbcc"}
2022-05-09 18:09:28,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:28,738 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:09:28,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,750 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:28,750 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:09:28,751 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,751 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：613
2022-05-09 18:09:28,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:28,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:28,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,812 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:09:28,812 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 613}
2022-05-09 18:09:28,813 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,813 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：613的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 613, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:09:28,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:28,821 INFO [root] [key.py (post:21] - 传的参数是：{"id": 613, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:09:28,821 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:09:28,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 613}
2022-05-09 18:09:28,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,835 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：613的记录已成功
2022-05-09 18:09:28,885 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:28,886 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:28,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,900 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:28,901 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:09:28,902 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,902 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:09:28,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:28,915 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [613]}
2022-05-09 18:09:28,915 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,916 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：613的记录
2022-05-09 18:09:28,925 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:28,926 INFO [root] [key.py (post:21] - 传的参数是：{"id": 613, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:09:28,926 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:28,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:09:28,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,942 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：614
2022-05-09 18:09:28,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:28,952 INFO [root] [key.py (post:21] - 传的参数是：{"id": 614, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:09:28,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,965 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:28,965 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:09:28,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,967 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：615
2022-05-09 18:09:28,980 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:28,981 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [614, 615]}
2022-05-09 18:09:28,982 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:28,982 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：614, 615的记录
2022-05-09 18:09:29,000 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:29,001 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:09:29,001 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,013 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:09:29,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,014 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：616
2022-05-09 18:09:29,057 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,057 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,057 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:29,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:09:29,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,066 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:09:29,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:29,075 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 616}
2022-05-09 18:09:29,075 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 616}, "name": "\u6c49EV"}}
2022-05-09 18:09:29,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,088 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：526
2022-05-09 18:09:29,130 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:09:29,142 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 526}
2022-05-09 18:09:29,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,143 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：526的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 616}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 526, 'nationalStandard': 255}
2022-05-09 18:09:29,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:09:29,155 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 526}
2022-05-09 18:09:29,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,156 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：526的记录已成功
2022-05-09 18:09:29,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:29,212 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:09:29,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,213 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:09:29,256 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,256 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,257 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,272 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:29,273 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:09:29,273 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,274 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:09:29,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,321 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,321 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,353 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:09:29,354 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:09:29,354 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,355 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 616]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 616}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:09:29,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:29,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [526]}
2022-05-09 18:09:29,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,370 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：526的记录
2022-05-09 18:09:29,414 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:29,425 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:09:29,426 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,426 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:09:29,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:29,437 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 616}
2022-05-09 18:09:29,437 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 616}, "name": "\u6c49EV"}}
2022-05-09 18:09:29,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,452 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：527
2022-05-09 18:09:29,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,495 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:29,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:09:29,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,508 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:09:29,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:29,520 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 616}
2022-05-09 18:09:29,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,538 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 616}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:09:29,539 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,539 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：528
2022-05-09 18:09:29,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:29,553 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [527, 528]}
2022-05-09 18:09:29,554 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,554 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：527, 528的记录
2022-05-09 18:09:29,566 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:29,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [616]}
2022-05-09 18:09:29,567 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,568 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：616的记录
2022-05-09 18:09:29,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:09:29,586 INFO [root] [key.py (post:21] - 传的参数是：{"id": 616, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:09:29,587 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,598 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,598 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:09:29,599 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,600 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：617
2022-05-09 18:09:29,642 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,643 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,643 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:29,652 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:09:29,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,652 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:09:29,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:29,663 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 617}
2022-05-09 18:09:29,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,676 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,676 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 617}, "name": "\u6c49EV"}}
2022-05-09 18:09:29,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,676 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：529
2022-05-09 18:09:29,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,736 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:29,737 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:09:29,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,738 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:09:29,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:29,752 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 529}
2022-05-09 18:09:29,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:29,768 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 529}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:09:29,769 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,770 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：454
2022-05-09 18:09:29,819 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,820 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,820 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:09:29,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 454}
2022-05-09 18:09:29,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,837 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：454的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 529}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 454}
2022-05-09 18:09:29,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:09:29,852 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 454}
2022-05-09 18:09:29,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,854 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：454的记录已成功
2022-05-09 18:09:29,901 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,902 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:29,920 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:09:29,921 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,922 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:09:29,972 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:29,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:29,974 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:29,996 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:09:29,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:29,998 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:09:30,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:30,063 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:09:30,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,065 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:09:30,111 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:30,128 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:09:30,129 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,129 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:09:30,180 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,181 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,181 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:30,196 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:09:30,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,197 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:09:30,247 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,248 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,299 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:09:30,299 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:09:30,300 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,301 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:09:30,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,350 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,416 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:09:30,417 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:09:30,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,420 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 529]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 529}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:09:30,440 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:30,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [454]}
2022-05-09 18:09:30,442 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,443 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：454的记录
2022-05-09 18:09:30,490 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,491 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,492 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,503 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:30,503 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:09:30,505 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,506 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:09:30,516 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:30,516 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 529}
2022-05-09 18:09:30,517 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:30,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 529}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:09:30,531 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,533 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：455
2022-05-09 18:09:30,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,575 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,576 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,588 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:30,589 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:09:30,589 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,590 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:09:30,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:09:30,604 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 529}
2022-05-09 18:09:30,605 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:30,620 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 529}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:09:30,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,621 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：456
2022-05-09 18:09:30,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:30,635 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [455, 456]}
2022-05-09 18:09:30,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,635 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：455, 456的记录
2022-05-09 18:09:30,653 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:30,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [529]}
2022-05-09 18:09:30,654 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,655 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：529的记录
2022-05-09 18:09:30,666 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:30,667 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [617]}
2022-05-09 18:09:30,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,667 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：617的记录
2022-05-09 18:09:30,717 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,719 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,735 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:30,736 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:09:30,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,739 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:09:30,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:30,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:09:30,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,759 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：429
2022-05-09 18:09:30,807 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,808 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,809 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:09:30,822 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 429}
2022-05-09 18:09:30,823 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,823 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：429的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 429, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:09:30,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:09:30,836 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 429}
2022-05-09 18:09:30,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,837 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：429的记录已成功
2022-05-09 18:09:30,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:30,899 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:09:30,900 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,901 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:09:30,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:30,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:30,948 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,963 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:30,964 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:09:30,965 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:30,965 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:09:31,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,032 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:31,033 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:09:31,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,033 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:09:31,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:09:31,103 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:09:31,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,106 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:09:31,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:09:31,212 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:09:31,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,212 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:09:31,261 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,261 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,262 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,274 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:09:31,275 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:09:31,275 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,276 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:09:31,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:31,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [429]}
2022-05-09 18:09:31,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,292 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：429的记录
2022-05-09 18:09:31,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,337 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,351 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:31,351 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:09:31,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,353 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:09:31,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:31,369 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:09:31,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,371 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：430
2022-05-09 18:09:31,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:09:31,419 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:09:31,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,431 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:09:31,432 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:09:31,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,434 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:09:31,448 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:09:31,449 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:09:31,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,451 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：431
2022-05-09 18:09:31,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:09:31,464 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [430, 431]}
2022-05-09 18:09:31,465 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:09:31,465 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：430, 431的记录
2022-05-09 18:10:12,473 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:10:12,474 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "LFJ9"}
2022-05-09 18:10:12,474 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,474 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"ec151538936d479f913a3851a92654ac"}
2022-05-09 18:10:12,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:12,485 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:10:12,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,497 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:12,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:10:12,498 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,498 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：618
2022-05-09 18:10:12,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,535 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,536 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,544 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:10:12,545 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 618}
2022-05-09 18:10:12,545 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,545 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：618的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 618, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:10:12,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:12,552 INFO [root] [key.py (post:21] - 传的参数是：{"id": 618, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:10:12,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,562 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:10:12,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 618}
2022-05-09 18:10:12,563 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,563 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：618的记录已成功
2022-05-09 18:10:12,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:12,637 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:10:12,637 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,638 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:10:12,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:12,650 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [618]}
2022-05-09 18:10:12,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,651 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：618的记录
2022-05-09 18:10:12,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:12,660 INFO [root] [key.py (post:21] - 传的参数是：{"id": 618, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:10:12,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:12,673 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:10:12,673 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,674 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：619
2022-05-09 18:10:12,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:12,682 INFO [root] [key.py (post:21] - 传的参数是：{"id": 619, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:10:12,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,691 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:12,692 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:10:12,692 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,693 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：620
2022-05-09 18:10:12,704 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:12,704 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [619, 620]}
2022-05-09 18:10:12,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,705 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：619, 620的记录
2022-05-09 18:10:12,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:12,721 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:10:12,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:12,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:10:12,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,735 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：621
2022-05-09 18:10:12,778 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,790 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:12,790 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:10:12,791 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,791 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:10:12,799 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:12,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 621}
2022-05-09 18:10:12,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:12,815 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 621}, "name": "\u6c49EV"}}
2022-05-09 18:10:12,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,815 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：530
2022-05-09 18:10:12,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,847 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:10:12,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 530}
2022-05-09 18:10:12,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,863 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：530的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 621}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 530, 'nationalStandard': 255}
2022-05-09 18:10:12,875 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:10:12,875 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 530}
2022-05-09 18:10:12,876 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,876 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：530的记录已成功
2022-05-09 18:10:12,924 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,924 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:12,938 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:10:12,938 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,938 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:10:12,980 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:12,981 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:12,981 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:12,997 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:10:12,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:12,998 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:10:13,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,042 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,042 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:10:13,073 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:10:13,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,073 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 621]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 621}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:10:13,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:13,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [530]}
2022-05-09 18:10:13,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,086 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：530的记录
2022-05-09 18:10:13,132 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,133 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:13,142 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:10:13,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,143 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:10:13,152 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:13,152 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 621}
2022-05-09 18:10:13,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:13,164 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 621}, "name": "\u6c49EV"}}
2022-05-09 18:10:13,164 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,165 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：531
2022-05-09 18:10:13,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:13,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:10:13,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,220 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:10:13,235 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:13,236 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 621}
2022-05-09 18:10:13,236 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:13,249 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 621}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:10:13,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,249 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：532
2022-05-09 18:10:13,258 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:13,258 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [531, 532]}
2022-05-09 18:10:13,259 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,259 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：531, 532的记录
2022-05-09 18:10:13,268 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:13,269 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [621]}
2022-05-09 18:10:13,269 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,269 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：621的记录
2022-05-09 18:10:13,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:10:13,280 INFO [root] [key.py (post:21] - 传的参数是：{"id": 621, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:10:13,281 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:13,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:10:13,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,293 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：622
2022-05-09 18:10:13,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,349 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,350 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,359 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:13,360 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:10:13,360 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,360 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:10:13,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:13,371 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 622}
2022-05-09 18:10:13,371 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,384 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:13,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 622}, "name": "\u6c49EV"}}
2022-05-09 18:10:13,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,385 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：533
2022-05-09 18:10:13,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,479 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:13,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:10:13,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,514 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:10:13,526 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:13,527 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 533}
2022-05-09 18:10:13,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,541 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:13,542 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 533}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:10:13,542 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,542 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：457
2022-05-09 18:10:13,587 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:10:13,597 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 457}
2022-05-09 18:10:13,598 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,598 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：457的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 533}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 457}
2022-05-09 18:10:13,615 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:10:13,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 457}
2022-05-09 18:10:13,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,616 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：457的记录已成功
2022-05-09 18:10:13,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,662 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:13,675 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:10:13,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,677 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:10:13,717 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,718 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,737 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:13,738 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:10:13,739 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,740 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:10:13,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,790 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:13,805 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:10:13,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,806 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:10:13,850 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,850 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,852 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:13,866 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:10:13,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,868 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:10:13,913 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,913 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:13,930 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:10:13,930 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:13,931 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:10:13,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:13,966 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:13,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:10:14,007 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:10:14,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,010 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:10:14,054 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,055 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,056 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:10:14,097 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:10:14,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,099 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 533]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 533}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:10:14,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,110 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [457]}
2022-05-09 18:10:14,110 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,111 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：457的记录
2022-05-09 18:10:14,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,142 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:14,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:10:14,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,155 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:10:14,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:14,165 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 533}
2022-05-09 18:10:14,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,179 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:14,180 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 533}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:10:14,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,181 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：458
2022-05-09 18:10:14,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,226 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:14,240 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:10:14,241 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,241 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:10:14,254 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:10:14,255 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 533}
2022-05-09 18:10:14,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,269 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:14,270 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 533}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:10:14,271 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,271 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：459
2022-05-09 18:10:14,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,285 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [458, 459]}
2022-05-09 18:10:14,285 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,286 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：458, 459的记录
2022-05-09 18:10:14,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,302 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [533]}
2022-05-09 18:10:14,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,302 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：533的记录
2022-05-09 18:10:14,314 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,315 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [622]}
2022-05-09 18:10:14,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,316 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：622的记录
2022-05-09 18:10:14,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:14,366 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:10:14,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,367 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:10:14,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:14,378 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:10:14,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,379 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：432
2022-05-09 18:10:14,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,422 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:10:14,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 432}
2022-05-09 18:10:14,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,434 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：432的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 432, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:10:14,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:10:14,447 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 432}
2022-05-09 18:10:14,447 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,448 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：432的记录已成功
2022-05-09 18:10:14,493 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,493 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,509 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:14,510 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:10:14,511 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,511 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:10:14,555 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,556 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,557 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,572 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:14,573 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:10:14,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,575 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:10:14,622 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,623 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:14,635 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:10:14,635 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,636 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:10:14,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,675 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,688 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:10:14,689 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:10:14,690 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,690 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:10:14,735 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,736 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,737 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:10:14,780 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:10:14,780 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,780 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:10:14,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,825 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:10:14,825 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:10:14,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,826 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:10:14,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,837 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [432]}
2022-05-09 18:10:14,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,837 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：432的记录
2022-05-09 18:10:14,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,872 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:14,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:10:14,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,884 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:10:14,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:14,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:10:14,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,896 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：433
2022-05-09 18:10:14,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:10:14,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:10:14,942 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,953 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:10:14,954 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:10:14,955 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,955 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:10:14,971 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:10:14,971 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:10:14,972 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,973 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：434
2022-05-09 18:10:14,987 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:10:14,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [433, 434]}
2022-05-09 18:10:14,988 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:10:14,989 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：433, 434的记录
2022-05-09 18:15:15,599 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:15:15,600 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "9N7U"}
2022-05-09 18:15:15,600 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,600 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5e89b884d13b4ed99f9a1acf326a2671"}
2022-05-09 18:15:15,609 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:15,609 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:15:15,610 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,621 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:15,622 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:15:15,622 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,622 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：623
2022-05-09 18:15:15,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:15,682 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:15,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:15:15,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 623}
2022-05-09 18:15:15,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,695 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：623的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 623, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:15:15,703 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:15,703 INFO [root] [key.py (post:21] - 传的参数是：{"id": 623, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:15:15,704 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:15:15,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 623}
2022-05-09 18:15:15,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,715 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：623的记录已成功
2022-05-09 18:15:15,762 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:15,763 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:15,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,780 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:15,780 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:15:15,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,781 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:15:15,794 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:15,795 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [623]}
2022-05-09 18:15:15,795 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,796 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：623的记录
2022-05-09 18:15:15,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:15,805 INFO [root] [key.py (post:21] - 传的参数是：{"id": 623, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:15:15,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,818 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:15,819 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:15:15,819 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,820 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：624
2022-05-09 18:15:15,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:15,829 INFO [root] [key.py (post:21] - 传的参数是：{"id": 624, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:15:15,830 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:15,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:15:15,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,842 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：625
2022-05-09 18:15:15,854 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:15,854 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [624, 625]}
2022-05-09 18:15:15,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,855 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：624, 625的记录
2022-05-09 18:15:15,872 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:15,872 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:15:15,873 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:15,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:15:15,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,885 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：626
2022-05-09 18:15:15,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:15,944 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:15,944 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,953 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:15,953 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:15:15,954 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,954 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:15:15,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:15,962 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 626}
2022-05-09 18:15:15,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:15,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 626}, "name": "\u6c49EV"}}
2022-05-09 18:15:15,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:15,976 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：534
2022-05-09 18:15:16,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,017 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,027 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:15:16,028 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 534}
2022-05-09 18:15:16,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,029 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：534的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 626}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 534, 'nationalStandard': 255}
2022-05-09 18:15:16,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:15:16,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 534}
2022-05-09 18:15:16,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,041 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：534的记录已成功
2022-05-09 18:15:16,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,102 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:15:16,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,103 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:15:16,140 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,142 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,157 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:15:16,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,158 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:15:16,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,198 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,229 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:15:16,229 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:15:16,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,230 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 626]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 626}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:15:16,245 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:16,245 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [534]}
2022-05-09 18:15:16,246 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,246 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：534的记录
2022-05-09 18:15:16,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:16,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:15:16,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,306 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:15:16,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:16,319 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 626}
2022-05-09 18:15:16,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:16,333 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 626}, "name": "\u6c49EV"}}
2022-05-09 18:15:16,334 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,335 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：535
2022-05-09 18:15:16,376 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,377 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:16,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:15:16,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,387 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:15:16,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:16,397 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 626}
2022-05-09 18:15:16,397 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,412 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:16,412 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 626}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:15:16,412 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,413 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：536
2022-05-09 18:15:16,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:16,424 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [535, 536]}
2022-05-09 18:15:16,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,425 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：535, 536的记录
2022-05-09 18:15:16,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:16,436 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [626]}
2022-05-09 18:15:16,436 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,436 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：626的记录
2022-05-09 18:15:16,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:15:16,449 INFO [root] [key.py (post:21] - 传的参数是：{"id": 626, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:15:16,450 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:16,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:15:16,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,463 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：627
2022-05-09 18:15:16,505 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,505 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:16,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:15:16,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,518 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:15:16,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:16,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 627}
2022-05-09 18:15:16,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,545 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:16,545 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 627}, "name": "\u6c49EV"}}
2022-05-09 18:15:16,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,546 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：537
2022-05-09 18:15:16,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,591 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:16,601 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:15:16,602 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,602 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:15:16,611 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:16,611 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 537}
2022-05-09 18:15:16,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:16,623 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 537}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:15:16,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,624 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：460
2022-05-09 18:15:16,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,668 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:15:16,682 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 460}
2022-05-09 18:15:16,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,682 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：460的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 537}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 460}
2022-05-09 18:15:16,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:15:16,697 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 460}
2022-05-09 18:15:16,698 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,698 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：460的记录已成功
2022-05-09 18:15:16,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,745 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,746 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,760 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,761 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:15:16,762 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,762 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:15:16,807 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,808 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,808 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,823 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,824 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:15:16,824 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,825 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:15:16,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,869 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,870 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,885 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:15:16,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,886 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:15:16,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,930 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,931 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:16,946 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:15:16,946 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:16,947 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:15:16,993 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:16,994 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:16,994 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:17,009 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:15:17,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,010 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:15:17,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,057 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,058 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:15:17,110 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:15:17,110 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,111 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:15:17,155 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,156 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,217 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:15:17,218 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:15:17,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,221 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 537]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 537}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:15:17,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:17,244 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [460]}
2022-05-09 18:15:17,245 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,246 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：460的记录
2022-05-09 18:15:17,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,289 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,297 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:17,298 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:15:17,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,299 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:15:17,307 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:17,308 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 537}
2022-05-09 18:15:17,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:17,318 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 537}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:15:17,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,319 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：461
2022-05-09 18:15:17,361 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,362 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:17,372 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:15:17,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,373 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:15:17,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:15:17,383 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 537}
2022-05-09 18:15:17,383 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,393 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:17,394 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 537}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:15:17,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,396 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：462
2022-05-09 18:15:17,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:17,406 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [461, 462]}
2022-05-09 18:15:17,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,406 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：461, 462的记录
2022-05-09 18:15:17,416 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:17,417 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [537]}
2022-05-09 18:15:17,418 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,418 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：537的记录
2022-05-09 18:15:17,429 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:17,430 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [627]}
2022-05-09 18:15:17,430 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,431 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：627的记录
2022-05-09 18:15:17,472 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,472 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,479 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:17,479 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:15:17,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,480 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:15:17,490 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:17,490 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:15:17,491 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,491 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：435
2022-05-09 18:15:17,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,518 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,527 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:15:17,527 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 435}
2022-05-09 18:15:17,528 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,528 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：435的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 435, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:15:17,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:15:17,538 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 435}
2022-05-09 18:15:17,538 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,538 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：435的记录已成功
2022-05-09 18:15:17,582 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,583 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,584 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:17,598 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:15:17,598 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,599 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:15:17,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:17,653 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:15:17,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,653 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:15:17,701 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,701 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,702 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,718 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:17,718 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:15:17,719 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,719 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:15:17,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,770 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,772 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:15:17,792 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:15:17,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,794 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:15:17,836 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,837 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,838 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:15:17,889 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:15:17,890 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,890 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:15:17,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,921 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,929 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:15:17,930 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:15:17,930 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,931 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:15:17,941 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:17,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [435]}
2022-05-09 18:15:17,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,941 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：435的记录
2022-05-09 18:15:17,985 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:17,986 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:17,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:17,997 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:18,000 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:15:18,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,001 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:15:18,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:18,017 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:15:18,018 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,018 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：436
2022-05-09 18:15:18,066 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:15:18,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:15:18,067 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:15:18,075 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:15:18,075 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,076 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:15:18,088 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:15:18,089 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:15:18,089 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,089 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：437
2022-05-09 18:15:18,100 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:15:18,101 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [436, 437]}
2022-05-09 18:15:18,101 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:15:18,101 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：436, 437的记录
2022-05-09 18:16:55,353 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:17:19,130 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:17:19,130 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "GE9R"}
2022-05-09 18:17:19,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,131 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"405bfa8960354e38b3d2dfd4e79f20d9"}
2022-05-09 18:17:19,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:19,141 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:17:19,141 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,153 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:17:19,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,154 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：628
2022-05-09 18:17:19,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,201 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,213 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:17:19,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 628}
2022-05-09 18:17:19,214 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,214 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：628的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 628, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:17:19,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:19,222 INFO [root] [key.py (post:21] - 传的参数是：{"id": 628, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:17:19,222 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,236 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:17:19,236 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 628}
2022-05-09 18:17:19,236 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,236 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：628的记录已成功
2022-05-09 18:17:19,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,292 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:19,311 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:17:19,313 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,315 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:17:19,332 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:19,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [628]}
2022-05-09 18:17:19,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,334 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：628的记录
2022-05-09 18:17:19,344 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:19,345 INFO [root] [key.py (post:21] - 传的参数是：{"id": 628, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:17:19,345 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,360 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:17:19,361 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,361 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：629
2022-05-09 18:17:19,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:19,369 INFO [root] [key.py (post:21] - 传的参数是：{"id": 629, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:17:19,369 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,379 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,380 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:17:19,380 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,380 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：630
2022-05-09 18:17:19,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:19,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [629, 630]}
2022-05-09 18:17:19,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,391 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：629, 630的记录
2022-05-09 18:17:19,404 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:19,404 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:17:19,405 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:17:19,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,416 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：631
2022-05-09 18:17:19,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,454 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,454 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,462 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:19,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:17:19,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,463 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:17:19,471 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:19,471 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 631}
2022-05-09 18:17:19,472 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,482 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,482 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 631}, "name": "\u6c49EV"}}
2022-05-09 18:17:19,482 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,482 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：538
2022-05-09 18:17:19,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,531 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:17:19,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 538}
2022-05-09 18:17:19,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,553 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：538的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 631}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 538, 'nationalStandard': 255}
2022-05-09 18:17:19,566 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:17:19,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 538}
2022-05-09 18:17:19,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,568 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：538的记录已成功
2022-05-09 18:17:19,615 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:19,639 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:17:19,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,642 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:17:19,706 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,706 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,707 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,726 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:19,726 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:17:19,728 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,729 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:17:19,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,774 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,774 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:17:19,804 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:17:19,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,805 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 631]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 631}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:17:19,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:19,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [538]}
2022-05-09 18:17:19,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,816 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：538的记录
2022-05-09 18:17:19,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,863 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:19,877 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:17:19,877 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,878 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:17:19,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:19,890 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 631}
2022-05-09 18:17:19,891 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,904 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,904 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 631}, "name": "\u6c49EV"}}
2022-05-09 18:17:19,905 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,906 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：539
2022-05-09 18:17:19,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:19,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:19,948 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:19,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:17:19,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,965 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:17:19,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:19,975 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 631}
2022-05-09 18:17:19,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:19,986 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 631}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:17:19,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:19,986 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：540
2022-05-09 18:17:19,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:19,999 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [539, 540]}
2022-05-09 18:17:19,999 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,000 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：539, 540的记录
2022-05-09 18:17:20,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:20,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [631]}
2022-05-09 18:17:20,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,008 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：631的记录
2022-05-09 18:17:20,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:17:20,020 INFO [root] [key.py (post:21] - 传的参数是：{"id": 631, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:17:20,020 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:17:20,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,030 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：632
2022-05-09 18:17:20,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,059 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,067 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:20,067 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:17:20,067 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,068 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:17:20,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:20,076 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 632}
2022-05-09 18:17:20,076 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,086 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 632}, "name": "\u6c49EV"}}
2022-05-09 18:17:20,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,086 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：541
2022-05-09 18:17:20,116 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,116 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,117 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,123 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:20,124 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:17:20,124 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,124 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:17:20,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:20,131 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 541}
2022-05-09 18:17:20,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,140 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,141 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 541}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:17:20,141 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,142 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：463
2022-05-09 18:17:20,172 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,181 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:17:20,182 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 463}
2022-05-09 18:17:20,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,182 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：463的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 541}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 463}
2022-05-09 18:17:20,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:17:20,191 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 463}
2022-05-09 18:17:20,191 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,191 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：463的记录已成功
2022-05-09 18:17:20,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,222 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,222 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:20,234 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:17:20,235 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,235 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:17:20,271 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,271 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,272 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:20,285 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:17:20,286 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,287 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:17:20,332 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,333 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,352 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:20,353 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:17:20,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,356 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:17:20,403 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,404 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,405 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:20,425 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:17:20,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,426 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:17:20,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,470 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:20,484 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:17:20,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,485 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:17:20,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,526 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,527 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:17:20,565 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:17:20,566 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,567 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:17:20,610 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,611 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:17:20,666 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:17:20,667 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,668 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 541]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 541}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:17:20,684 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:20,684 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [463]}
2022-05-09 18:17:20,685 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,686 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：463的记录
2022-05-09 18:17:20,734 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,736 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:20,751 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:17:20,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,752 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:17:20,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:20,761 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 541}
2022-05-09 18:17:20,762 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,773 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,773 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 541}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:17:20,773 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,773 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：464
2022-05-09 18:17:20,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:20,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:17:20,818 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,818 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:17:20,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:17:20,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 541}
2022-05-09 18:17:20,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 541}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:17:20,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,841 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：465
2022-05-09 18:17:20,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:20,853 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [464, 465]}
2022-05-09 18:17:20,853 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,853 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：464, 465的记录
2022-05-09 18:17:20,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:20,867 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [541]}
2022-05-09 18:17:20,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,867 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：541的记录
2022-05-09 18:17:20,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:20,881 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [632]}
2022-05-09 18:17:20,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,881 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：632的记录
2022-05-09 18:17:20,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:20,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:20,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,944 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:20,944 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:17:20,945 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,946 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:17:20,962 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:20,963 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:17:20,963 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:20,964 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：438
2022-05-09 18:17:21,009 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,010 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,011 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:17:21,024 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 438}
2022-05-09 18:17:21,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,025 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：438的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 438, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:17:21,039 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:17:21,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 438}
2022-05-09 18:17:21,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,041 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：438的记录已成功
2022-05-09 18:17:21,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,109 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:21,109 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:17:21,110 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,110 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:17:21,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,157 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:21,172 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:17:21,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,173 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:17:21,220 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,221 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:21,239 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:17:21,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,241 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:17:21,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,285 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,286 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:17:21,305 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:17:21,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,307 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:17:21,356 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,356 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,357 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,412 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:17:21,412 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:17:21,413 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,413 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:17:21,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,459 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,460 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,472 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:17:21,473 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:17:21,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,474 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:17:21,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:21,489 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [438]}
2022-05-09 18:17:21,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,489 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：438的记录
2022-05-09 18:17:21,539 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,539 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:21,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:17:21,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,553 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:17:21,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:21,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:17:21,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,568 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：439
2022-05-09 18:17:21,616 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:17:21,617 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:17:21,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,631 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:17:21,632 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:17:21,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,633 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:17:21,649 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:17:21,649 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:17:21,650 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,651 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：440
2022-05-09 18:17:21,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:17:21,662 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [439, 440]}
2022-05-09 18:17:21,663 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:17:21,664 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：439, 440的记录
2022-05-09 18:18:51,034 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:19:57,648 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:20:13,152 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:21:18,505 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:22:09,679 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:22:20,071 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:24:15,284 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:24:33,071 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:24:48,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:24:48,999 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2JUR"}
2022-05-09 18:24:49,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,000 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"c1f4e5a32eef4c3186a2793fd100f550"}
2022-05-09 18:24:49,009 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,009 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,025 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:24:49,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,026 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：633
2022-05-09 18:24:49,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,078 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,078 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,089 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:24:49,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 633}
2022-05-09 18:24:49,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,090 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：633的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 633, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:24:49,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,099 INFO [root] [key.py (post:21] - 传的参数是：{"id": 633, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,100 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:24:49,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 633}
2022-05-09 18:24:49,112 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,113 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：633的记录已成功
2022-05-09 18:24:49,161 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,161 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,162 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:49,179 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:24:49,181 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,182 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:24:49,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:49,198 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [633]}
2022-05-09 18:24:49,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,200 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：633的记录
2022-05-09 18:24:49,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,213 INFO [root] [key.py (post:21] - 传的参数是：{"id": 633, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,214 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,232 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:24:49,233 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,233 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：634
2022-05-09 18:24:49,244 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,244 INFO [root] [key.py (post:21] - 传的参数是：{"id": 634, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,245 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,284 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,284 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:24:49,285 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,286 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：635
2022-05-09 18:24:49,301 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:49,301 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [634, 635]}
2022-05-09 18:24:49,302 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,302 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：634, 635的记录
2022-05-09 18:24:49,325 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,326 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,326 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,338 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,339 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:24:49,339 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,340 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：636
2022-05-09 18:24:49,413 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,413 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,414 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:49,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:24:49,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,424 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:24:49,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:49,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 636}
2022-05-09 18:24:49,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,447 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,448 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 636}, "name": "\u6c49EV"}}
2022-05-09 18:24:49,448 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,448 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：542
2022-05-09 18:24:49,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:24:49,507 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 542}
2022-05-09 18:24:49,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,507 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：542的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 636}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 542, 'nationalStandard': 255}
2022-05-09 18:24:49,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:24:49,517 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 542}
2022-05-09 18:24:49,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,518 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：542的记录已成功
2022-05-09 18:24:49,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,556 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,557 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,569 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:49,570 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:24:49,570 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,571 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:24:49,606 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,606 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,607 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,619 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:49,620 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:24:49,620 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,621 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:24:49,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,687 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,689 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,721 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:24:49,721 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:24:49,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,722 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 636]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 636}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:24:49,736 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:49,736 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [542]}
2022-05-09 18:24:49,737 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,737 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：542的记录
2022-05-09 18:24:49,781 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,782 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,782 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:49,791 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:24:49,792 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,793 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:24:49,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:49,803 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 636}
2022-05-09 18:24:49,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,818 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 636}, "name": "\u6c49EV"}}
2022-05-09 18:24:49,818 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,819 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：543
2022-05-09 18:24:49,867 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:49,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:49,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,880 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:49,881 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:24:49,882 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,883 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:24:49,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:49,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 636}
2022-05-09 18:24:49,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,912 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,913 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 636}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:24:49,914 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,915 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：544
2022-05-09 18:24:49,930 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:49,931 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [543, 544]}
2022-05-09 18:24:49,932 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,932 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：543, 544的记录
2022-05-09 18:24:49,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:49,946 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [636]}
2022-05-09 18:24:49,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,947 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：636的记录
2022-05-09 18:24:49,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:24:49,968 INFO [root] [key.py (post:21] - 传的参数是：{"id": 636, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:24:49,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,982 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:49,983 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:24:49,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:49,983 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：637
2022-05-09 18:24:50,033 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,033 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,034 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:50,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:24:50,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,043 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:24:50,052 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:50,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 637}
2022-05-09 18:24:50,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:50,065 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 637}, "name": "\u6c49EV"}}
2022-05-09 18:24:50,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,066 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：545
2022-05-09 18:24:50,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,113 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,115 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:50,130 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:24:50,131 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,132 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:24:50,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:50,146 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 545}
2022-05-09 18:24:50,147 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,163 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:50,164 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 545}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:24:50,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,167 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：466
2022-05-09 18:24:50,213 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,215 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:24:50,231 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 466}
2022-05-09 18:24:50,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,232 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：466的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 545}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 466}
2022-05-09 18:24:50,247 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:24:50,247 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 466}
2022-05-09 18:24:50,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,249 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：466的记录已成功
2022-05-09 18:24:50,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:50,318 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:24:50,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,320 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:24:50,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,368 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:50,381 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:24:50,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,382 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:24:50,415 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,415 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,416 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,427 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:50,427 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:24:50,428 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,429 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:24:50,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,474 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:50,475 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:24:50,475 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,475 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:24:50,504 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,504 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,505 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:50,517 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:24:50,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,518 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:24:50,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,547 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,547 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:24:50,582 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:24:50,583 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,584 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:24:50,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,618 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,662 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:24:50,663 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:24:50,664 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,665 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 545]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 545}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:24:50,678 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:50,679 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [466]}
2022-05-09 18:24:50,679 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,680 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：466的记录
2022-05-09 18:24:50,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,713 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:50,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:24:50,725 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,726 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:24:50,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:50,743 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 545}
2022-05-09 18:24:50,744 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,755 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:50,756 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 545}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:24:50,757 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,758 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：467
2022-05-09 18:24:50,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,789 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,790 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,802 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:50,802 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:24:50,803 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,804 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:24:50,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:24:50,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 545}
2022-05-09 18:24:50,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:50,832 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 545}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:24:50,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,834 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：468
2022-05-09 18:24:50,849 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:50,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [467, 468]}
2022-05-09 18:24:50,850 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,851 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：467, 468的记录
2022-05-09 18:24:50,865 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:50,866 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [545]}
2022-05-09 18:24:50,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,868 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：545的记录
2022-05-09 18:24:50,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:50,881 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [637]}
2022-05-09 18:24:50,882 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,883 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：637的记录
2022-05-09 18:24:50,931 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,931 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:50,941 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:24:50,941 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,941 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:24:50,952 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:50,953 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:24:50,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:50,953 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：441
2022-05-09 18:24:50,992 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:50,993 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:50,993 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,003 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:24:51,004 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 441}
2022-05-09 18:24:51,004 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,005 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：441的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 441, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:24:51,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:24:51,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 441}
2022-05-09 18:24:51,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,016 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：441的记录已成功
2022-05-09 18:24:51,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,046 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,059 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:51,059 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:24:51,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,060 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:24:51,097 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,097 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,112 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:51,112 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:24:51,113 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,113 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:24:51,155 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:51,171 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:24:51,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,172 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:24:51,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,234 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:24:51,234 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:24:51,235 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,236 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:24:51,283 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,284 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,284 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:24:51,342 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:24:51,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,342 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:24:51,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,392 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,406 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:24:51,406 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:24:51,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,407 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:24:51,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:51,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [441]}
2022-05-09 18:24:51,422 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,422 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：441的记录
2022-05-09 18:24:51,469 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,470 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,471 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,482 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:51,483 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:24:51,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,484 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:24:51,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:51,498 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:24:51,499 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,499 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：442
2022-05-09 18:24:51,548 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:24:51,549 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:24:51,549 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:24:51,559 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:24:51,560 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,560 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:24:51,573 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:24:51,573 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:24:51,573 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,573 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：443
2022-05-09 18:24:51,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:24:51,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [442, 443]}
2022-05-09 18:24:51,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:24:51,586 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：442, 443的记录
2022-05-09 18:25:27,001 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipaiapi/reports/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 46, in allure
    stop_thread(t1)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 38, in stop_thread
    _async_raise(thread.ident, SystemExit)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 29, in _async_raise
    raise ValueError("invalid thread id")
ValueError: invalid thread id
2022-05-09 18:25:37,505 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:25:47,730 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:25:47,731 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "AKK9"}
2022-05-09 18:25:47,731 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,731 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"e1733ad72b0c43849c689753b00e09d9"}
2022-05-09 18:25:47,739 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:47,740 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:25:47,740 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:47,752 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:25:47,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,752 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：638
2022-05-09 18:25:47,791 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:47,792 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:47,792 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:25:47,803 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 638}
2022-05-09 18:25:47,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,804 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：638的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 638, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:25:47,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:47,817 INFO [root] [key.py (post:21] - 传的参数是：{"id": 638, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:25:47,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:25:47,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 638}
2022-05-09 18:25:47,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,827 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：638的记录已成功
2022-05-09 18:25:47,863 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:47,863 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:47,864 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,877 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:47,877 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:25:47,878 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,878 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:25:47,889 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:47,889 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [638]}
2022-05-09 18:25:47,889 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,889 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：638的记录
2022-05-09 18:25:47,897 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:47,897 INFO [root] [key.py (post:21] - 传的参数是：{"id": 638, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:25:47,898 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:47,911 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:25:47,911 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,912 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：639
2022-05-09 18:25:47,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:47,921 INFO [root] [key.py (post:21] - 传的参数是：{"id": 639, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:25:47,921 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,932 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:47,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:25:47,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,933 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：640
2022-05-09 18:25:47,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:47,943 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [639, 640]}
2022-05-09 18:25:47,943 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,943 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：639, 640的记录
2022-05-09 18:25:47,958 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:47,958 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:25:47,959 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:47,974 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:25:47,974 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:47,975 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：641
2022-05-09 18:25:48,012 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,013 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,013 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:48,020 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:25:48,020 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,020 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:25:48,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:48,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 641}
2022-05-09 18:25:48,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,043 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 641}, "name": "\u6c49EV"}}
2022-05-09 18:25:48,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,043 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：546
2022-05-09 18:25:48,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,080 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,090 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:25:48,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 546}
2022-05-09 18:25:48,090 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,091 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：546的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 641}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 546, 'nationalStandard': 255}
2022-05-09 18:25:48,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:25:48,101 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 546}
2022-05-09 18:25:48,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,102 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：546的记录已成功
2022-05-09 18:25:48,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,151 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:25:48,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,152 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:25:48,188 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,189 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,204 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,204 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:25:48,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,205 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:25:48,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,239 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:25:48,268 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:25:48,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,269 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 641]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 641}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:25:48,279 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:48,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [546]}
2022-05-09 18:25:48,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,280 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：546的记录
2022-05-09 18:25:48,314 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,314 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,315 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,322 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:48,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:25:48,323 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,323 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:25:48,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:48,333 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 641}
2022-05-09 18:25:48,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,344 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,344 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 641}, "name": "\u6c49EV"}}
2022-05-09 18:25:48,345 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,345 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：547
2022-05-09 18:25:48,389 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,390 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,400 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:48,401 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:25:48,401 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,402 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:25:48,413 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:48,414 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 641}
2022-05-09 18:25:48,415 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,426 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,426 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 641}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:25:48,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,427 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：548
2022-05-09 18:25:48,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:48,440 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [547, 548]}
2022-05-09 18:25:48,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,440 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：547, 548的记录
2022-05-09 18:25:48,453 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:48,453 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [641]}
2022-05-09 18:25:48,453 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,454 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：641的记录
2022-05-09 18:25:48,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:25:48,468 INFO [root] [key.py (post:21] - 传的参数是：{"id": 641, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:25:48,468 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,478 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,478 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:25:48,479 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,479 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：642
2022-05-09 18:25:48,531 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,532 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,532 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,539 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:48,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:25:48,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,541 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:25:48,551 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:48,552 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 642}
2022-05-09 18:25:48,552 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 642}, "name": "\u6c49EV"}}
2022-05-09 18:25:48,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,565 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：549
2022-05-09 18:25:48,611 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,612 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:48,625 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:25:48,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,626 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:25:48,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:48,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 549}
2022-05-09 18:25:48,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:48,652 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 549}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:25:48,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,653 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：469
2022-05-09 18:25:48,698 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,699 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,710 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:25:48,710 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 469}
2022-05-09 18:25:48,710 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,710 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：469的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 549}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 469}
2022-05-09 18:25:48,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:25:48,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 469}
2022-05-09 18:25:48,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,724 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：469的记录已成功
2022-05-09 18:25:48,766 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,768 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,782 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,783 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:25:48,783 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,784 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:25:48,829 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,830 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,831 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,846 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:25:48,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,847 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:25:48,893 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,894 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,895 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,912 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,912 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:25:48,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,912 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:25:48,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:48,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:48,961 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:48,979 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:25:48,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:48,981 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:25:49,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,030 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:49,045 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:25:49,046 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,046 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:25:49,090 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,090 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,146 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:25:49,147 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:25:49,148 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,149 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:25:49,193 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,194 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,194 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:25:49,249 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:25:49,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,250 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 549]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 549}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:25:49,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:49,280 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [469]}
2022-05-09 18:25:49,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,281 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：469的记录
2022-05-09 18:25:49,329 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,329 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,330 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,339 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:49,340 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:25:49,340 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,340 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:25:49,351 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:49,352 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 549}
2022-05-09 18:25:49,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,364 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:49,364 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 549}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:25:49,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,365 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：470
2022-05-09 18:25:49,411 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,412 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,413 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,422 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:49,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:25:49,423 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,424 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:25:49,434 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:25:49,435 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 549}
2022-05-09 18:25:49,435 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:49,451 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 549}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:25:49,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,452 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：471
2022-05-09 18:25:49,465 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:49,466 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [470, 471]}
2022-05-09 18:25:49,466 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,467 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：470, 471的记录
2022-05-09 18:25:49,481 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:49,482 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [549]}
2022-05-09 18:25:49,482 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,483 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：549的记录
2022-05-09 18:25:49,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:49,496 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [642]}
2022-05-09 18:25:49,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,497 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：642的记录
2022-05-09 18:25:49,552 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,553 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,553 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,562 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:49,562 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:25:49,562 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,563 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:25:49,577 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:49,577 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:25:49,577 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,577 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：444
2022-05-09 18:25:49,626 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,627 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,639 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:25:49,640 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 444}
2022-05-09 18:25:49,640 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,641 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：444的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 444, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:25:49,653 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:25:49,654 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 444}
2022-05-09 18:25:49,655 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,655 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：444的记录已成功
2022-05-09 18:25:49,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,699 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,700 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:49,713 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:25:49,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,714 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:25:49,757 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:49,770 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:25:49,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,771 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:25:49,811 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,812 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,812 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,823 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:49,823 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:25:49,823 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,824 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:25:49,856 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,857 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,857 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:25:49,868 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:25:49,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,868 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:25:49,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,897 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,897 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:25:49,934 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:25:49,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,935 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:25:49,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:49,966 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:49,967 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:25:49,976 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:25:49,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,977 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:25:49,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:49,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [444]}
2022-05-09 18:25:49,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:49,987 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：444的记录
2022-05-09 18:25:50,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:50,016 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:50,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:50,025 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:25:50,025 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,026 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:25:50,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:50,038 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:25:50,039 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,039 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：445
2022-05-09 18:25:50,068 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:25:50,069 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:25:50,070 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,077 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:25:50,078 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:25:50,078 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,078 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:25:50,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:25:50,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:25:50,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,095 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：446
2022-05-09 18:25:50,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:25:50,107 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [445, 446]}
2022-05-09 18:25:50,107 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:25:50,107 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：445, 446的记录
2022-05-09 18:27:27,154 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:28:08,535 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:28:08,535 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "TEE9"}
2022-05-09 18:28:08,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,535 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"8bf6d08a8f0e4ad88491c6dd60e0f9f4"}
2022-05-09 18:28:08,545 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:08,545 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:28:08,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,558 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:08,558 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:28:08,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,559 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：643
2022-05-09 18:28:08,608 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:08,608 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:08,609 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,619 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:28:08,620 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 643}
2022-05-09 18:28:08,620 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,620 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：643的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 643, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:28:08,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:08,627 INFO [root] [key.py (post:21] - 传的参数是：{"id": 643, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:28:08,627 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:28:08,639 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 643}
2022-05-09 18:28:08,639 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,639 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：643的记录已成功
2022-05-09 18:28:08,685 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:08,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:08,686 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:08,700 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:28:08,700 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,701 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:28:08,713 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:08,714 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [643]}
2022-05-09 18:28:08,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,715 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：643的记录
2022-05-09 18:28:08,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:08,724 INFO [root] [key.py (post:21] - 传的参数是：{"id": 643, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:28:08,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,737 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:08,738 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:28:08,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,739 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：644
2022-05-09 18:28:08,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:08,748 INFO [root] [key.py (post:21] - 传的参数是：{"id": 644, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:28:08,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,760 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:08,760 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:28:08,761 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,762 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：645
2022-05-09 18:28:08,774 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:08,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [644, 645]}
2022-05-09 18:28:08,775 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,776 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：644, 645的记录
2022-05-09 18:28:08,792 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:08,793 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:28:08,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:08,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:28:08,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,806 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：646
2022-05-09 18:28:08,851 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:08,851 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:08,852 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,860 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:08,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:28:08,861 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,861 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:28:08,870 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:08,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 646}
2022-05-09 18:28:08,871 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:08,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 646}, "name": "\u6c49EV"}}
2022-05-09 18:28:08,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,884 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：550
2022-05-09 18:28:08,927 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:08,927 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:08,928 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:28:08,939 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 550}
2022-05-09 18:28:08,939 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,940 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：550的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 646}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 550, 'nationalStandard': 255}
2022-05-09 18:28:08,950 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:28:08,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 550}
2022-05-09 18:28:08,951 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:08,951 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：550的记录已成功
2022-05-09 18:28:08,993 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:08,994 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:08,994 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,009 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:28:09,010 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,010 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:28:09,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,052 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,069 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,070 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:28:09,070 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,071 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:28:09,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,114 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:28:09,143 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:28:09,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,143 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 646]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 646}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:28:09,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:09,154 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [550]}
2022-05-09 18:28:09,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,154 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：550的记录
2022-05-09 18:28:09,196 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,197 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,210 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:09,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:28:09,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,212 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:28:09,223 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:09,223 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 646}
2022-05-09 18:28:09,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:09,240 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 646}, "name": "\u6c49EV"}}
2022-05-09 18:28:09,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,240 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：551
2022-05-09 18:28:09,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,290 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,299 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:09,300 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:28:09,301 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,301 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:28:09,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:09,313 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 646}
2022-05-09 18:28:09,314 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,329 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:09,329 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 646}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:28:09,330 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,331 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：552
2022-05-09 18:28:09,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:09,347 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [551, 552]}
2022-05-09 18:28:09,347 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,349 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：551, 552的记录
2022-05-09 18:28:09,362 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:09,362 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [646]}
2022-05-09 18:28:09,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,364 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：646的记录
2022-05-09 18:28:09,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:28:09,381 INFO [root] [key.py (post:21] - 传的参数是：{"id": 646, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:28:09,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:09,395 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:28:09,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,396 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：647
2022-05-09 18:28:09,430 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,431 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,438 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:09,438 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:28:09,438 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,439 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:28:09,447 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:09,447 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 647}
2022-05-09 18:28:09,448 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,457 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:09,457 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 647}, "name": "\u6c49EV"}}
2022-05-09 18:28:09,457 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,458 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：553
2022-05-09 18:28:09,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,494 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,502 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:09,502 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:28:09,502 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,503 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:28:09,512 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:09,513 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 553}
2022-05-09 18:28:09,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:09,524 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 553}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:28:09,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,524 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：472
2022-05-09 18:28:09,557 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,558 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,558 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,566 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:28:09,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 472}
2022-05-09 18:28:09,567 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,568 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：472的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 553}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 472}
2022-05-09 18:28:09,578 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:28:09,578 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 472}
2022-05-09 18:28:09,578 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,579 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：472的记录已成功
2022-05-09 18:28:09,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,621 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,622 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,646 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,646 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:28:09,647 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,647 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:28:09,707 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,707 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,707 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,720 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,721 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:28:09,721 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,721 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:28:09,764 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,764 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,777 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:28:09,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,778 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:28:09,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,821 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,822 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,835 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,835 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:28:09,836 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,836 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:28:09,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,883 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:09,900 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:28:09,903 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:09,903 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:28:09,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:09,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:09,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,000 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:28:10,001 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:28:10,001 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,002 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:28:10,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,102 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:28:10,102 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:28:10,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,103 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 553]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 553}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:28:10,115 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:10,116 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [472]}
2022-05-09 18:28:10,116 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,116 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：472的记录
2022-05-09 18:28:10,159 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,160 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,160 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:10,169 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:28:10,169 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,169 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:28:10,179 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:10,179 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 553}
2022-05-09 18:28:10,179 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,191 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:10,192 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 553}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:28:10,192 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,192 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：473
2022-05-09 18:28:10,237 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,237 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,238 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,250 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:10,251 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:28:10,252 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,253 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:28:10,272 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:28:10,273 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 553}
2022-05-09 18:28:10,273 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:10,287 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 553}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:28:10,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,288 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：474
2022-05-09 18:28:10,306 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:10,307 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [473, 474]}
2022-05-09 18:28:10,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,308 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：473, 474的记录
2022-05-09 18:28:10,322 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:10,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [553]}
2022-05-09 18:28:10,323 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,324 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：553的记录
2022-05-09 18:28:10,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:10,343 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [647]}
2022-05-09 18:28:10,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,344 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：647的记录
2022-05-09 18:28:10,426 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,427 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,427 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,437 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:10,438 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:28:10,438 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,439 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:28:10,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:10,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:28:10,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,453 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：447
2022-05-09 18:28:10,496 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,497 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,497 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,508 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:28:10,508 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 447}
2022-05-09 18:28:10,508 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,509 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：447的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 447, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:28:10,520 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:28:10,520 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 447}
2022-05-09 18:28:10,521 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,521 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：447的记录已成功
2022-05-09 18:28:10,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,567 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,581 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:10,581 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:28:10,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,582 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:28:10,626 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,627 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,627 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,640 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:10,641 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:28:10,641 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,642 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:28:10,686 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,686 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,686 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:10,700 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:28:10,700 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,701 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:28:10,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,743 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:28:10,759 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:28:10,759 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,759 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:28:10,802 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:10,802 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:10,803 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,926 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:28:10,927 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:28:10,928 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:10,929 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:28:11,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:11,073 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:11,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:28:11,136 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:28:11,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,137 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:28:11,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:11,208 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [447]}
2022-05-09 18:28:11,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,209 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：447的记录
2022-05-09 18:28:11,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:11,381 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:11,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,408 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:11,409 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:28:11,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,410 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:28:11,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:11,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:28:11,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,422 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：448
2022-05-09 18:28:11,472 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:28:11,472 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:28:11,473 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,481 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:28:11,481 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:28:11,482 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,482 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:28:11,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:28:11,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:28:11,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,496 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：449
2022-05-09 18:28:11,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:28:11,515 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [448, 449]}
2022-05-09 18:28:11,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:28:11,515 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：448, 449的记录
2022-05-09 18:29:16,934 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:30:13,980 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-09 18:30:19,946 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:30:19,947 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "XGYA"}
2022-05-09 18:30:19,947 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:19,947 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"494c6431e102497e9381471cdb8ef6bc"}
2022-05-09 18:30:19,956 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:19,956 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:30:19,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:19,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:19,969 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:30:19,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:19,969 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：648
2022-05-09 18:30:20,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,013 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:30:20,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 648}
2022-05-09 18:30:20,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,030 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：648的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 648, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:30:20,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:20,037 INFO [root] [key.py (post:21] - 传的参数是：{"id": 648, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:30:20,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,047 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:30:20,048 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 648}
2022-05-09 18:30:20,048 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,048 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：648的记录已成功
2022-05-09 18:30:20,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,108 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:20,109 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:30:20,109 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,110 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:30:20,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:20,121 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [648]}
2022-05-09 18:30:20,121 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,122 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：648的记录
2022-05-09 18:30:20,131 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:20,131 INFO [root] [key.py (post:21] - 传的参数是：{"id": 648, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:30:20,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,146 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:30:20,147 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,148 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：649
2022-05-09 18:30:20,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:20,157 INFO [root] [key.py (post:21] - 传的参数是：{"id": 649, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:30:20,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,171 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,171 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:30:20,172 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,172 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：650
2022-05-09 18:30:20,183 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:20,184 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [649, 650]}
2022-05-09 18:30:20,185 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,185 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：649, 650的记录
2022-05-09 18:30:20,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:20,200 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:30:20,200 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:30:20,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,212 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：651
2022-05-09 18:30:20,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,248 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:20,262 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:30:20,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,263 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:30:20,271 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:20,272 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 651}
2022-05-09 18:30:20,272 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,283 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,283 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 651}, "name": "\u6c49EV"}}
2022-05-09 18:30:20,284 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,284 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：554
2022-05-09 18:30:20,324 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,325 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,325 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,335 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:30:20,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 554}
2022-05-09 18:30:20,336 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,337 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：554的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 651}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 554, 'nationalStandard': 255}
2022-05-09 18:30:20,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:30:20,348 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 554}
2022-05-09 18:30:20,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,348 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：554的记录已成功
2022-05-09 18:30:20,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,391 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,408 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:20,409 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:30:20,410 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,410 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:30:20,458 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,459 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,474 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:20,475 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:30:20,475 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,476 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:30:20,521 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,521 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:30:20,633 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:30:20,633 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,634 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 651]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 651}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:30:20,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:20,697 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [554]}
2022-05-09 18:30:20,698 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,698 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：554的记录
2022-05-09 18:30:20,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,744 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,749 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,764 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:20,765 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:30:20,765 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,765 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:30:20,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:20,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 651}
2022-05-09 18:30:20,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,802 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,802 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 651}, "name": "\u6c49EV"}}
2022-05-09 18:30:20,802 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,803 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：555
2022-05-09 18:30:20,856 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:20,856 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:20,856 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:20,866 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:30:20,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,867 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:30:20,879 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:20,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 651}
2022-05-09 18:30:20,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,919 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 651}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:30:20,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,921 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：556
2022-05-09 18:30:20,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:20,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [555, 556]}
2022-05-09 18:30:20,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,935 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：555, 556的记录
2022-05-09 18:30:20,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:20,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [651]}
2022-05-09 18:30:20,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,950 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：651的记录
2022-05-09 18:30:20,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:30:20,965 INFO [root] [key.py (post:21] - 传的参数是：{"id": 651, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:30:20,965 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,984 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:20,985 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:30:20,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:20,985 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：652
2022-05-09 18:30:21,033 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,033 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:21,042 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:30:21,042 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,042 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:30:21,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:21,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 652}
2022-05-09 18:30:21,068 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:21,093 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 652}, "name": "\u6c49EV"}}
2022-05-09 18:30:21,093 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,094 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：557
2022-05-09 18:30:21,142 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,142 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,149 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:21,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:30:21,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,150 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:30:21,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:21,159 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 557}
2022-05-09 18:30:21,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,170 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:21,171 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 557}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:30:21,171 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,172 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：475
2022-05-09 18:30:21,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,231 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:30:21,231 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 475}
2022-05-09 18:30:21,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,232 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：475的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 557}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 475}
2022-05-09 18:30:21,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:30:21,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 475}
2022-05-09 18:30:21,244 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,244 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：475的记录已成功
2022-05-09 18:30:21,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,298 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,312 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:21,312 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:30:21,313 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,314 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:30:21,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,359 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:21,372 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:30:21,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,373 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:30:21,416 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,416 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,417 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,430 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:21,431 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:30:21,432 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,432 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:30:21,475 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,489 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:21,489 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:30:21,489 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,490 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:30:21,555 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,555 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,556 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:21,570 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:30:21,571 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,571 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:30:21,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,607 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:30:21,656 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:30:21,657 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,658 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:30:21,699 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,700 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:30:21,761 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:30:21,763 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,764 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 557]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 557}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:30:21,777 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:21,778 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [475]}
2022-05-09 18:30:21,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,780 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：475的记录
2022-05-09 18:30:21,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,817 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,818 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,827 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:21,827 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:30:21,828 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,828 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:30:21,838 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:21,839 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 557}
2022-05-09 18:30:21,839 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,851 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:21,852 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 557}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:30:21,852 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,853 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：476
2022-05-09 18:30:21,887 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:21,887 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:21,887 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,895 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:21,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:30:21,896 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,897 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:30:21,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:30:21,906 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 557}
2022-05-09 18:30:21,907 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,920 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:21,920 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 557}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:30:21,920 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,921 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：477
2022-05-09 18:30:21,932 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:21,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [476, 477]}
2022-05-09 18:30:21,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,933 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：476, 477的记录
2022-05-09 18:30:21,947 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:21,947 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [557]}
2022-05-09 18:30:21,948 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,948 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：557的记录
2022-05-09 18:30:21,959 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:21,959 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [652]}
2022-05-09 18:30:21,959 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:21,959 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：652的记录
2022-05-09 18:30:22,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,006 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,006 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:22,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:30:22,015 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,015 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:30:22,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:22,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:30:22,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,030 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：450
2022-05-09 18:30:22,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,072 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,083 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:30:22,084 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 450}
2022-05-09 18:30:22,084 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,084 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：450的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 450, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:30:22,096 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:30:22,097 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 450}
2022-05-09 18:30:22,097 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,098 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：450的记录已成功
2022-05-09 18:30:22,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,140 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:22,154 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:30:22,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,155 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:30:22,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,194 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:22,209 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:30:22,211 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,213 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:30:22,263 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,264 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,265 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,280 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:22,281 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:30:22,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,282 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:30:22,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,337 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:30:22,337 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:30:22,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,338 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:30:22,378 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,437 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:30:22,438 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:30:22,438 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,438 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:30:22,487 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,487 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,500 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:30:22,501 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:30:22,501 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,501 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:30:22,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:22,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [450]}
2022-05-09 18:30:22,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,514 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：450的记录
2022-05-09 18:30:22,556 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,557 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,557 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,566 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:22,566 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:30:22,567 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,567 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:30:22,579 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:22,580 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:30:22,580 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,580 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：451
2022-05-09 18:30:22,623 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:30:22,624 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:30:22,625 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,635 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:30:22,636 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:30:22,637 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,637 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:30:22,650 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:30:22,651 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:30:22,652 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,652 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：452
2022-05-09 18:30:22,665 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:30:22,666 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [451, 452]}
2022-05-09 18:30:22,666 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:30:22,667 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：451, 452的记录
2022-05-09 18:33:21,796 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:33:21,797 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "MVB4"}
2022-05-09 18:33:21,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,797 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"0625b02eb57146058670cd2e09d4dfd7"}
2022-05-09 18:33:21,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:21,805 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:33:21,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,815 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:21,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:33:21,816 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,816 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：653
2022-05-09 18:33:21,858 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:21,858 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:21,859 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:33:21,871 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 653}
2022-05-09 18:33:21,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,872 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：653的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 653, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:33:21,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:21,884 INFO [root] [key.py (post:21] - 传的参数是：{"id": 653, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:33:21,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,896 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:33:21,896 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 653}
2022-05-09 18:33:21,897 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,897 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：653的记录已成功
2022-05-09 18:33:21,934 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:21,935 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:21,935 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,948 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:21,949 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:33:21,949 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,950 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:33:21,965 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:21,966 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [653]}
2022-05-09 18:33:21,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,967 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：653的记录
2022-05-09 18:33:21,974 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:21,974 INFO [root] [key.py (post:21] - 传的参数是：{"id": 653, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:33:21,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,986 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:21,987 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:33:21,987 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:21,987 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：654
2022-05-09 18:33:21,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:21,994 INFO [root] [key.py (post:21] - 传的参数是：{"id": 654, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:33:21,994 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,007 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,008 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:33:22,008 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,008 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：655
2022-05-09 18:33:22,016 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:22,017 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [654, 655]}
2022-05-09 18:33:22,017 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,017 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：654, 655的记录
2022-05-09 18:33:22,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:22,029 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:33:22,029 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,039 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:33:22,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,040 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：656
2022-05-09 18:33:22,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,065 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,075 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:22,076 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:33:22,076 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,076 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:33:22,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:22,085 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 656}
2022-05-09 18:33:22,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,093 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 656}, "name": "\u6c49EV"}}
2022-05-09 18:33:22,094 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,094 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：558
2022-05-09 18:33:22,119 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,119 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,120 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,127 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:33:22,128 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 558}
2022-05-09 18:33:22,128 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,129 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：558的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 656}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 558, 'nationalStandard': 255}
2022-05-09 18:33:22,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:33:22,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 558}
2022-05-09 18:33:22,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,138 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：558的记录已成功
2022-05-09 18:33:22,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,179 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:22,195 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:33:22,196 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,197 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:33:22,235 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,236 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,237 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:22,254 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:33:22,255 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,256 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:33:22,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,291 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,292 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,320 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:33:22,321 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:33:22,322 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,323 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 656]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 656}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:33:22,334 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:22,335 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [558]}
2022-05-09 18:33:22,335 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,336 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：558的记录
2022-05-09 18:33:22,383 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,384 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,384 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,392 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:22,393 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:33:22,393 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,393 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:33:22,404 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:22,404 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 656}
2022-05-09 18:33:22,404 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,416 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,416 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 656}, "name": "\u6c49EV"}}
2022-05-09 18:33:22,416 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,417 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：559
2022-05-09 18:33:22,461 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,462 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,479 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:22,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:33:22,482 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,483 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:33:22,499 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:22,500 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 656}
2022-05-09 18:33:22,501 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,512 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,513 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 656}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:33:22,513 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,514 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：560
2022-05-09 18:33:22,523 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:22,523 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [559, 560]}
2022-05-09 18:33:22,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,524 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：559, 560的记录
2022-05-09 18:33:22,533 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:22,534 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [656]}
2022-05-09 18:33:22,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,534 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：656的记录
2022-05-09 18:33:22,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:33:22,546 INFO [root] [key.py (post:21] - 传的参数是：{"id": 656, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:33:22,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,557 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,557 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:33:22,557 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,557 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：657
2022-05-09 18:33:22,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,601 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,608 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:22,609 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:33:22,609 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,609 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:33:22,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:22,619 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 657}
2022-05-09 18:33:22,619 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,630 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,631 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 657}, "name": "\u6c49EV"}}
2022-05-09 18:33:22,631 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,631 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：561
2022-05-09 18:33:22,673 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,674 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:22,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:33:22,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,684 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:33:22,692 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:22,693 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 561}
2022-05-09 18:33:22,693 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,704 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:22,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 561}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:33:22,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,706 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：478
2022-05-09 18:33:22,746 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,746 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,747 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:33:22,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 478}
2022-05-09 18:33:22,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,758 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：478的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 561}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 478}
2022-05-09 18:33:22,770 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:33:22,771 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 478}
2022-05-09 18:33:22,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,772 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：478的记录已成功
2022-05-09 18:33:22,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,816 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:22,832 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:33:22,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,834 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:33:22,881 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,882 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,899 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:22,899 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:33:22,900 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,901 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:33:22,939 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,939 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,952 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:22,952 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:33:22,953 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:22,953 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:33:22,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:22,995 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:22,995 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,008 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,009 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:33:23,009 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,009 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:33:23,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,051 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,052 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,065 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,065 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:33:23,066 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,066 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:33:23,106 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,107 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,107 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,154 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:33:23,154 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:33:23,155 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,156 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:33:23,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,227 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,228 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,297 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:33:23,298 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:33:23,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,299 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 561]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 561}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:33:23,313 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:23,313 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [478]}
2022-05-09 18:33:23,314 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,314 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：478的记录
2022-05-09 18:33:23,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,359 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,360 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,369 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:23,370 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:33:23,370 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,371 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:33:23,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:23,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 561}
2022-05-09 18:33:23,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:23,396 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 561}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:33:23,397 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,398 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：479
2022-05-09 18:33:23,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,444 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,445 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:23,456 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:33:23,456 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,457 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:33:23,468 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:33:23,469 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 561}
2022-05-09 18:33:23,469 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:23,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 561}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:33:23,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,486 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：480
2022-05-09 18:33:23,499 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:23,500 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [479, 480]}
2022-05-09 18:33:23,500 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,501 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：479, 480的记录
2022-05-09 18:33:23,516 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:23,517 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [561]}
2022-05-09 18:33:23,518 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,518 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：561的记录
2022-05-09 18:33:23,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:23,531 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [657]}
2022-05-09 18:33:23,531 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,532 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：657的记录
2022-05-09 18:33:23,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:23,602 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:33:23,602 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,603 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:33:23,615 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:23,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:33:23,616 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,617 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：453
2022-05-09 18:33:23,663 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,664 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,665 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,677 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:33:23,678 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 453}
2022-05-09 18:33:23,679 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,680 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：453的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 453, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:33:23,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:33:23,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 453}
2022-05-09 18:33:23,695 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,695 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：453的记录已成功
2022-05-09 18:33:23,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,742 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,743 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,763 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,764 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:33:23,766 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,766 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:33:23,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,815 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,835 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:33:23,837 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,838 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:33:23,885 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,886 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,888 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,906 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,907 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:33:23,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,909 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:33:23,957 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:23,958 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:23,960 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,978 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:33:23,979 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:33:23,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:23,981 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:33:24,030 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:24,031 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:24,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,086 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:33:24,086 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:33:24,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,087 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:33:24,132 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:24,133 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:24,133 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,144 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:33:24,144 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:33:24,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,145 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:33:24,156 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:24,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [453]}
2022-05-09 18:33:24,157 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,157 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：453的记录
2022-05-09 18:33:24,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:24,199 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:24,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:24,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:33:24,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,210 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:33:24,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:24,222 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:33:24,222 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,223 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：454
2022-05-09 18:33:24,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:33:24,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:33:24,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:33:24,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:33:24,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,280 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:33:24,293 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:33:24,294 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:33:24,295 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,296 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：455
2022-05-09 18:33:24,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:33:24,316 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [454, 455]}
2022-05-09 18:33:24,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:33:24,323 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：454, 455的记录
2022-05-09 18:34:39,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:34:39,064 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "L2KE"}
2022-05-09 18:34:39,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,064 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"5ab412a0f05f47a29dfbc3403b7b8613"}
2022-05-09 18:34:39,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,074 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,085 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,086 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:34:39,086 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,086 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：658
2022-05-09 18:34:39,138 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,139 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,149 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:34:39,150 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 658}
2022-05-09 18:34:39,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,150 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：658的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 658, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:34:39,157 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,157 INFO [root] [key.py (post:21] - 传的参数是：{"id": 658, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,158 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,169 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:34:39,170 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 658}
2022-05-09 18:34:39,170 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,170 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：658的记录已成功
2022-05-09 18:34:39,221 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,222 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:39,247 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:34:39,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,250 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:34:39,277 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:39,278 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [658]}
2022-05-09 18:34:39,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,280 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：658的记录
2022-05-09 18:34:39,291 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,292 INFO [root] [key.py (post:21] - 传的参数是：{"id": 658, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,308 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,309 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:34:39,309 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,310 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：659
2022-05-09 18:34:39,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,319 INFO [root] [key.py (post:21] - 传的参数是：{"id": 659, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,330 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,331 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:34:39,331 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,331 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：660
2022-05-09 18:34:39,343 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:39,343 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [659, 660]}
2022-05-09 18:34:39,344 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,344 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：659, 660的记录
2022-05-09 18:34:39,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,366 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,366 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,378 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,379 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:34:39,379 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,379 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：661
2022-05-09 18:34:39,423 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,423 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,424 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:39,433 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:34:39,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,434 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:34:39,450 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:39,450 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 661}
2022-05-09 18:34:39,451 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,464 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,464 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 661}, "name": "\u6c49EV"}}
2022-05-09 18:34:39,465 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,465 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：562
2022-05-09 18:34:39,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,531 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:34:39,531 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 562}
2022-05-09 18:34:39,532 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,532 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：562的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 661}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 562, 'nationalStandard': 255}
2022-05-09 18:34:39,547 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:34:39,547 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 562}
2022-05-09 18:34:39,548 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,548 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：562的记录已成功
2022-05-09 18:34:39,594 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,595 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,610 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:39,610 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:34:39,611 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,611 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:34:39,657 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,658 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,672 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:39,672 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:34:39,673 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,673 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:34:39,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:34:39,748 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:34:39,750 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,751 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 661]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 661}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:34:39,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:39,771 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [562]}
2022-05-09 18:34:39,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,772 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：562的记录
2022-05-09 18:34:39,817 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,819 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,820 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:39,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:34:39,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,835 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:34:39,847 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:39,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 661}
2022-05-09 18:34:39,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 661}, "name": "\u6c49EV"}}
2022-05-09 18:34:39,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,868 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：563
2022-05-09 18:34:39,914 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:39,915 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:39,915 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,923 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:39,924 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:34:39,924 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,924 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:34:39,932 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:39,933 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 661}
2022-05-09 18:34:39,933 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,943 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,943 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 661}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:34:39,944 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,944 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：564
2022-05-09 18:34:39,955 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:39,956 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [563, 564]}
2022-05-09 18:34:39,956 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,956 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：563, 564的记录
2022-05-09 18:34:39,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:39,966 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [661]}
2022-05-09 18:34:39,966 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,967 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：661的记录
2022-05-09 18:34:39,977 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:34:39,977 INFO [root] [key.py (post:21] - 传的参数是：{"id": 661, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:34:39,978 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:39,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:34:39,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:39,990 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：662
2022-05-09 18:34:40,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,036 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:40,047 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:34:40,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,048 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:34:40,057 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:40,057 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 662}
2022-05-09 18:34:40,058 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,069 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:40,070 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 662}, "name": "\u6c49EV"}}
2022-05-09 18:34:40,070 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,070 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：565
2022-05-09 18:34:40,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,110 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,111 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,121 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:40,122 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:34:40,123 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,125 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:34:40,141 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:40,143 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 565}
2022-05-09 18:34:40,143 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:40,158 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 565}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:34:40,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,159 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：481
2022-05-09 18:34:40,206 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,207 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,228 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:34:40,229 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 481}
2022-05-09 18:34:40,231 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,231 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：481的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 565}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 481}
2022-05-09 18:34:40,244 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:34:40,245 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 481}
2022-05-09 18:34:40,245 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,245 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：481的记录已成功
2022-05-09 18:34:40,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,282 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:40,293 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:34:40,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,293 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:34:40,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,324 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:40,336 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:34:40,337 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,337 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:34:40,380 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,381 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,394 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:40,394 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:34:40,394 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,395 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:34:40,439 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,439 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,455 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:40,455 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:34:40,456 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,456 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:34:40,499 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,500 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,500 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:40,514 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:34:40,515 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,515 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:34:40,559 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,559 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,560 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,605 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:34:40,605 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:34:40,606 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,606 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:34:40,651 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,655 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:34:40,717 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:34:40,718 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,718 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 565]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 565}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:34:40,730 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:40,731 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [481]}
2022-05-09 18:34:40,731 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,731 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：481的记录
2022-05-09 18:34:40,768 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,768 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,769 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:40,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:34:40,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,777 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:34:40,786 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:40,786 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 565}
2022-05-09 18:34:40,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,797 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:40,798 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 565}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:34:40,798 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,798 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：482
2022-05-09 18:34:40,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,841 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,848 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:40,849 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:34:40,849 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,850 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:34:40,859 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:34:40,860 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 565}
2022-05-09 18:34:40,860 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:40,872 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 565}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:34:40,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,872 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：483
2022-05-09 18:34:40,883 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:40,884 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [482, 483]}
2022-05-09 18:34:40,884 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,884 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：482, 483的记录
2022-05-09 18:34:40,894 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:40,895 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [565]}
2022-05-09 18:34:40,895 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,895 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：565的记录
2022-05-09 18:34:40,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:40,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [662]}
2022-05-09 18:34:40,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,908 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：662的记录
2022-05-09 18:34:40,973 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:40,973 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:40,973 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:40,983 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:34:40,983 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,984 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:34:40,997 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:40,997 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:34:40,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:40,998 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：456
2022-05-09 18:34:41,042 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,042 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,043 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,057 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:34:41,058 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 456}
2022-05-09 18:34:41,058 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,058 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：456的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 456, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:34:41,069 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:34:41,069 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 456}
2022-05-09 18:34:41,070 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,070 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：456的记录已成功
2022-05-09 18:34:41,116 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,116 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,117 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,127 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:41,128 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:34:41,129 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,129 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:34:41,177 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,177 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,177 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,194 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:41,195 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:34:41,195 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,196 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:34:41,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,240 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,241 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,253 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:41,253 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:34:41,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,254 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:34:41,300 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,300 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,301 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,313 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:34:41,314 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:34:41,314 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,315 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:34:41,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,355 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,407 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:34:41,408 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:34:41,408 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,408 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:34:41,451 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,452 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,452 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,463 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:34:41,464 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:34:41,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,464 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:34:41,475 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:41,475 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [456]}
2022-05-09 18:34:41,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,476 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：456的记录
2022-05-09 18:34:41,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,520 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,529 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:41,530 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:34:41,530 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,530 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:34:41,546 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:41,546 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:34:41,546 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,547 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：457
2022-05-09 18:34:41,592 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:34:41,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:34:41,592 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,600 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:34:41,601 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:34:41,601 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,601 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:34:41,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:34:41,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:34:41,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,613 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：458
2022-05-09 18:34:41,624 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:34:41,624 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [457, 458]}
2022-05-09 18:34:41,624 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:34:41,624 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：457, 458的记录
2022-05-09 18:35:22,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:35:22,997 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "PHSX"}
2022-05-09 18:35:22,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:22,997 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"82df2fabe10648fba0a6afade1d8d726"}
2022-05-09 18:35:23,006 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,007 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,007 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,017 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,018 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:35:23,018 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,018 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：663
2022-05-09 18:35:23,062 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,062 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,063 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:35:23,074 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 663}
2022-05-09 18:35:23,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,074 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：663的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 663, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:35:23,082 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,082 INFO [root] [key.py (post:21] - 传的参数是：{"id": 663, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,083 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,093 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:35:23,094 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 663}
2022-05-09 18:35:23,094 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,094 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：663的记录已成功
2022-05-09 18:35:23,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,140 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,140 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,153 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:23,154 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:35:23,154 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,155 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:35:23,165 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:23,166 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [663]}
2022-05-09 18:35:23,166 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,166 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：663的记录
2022-05-09 18:35:23,174 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,175 INFO [root] [key.py (post:21] - 传的参数是：{"id": 663, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,175 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,188 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:35:23,188 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,188 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：664
2022-05-09 18:35:23,197 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,197 INFO [root] [key.py (post:21] - 传的参数是：{"id": 664, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:35:23,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,210 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：665
2022-05-09 18:35:23,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:23,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [664, 665]}
2022-05-09 18:35:23,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,220 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：664, 665的记录
2022-05-09 18:35:23,235 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,235 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,236 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,247 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,247 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:35:23,248 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,248 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：666
2022-05-09 18:35:23,287 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,288 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,288 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:23,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:35:23,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,297 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:35:23,305 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:23,305 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 666}
2022-05-09 18:35:23,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,315 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,316 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 666}, "name": "\u6c49EV"}}
2022-05-09 18:35:23,316 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,316 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：566
2022-05-09 18:35:23,353 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,354 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,354 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,364 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:35:23,365 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 566}
2022-05-09 18:35:23,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,366 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：566的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 666}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 566, 'nationalStandard': 255}
2022-05-09 18:35:23,376 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:35:23,377 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 566}
2022-05-09 18:35:23,377 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,378 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：566的记录已成功
2022-05-09 18:35:23,420 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:23,434 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:35:23,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,434 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:35:23,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,471 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,471 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,488 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:23,488 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:35:23,488 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,490 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:35:23,531 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,532 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,534 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,570 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:35:23,571 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:35:23,572 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,573 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 666]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 666}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:35:23,590 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:23,590 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [566]}
2022-05-09 18:35:23,591 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,591 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：566的记录
2022-05-09 18:35:23,631 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,631 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,631 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,638 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:23,638 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:35:23,638 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,639 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:35:23,646 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:23,647 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 666}
2022-05-09 18:35:23,648 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 666}, "name": "\u6c49EV"}}
2022-05-09 18:35:23,660 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,660 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：567
2022-05-09 18:35:23,704 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,705 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,705 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,713 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:23,714 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:35:23,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,715 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:35:23,723 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:23,724 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 666}
2022-05-09 18:35:23,724 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,735 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,736 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 666}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:35:23,736 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,737 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：568
2022-05-09 18:35:23,748 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:23,749 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [567, 568]}
2022-05-09 18:35:23,749 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,750 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：567, 568的记录
2022-05-09 18:35:23,761 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:23,762 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [666]}
2022-05-09 18:35:23,762 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,763 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：666的记录
2022-05-09 18:35:23,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:35:23,776 INFO [root] [key.py (post:21] - 传的参数是：{"id": 666, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:35:23,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,787 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,788 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:35:23,788 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,789 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：667
2022-05-09 18:35:23,831 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,831 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,832 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,840 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:23,840 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:35:23,840 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,841 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:35:23,854 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:23,854 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 667}
2022-05-09 18:35:23,854 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 667}, "name": "\u6c49EV"}}
2022-05-09 18:35:23,869 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,869 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：569
2022-05-09 18:35:23,903 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,904 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,904 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:23,911 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:35:23,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,912 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:35:23,921 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:23,922 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 569}
2022-05-09 18:35:23,922 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,933 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:23,934 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 569}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:35:23,934 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,935 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：484
2022-05-09 18:35:23,966 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:23,967 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:23,968 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,980 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:35:23,980 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 484}
2022-05-09 18:35:23,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,982 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：484的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 569}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 484}
2022-05-09 18:35:23,992 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:35:23,993 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 484}
2022-05-09 18:35:23,993 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:23,993 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：484的记录已成功
2022-05-09 18:35:24,037 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,037 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,050 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,050 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:35:24,051 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,051 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:35:24,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,095 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,110 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:35:24,111 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,111 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:35:24,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,159 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,160 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:35:24,160 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,161 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:35:24,204 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,205 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,205 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,218 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,219 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:35:24,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,220 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:35:24,266 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,266 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,267 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,282 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:35:24,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,283 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:35:24,326 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,327 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:35:24,378 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:35:24,378 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,379 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:35:24,419 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,420 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,470 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:35:24,470 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:35:24,470 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,470 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 569]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 569}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:35:24,480 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:24,480 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [484]}
2022-05-09 18:35:24,481 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,481 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：484的记录
2022-05-09 18:35:24,511 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,511 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,512 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,525 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:24,525 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:35:24,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,525 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:35:24,534 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:24,534 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 569}
2022-05-09 18:35:24,535 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,544 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:24,544 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 569}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:35:24,545 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,547 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：485
2022-05-09 18:35:24,579 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,581 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,582 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,589 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:24,590 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:35:24,590 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,590 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:35:24,598 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:35:24,598 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 569}
2022-05-09 18:35:24,599 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,607 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:24,608 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 569}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:35:24,608 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,609 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：486
2022-05-09 18:35:24,617 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:24,617 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [485, 486]}
2022-05-09 18:35:24,617 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,617 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：485, 486的记录
2022-05-09 18:35:24,632 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:24,632 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [569]}
2022-05-09 18:35:24,632 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,632 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：569的记录
2022-05-09 18:35:24,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:24,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [667]}
2022-05-09 18:35:24,645 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,645 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：667的记录
2022-05-09 18:35:24,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,693 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,701 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:24,701 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:35:24,701 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,702 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:35:24,712 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:24,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:35:24,713 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,714 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：459
2022-05-09 18:35:24,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,748 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,756 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:35:24,757 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 459}
2022-05-09 18:35:24,757 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,757 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：459的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 459, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:35:24,766 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:35:24,767 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 459}
2022-05-09 18:35:24,767 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,767 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：459的记录已成功
2022-05-09 18:35:24,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,803 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,816 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,817 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:35:24,817 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,818 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:35:24,852 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,853 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,854 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,865 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,865 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:35:24,866 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,867 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:35:24,915 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,917 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,917 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,931 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,932 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:35:24,932 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,932 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:35:24,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:24,969 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:24,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,983 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:35:24,983 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:35:24,984 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:24,984 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:35:25,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:25,020 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:25,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,064 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:35:25,064 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:35:25,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,065 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:35:25,101 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:25,102 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:25,102 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,113 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:35:25,114 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:35:25,114 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,114 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:35:25,134 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:25,135 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [459]}
2022-05-09 18:35:25,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,135 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：459的记录
2022-05-09 18:35:25,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:25,183 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:25,184 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,195 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:25,196 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:35:25,197 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,198 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:35:25,213 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:25,214 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:35:25,215 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,216 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：460
2022-05-09 18:35:25,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:35:25,267 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:35:25,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,276 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:35:25,276 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:35:25,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,277 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:35:25,288 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:35:25,288 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:35:25,289 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,289 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：461
2022-05-09 18:35:25,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:35:25,298 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [460, 461]}
2022-05-09 18:35:25,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:35:25,299 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：460, 461的记录
2022-05-09 18:37:16,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-09 18:37:16,268 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "BR8W"}
2022-05-09 18:37:16,268 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,269 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"d9dea91d57f8478e86e7669b609f7f47"}
2022-05-09 18:37:16,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:16,278 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:37:16,278 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,289 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,290 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:37:16,290 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,290 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：668
2022-05-09 18:37:16,330 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,330 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,330 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:37:16,340 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 668}
2022-05-09 18:37:16,340 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,340 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：668的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 668, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-09 18:37:16,347 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:16,348 INFO [root] [key.py (post:21] - 传的参数是：{"id": 668, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:37:16,348 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,358 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:37:16,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 668}
2022-05-09 18:37:16,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,358 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：668的记录已成功
2022-05-09 18:37:16,397 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,398 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,398 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,411 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:16,411 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-09 18:37:16,412 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,412 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-09 18:37:16,424 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:16,424 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [668]}
2022-05-09 18:37:16,424 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,425 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：668的记录
2022-05-09 18:37:16,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:16,432 INFO [root] [key.py (post:21] - 传的参数是：{"id": 668, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:37:16,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,446 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,447 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:37:16,447 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,447 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：669
2022-05-09 18:37:16,463 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:16,463 INFO [root] [key.py (post:21] - 传的参数是：{"id": 669, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-09 18:37:16,463 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,476 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-09 18:37:16,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,476 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：670
2022-05-09 18:37:16,492 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:16,493 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [669, 670]}
2022-05-09 18:37:16,493 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,493 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：669, 670的记录
2022-05-09 18:37:16,507 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:16,507 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:37:16,507 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,519 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,520 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:37:16,520 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,520 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：671
2022-05-09 18:37:16,564 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,565 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,565 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,574 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:16,575 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:37:16,575 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,575 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:37:16,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:16,586 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 671}
2022-05-09 18:37:16,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,599 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,600 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 671}, "name": "\u6c49EV"}}
2022-05-09 18:37:16,600 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,600 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：570
2022-05-09 18:37:16,644 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,645 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,646 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:37:16,660 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "id": 570}
2022-05-09 18:37:16,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,661 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_model中id为：570的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 671}, 'displayName': '汉EV', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png', 'name': '汉EV', 'bms': 1, 'id': 570, 'nationalStandard': 255}
2022-05-09 18:37:16,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:37:16,675 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"name": "\u6c49EV\u65d7\u8230\u7248"}, "id": 570}
2022-05-09 18:37:16,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,676 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_model中id为：570的记录已成功
2022-05-09 18:37:16,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,736 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:16,736 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["name", "like", "\u6c49EV\u65d7\u8230\u7248"]]}
2022-05-09 18:37:16,737 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,737 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'name'搜索 '汉EV旗舰版'符合的记录数是：1条
2022-05-09 18:37:16,780 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,781 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,797 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:16,797 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "domain": [["carBrandId.displayName", "like", "\u6bd4\u4e9a\u8fea"]]}
2022-05-09 18:37:16,798 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,798 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_model快捷搜索条件按'carBrandId.displayName'搜索 '比亚迪'符合的记录数是：36条
2022-05-09 18:37:16,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,846 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,873 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:37:16,873 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car_model", "domain": [], "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "group": ["carBrandId"]}
2022-05-09 18:37:16,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,874 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car_model按'carBrandId'分组，响应内容中的data为：{'records': [{'_domain': [['carBrandId', '=', 671]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 671}}, {'_domain': [['carBrandId', '=', 372]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 372}}, {'_domain': [['carBrandId', '=', 367]], '_total': 1, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 367}}, {'_domain': [['carBrandId', '=', 47]], '_total': 24, 'carBrandId': {'displayName': '长城', 'name': '长城', 'id': 47}}, {'_domain': [['carBrandId', '=', 14]], '_total': 1, 'carBrandId': {'displayName': '宝马', 'name': '宝马', 'id': 14}}, {'_domain': [['carBrandId', '=', 2]], '_total': 33, 'carBrandId': {'displayName': '比亚迪', 'name': '比亚迪', 'id': 2}}, {'_domain': [['carBrandId', '=', 1]], '_total': 1, 'carBrandId': {'displayName': '奥迪', 'name': '奥迪', 'id': 1}}], 'length': 7}
2022-05-09 18:37:16,884 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:16,885 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [570]}
2022-05-09 18:37:16,885 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,885 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：570的记录
2022-05-09 18:37:16,936 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:16,937 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:16,939 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,955 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:16,956 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:37:16,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,957 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:37:16,968 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:16,968 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 671}
2022-05-09 18:37:16,969 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,979 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:16,979 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 671}, "name": "\u6c49EV"}}
2022-05-09 18:37:16,980 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:16,980 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：571
2022-05-09 18:37:17,022 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,023 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,023 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:17,031 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:37:17,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,032 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:37:17,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:17,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 671}
2022-05-09 18:37:17,040 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,051 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,052 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 671}, "name": "\u6c49EV\u65d7\u8230\u7248"}}
2022-05-09 18:37:17,052 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,052 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：572
2022-05-09 18:37:17,061 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:17,061 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [571, 572]}
2022-05-09 18:37:17,061 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,061 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_model中id为：571, 572的记录
2022-05-09 18:37:17,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:17,073 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [671]}
2022-05-09 18:37:17,073 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,073 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：671的记录
2022-05-09 18:37:17,084 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-09 18:37:17,085 INFO [root] [key.py (post:21] - 传的参数是：{"id": 671, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-09 18:37:17,085 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,099 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-09 18:37:17,099 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,100 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：672
2022-05-09 18:37:17,136 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,137 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_model", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,137 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:17,145 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "fields": ["enduranceMileage", "totalBatteryCapacity", "carBrandId", "displayName", "pictureUrl", "bms", "nationalStandard", "companyId", "name", "id"], "context": {}}
2022-05-09 18:37:17,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,146 INFO [root] [key.py (default_get:78] - 模型：customer_car_model的默认填充字段信息为：{'enduranceMileage': 0, 'totalBatteryCapacity': 0.0, 'bms': 1, 'nationalStandard': 255}
2022-05-09 18:37:17,155 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:17,156 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "id": 672}
2022-05-09 18:37:17,156 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,167 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,167 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "map": {"enduranceMileage": 0, "totalBatteryCapacity": 0.0, "bms": 1, "nationalStandard": 255, "pictureUrl": "https://test3.gcevc.net/oss/customer_car_model/pictureUrl/1651041717176.png", "carBrandId": {"displayName": "\u6bd4\u4e9a\u8fea", "name": "\u6bd4\u4e9a\u8fea", "id": 672}, "name": "\u6c49EV"}}
2022-05-09 18:37:17,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,167 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_model新记录，id为：573
2022-05-09 18:37:17,203 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,204 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,204 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,215 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:17,219 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:37:17,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,220 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:37:17,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:17,232 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 573}
2022-05-09 18:37:17,233 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,250 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,251 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 573}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:37:17,251 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,252 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：487
2022-05-09 18:37:17,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,299 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:37:17,310 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "id": 487}
2022-05-09 18:37:17,311 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,311 INFO [root] [key.py (read:41] - 查看：查看模型customer_car中id为：487的内容： {'carModelBms': 0, 'number': '粤GF52UU', 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 573}, 'displayName': '粤GF52UU', 'pictureUrl': 'https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png', 'remark': '粤GF52UU', 'vin': 'TEST0000000000135', 'id': 487}
2022-05-09 18:37:17,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:37:17,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235"}, "id": 487}
2022-05-09 18:37:17,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,324 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car中id为：487的记录已成功
2022-05-09 18:37:17,367 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,367 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:17,381 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["number", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:37:17,381 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,382 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'number'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:37:17,428 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,429 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,430 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,445 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:17,445 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["remark", "like", "\u7ca4GF92UU"]]}
2022-05-09 18:37:17,446 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,447 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'remark'搜索 '粤GF92UU'符合的记录数是：1条
2022-05-09 18:37:17,492 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,494 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,496 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,517 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:17,518 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["vin", "like", "TEST0000000000235"]]}
2022-05-09 18:37:17,519 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,520 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'vin'搜索 'TEST0000000000235'符合的记录数是：1条
2022-05-09 18:37:17,567 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,568 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,568 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,580 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:17,581 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["carModelId.displayName", "like", "\u6c49EV"]]}
2022-05-09 18:37:17,581 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,581 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'carModelId.displayName'搜索 '汉EV'符合的记录数是：1条
2022-05-09 18:37:17,614 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,616 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,617 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,628 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:17,630 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "domain": [["customerId.displayName", "like", "zhao_test"]]}
2022-05-09 18:37:17,631 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,631 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car快捷搜索条件按'customerId.displayName'搜索 'zhao_test'符合的记录数是：1条
2022-05-09 18:37:17,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,675 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,675 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,721 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:37:17,722 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["customerId"]}
2022-05-09 18:37:17,722 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,722 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 36]], '_total': 21, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 9]], '_total': 1, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 59]], '_total': 1, 'customerId': {'displayName': '交易明细', 'name': '交易明细', 'id': 59}}, {'_domain': [['customerId', '=?', None]], '_total': 6, 'customerId': {}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 14]], '_total': 9, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 33]], '_total': 1, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 25]], '_total': 2, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 32]], '_total': 3, 'customerId': {'displayName': 'Ni', 'name': 'Ni', 'id': 32}}, {'_domain': [['customerId', '=', 11]], '_total': 3, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 51]], '_total': 3, 'customerId': {'displayName': 'LiPai-Ni', 'name': 'LiPai-Ni', 'id': 51}}, {'_domain': [['customerId', '=', 10]], '_total': 1, 'customerId': {'displayName': '555666', 'name': '555666', 'id': 10}}, {'_domain': [['customerId', '=', 7]], '_total': 1, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}], 'length': 15}
2022-05-09 18:37:17,755 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,755 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,756 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:37:17,800 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_car", "domain": [], "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "group": ["carModelId"]}
2022-05-09 18:37:17,801 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,801 INFO [root] [key.py (read_group:93] - 分组：模型：customer_car按'carModelId'分组，响应内容中的data为：{'records': [{'_domain': [['carModelId', '=', 573]], 'carModelId': {'displayName': '汉EV', 'name': '汉EV', 'id': 573}, '_total': 1}, {'_domain': [['carModelId', '=', 78]], 'carModelId': {'displayName': '长城哈弗H3', 'name': '长城哈弗H3', 'id': 78}, '_total': 4}, {'_domain': [['carModelId', '=', 80]], 'carModelId': {'displayName': '风骏5', 'name': '风骏5', 'id': 80}, '_total': 2}, {'_domain': [['carModelId', '=', 95]], 'carModelId': {'displayName': '长安510KM', 'name': '长安510KM', 'id': 95}, '_total': 1}, {'_domain': [['carModelId', '=', 43]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 43}, '_total': 1}, {'_domain': [['carModelId', '=', 4]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 4}, '_total': 2}, {'_domain': [['carModelId', '=', 65]], 'carModelId': {'displayName': '比亚迪元510KM 旗舰型PLUS', 'name': '比亚迪元510KM 旗舰型PLUS', 'id': 65}, '_total': 1}, {'_domain': [['carModelId', '=', 68]], 'carModelId': {'displayName': '长安UNI-K', 'name': '长安UNI-K', 'id': 68}, '_total': 1}, {'_domain': [['carModelId', '=', 69]], 'carModelId': {'displayName': '第二代CS75P', 'name': '第二代CS75P', 'id': 69}, '_total': 1}, {'_domain': [['carModelId', '=', 86]], 'carModelId': {'displayName': 'CS75PLUS', 'name': 'CS75PLUS', 'id': 86}, '_total': 1}, {'_domain': [['carModelId', '=', 77]], 'carModelId': {'displayName': '长城C30', 'name': '长城C30', 'id': 77}, '_total': 1}, {'_domain': [['carModelId', '=', 81]], 'carModelId': {'displayName': '长安510KM9', 'name': '长安510KM9', 'id': 81}, '_total': 3}, {'_domain': [['carModelId', '=', 97]], 'carModelId': {'displayName': '宝马2', 'name': '宝马2', 'id': 97}, '_total': 1}, {'_domain': [['carModelId', '=', 94]], 'carModelId': {'displayName': '长安new', 'name': '长安new', 'id': 94}, '_total': 3}, {'_domain': [['carModelId', '=', 85]], 'carModelId': {'displayName': '风骏3', 'name': '风骏3', 'id': 85}, '_total': 2}, {'_domain': [['carModelId', '=', 67]], 'carModelId': {'displayName': '长安new2', 'name': '长安new2', 'id': 67}, '_total': 1}, {'_domain': [['carModelId', '=', 98]], 'carModelId': {'displayName': '蔚来210', 'name': '蔚来210', 'id': 98}, '_total': 1}, {'_domain': [['carModelId', '=?', None]], 'carModelId': {}, '_total': 23}, {'_domain': [['carModelId', '=', 1]], 'carModelId': {'displayName': 'Audi-Q5e-tron', 'name': 'Audi-Q5e-tron', 'id': 1}, '_total': 6}], 'length': 19}
2022-05-09 18:37:17,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:17,815 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [487]}
2022-05-09 18:37:17,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,815 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car中id为：487的记录
2022-05-09 18:37:17,861 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,861 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,862 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,872 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:17,873 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:37:17,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,874 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:37:17,886 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:17,887 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 573}
2022-05-09 18:37:17,887 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,899 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 573}, "customerId": {}, "number": "\u7ca4GF52UU", "remark": "\u7ca4GF52UU", "vin": "TEST0000000000135", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:37:17,900 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,900 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：488
2022-05-09 18:37:17,938 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:17,939 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:17,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,949 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:17,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "fields": ["carModelBms", "carModelId", "displayName", "pictureUrl", "remark", "number", "companyId", "customerId", "name", "vin", "id"], "context": {}}
2022-05-09 18:37:17,950 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,950 INFO [root] [key.py (default_get:78] - 模型：customer_car的默认填充字段信息为：{'carModelBms': 0}
2022-05-09 18:37:17,960 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/name_get
2022-05-09 18:37:17,961 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "id": 573}
2022-05-09 18:37:17,961 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:17,976 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "map": {"carModelBms": 0, "carModelId": {"displayName": "\u6c49EV", "name": "\u6c49EV", "id": 573}, "customerId": {}, "number": "\u7ca4GF92UU", "remark": "\u7ca4GF92UU", "vin": "TEST0000000000235", "pictureUrl": "https://test3.gcevc.net/oss/customer_car/pictureUrl/1651051712594.png"}}
2022-05-09 18:37:17,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,976 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car新记录，id为：489
2022-05-09 18:37:17,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:17,989 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car", "ids": [488, 489]}
2022-05-09 18:37:17,989 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:17,989 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car中id为：488, 489的记录
2022-05-09 18:37:18,002 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:18,003 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_model", "ids": [573]}
2022-05-09 18:37:18,003 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,003 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_model中id为：573的记录
2022-05-09 18:37:18,015 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:18,015 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [672]}
2022-05-09 18:37:18,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,016 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：672的记录
2022-05-09 18:37:18,056 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,056 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,057 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,063 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:18,063 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:37:18,064 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,064 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:37:18,074 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:18,074 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:37:18,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,075 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：462
2022-05-09 18:37:18,111 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,112 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,112 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,122 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-09 18:37:18,122 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "id": 462}
2022-05-09 18:37:18,122 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,122 INFO [root] [key.py (read:41] - 查看：查看模型customer_card中id为：462的内容： {'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'code': '1568975633213', 'displayName': '1568975633213', 'name': '充电卡测试新增', 'allowMoreCharge': False, 'id': 462, 'cardNo': '1568975633213', 'status': 0}
2022-05-09 18:37:18,132 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-09 18:37:18,132 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}, "id": 462}
2022-05-09 18:37:18,132 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,133 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_card中id为：462的记录已成功
2022-05-09 18:37:18,172 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,172 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,174 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,187 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:18,188 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["name", "like", "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539"]]}
2022-05-09 18:37:18,190 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,191 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'name'搜索 '充电卡测试修改'符合的记录数是：1条
2022-05-09 18:37:18,227 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,228 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,232 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:18,250 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["cardNo", "like", "7138975633213"]]}
2022-05-09 18:37:18,251 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,252 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'cardNo'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:37:18,285 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,286 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,286 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:18,297 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["code", "like", "7138975633213"]]}
2022-05-09 18:37:18,298 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,298 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'code'搜索 '7138975633213'符合的记录数是：1条
2022-05-09 18:37:18,326 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,326 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-09 18:37:18,341 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "domain": [["customerId.displayName", "like", "7138975633213"]]}
2022-05-09 18:37:18,341 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,341 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_card快捷搜索条件按'customerId.displayName'搜索 '7138975633213'符合的记录数是：0条
2022-05-09 18:37:18,381 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,382 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,382 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,438 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:37:18,439 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["customerId"]}
2022-05-09 18:37:18,440 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,441 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'customerId'分组，响应内容中的data为：{'records': [{'_domain': [['customerId', '=', 88]], '_total': 1, 'customerId': {'displayName': 'leo123', 'name': 'leo123', 'id': 88}}, {'_domain': [['customerId', '=', 47]], '_total': 1, 'customerId': {'displayName': 'leo888', 'name': 'leo888', 'id': 47}}, {'_domain': [['customerId', '=', 33]], '_total': 4, 'customerId': {'displayName': 'zhao_test', 'name': 'zhao_test', 'id': 33}}, {'_domain': [['customerId', '=', 36]], '_total': 10, 'customerId': {'displayName': '呦', 'name': '呦', 'id': 36}}, {'_domain': [['customerId', '=', 25]], '_total': 3, 'customerId': {'displayName': 'AND', 'name': 'AND', 'id': 25}}, {'_domain': [['customerId', '=', 55]], '_total': 1, 'customerId': {'displayName': '内蒙古区域代理公司客户', 'name': '内蒙古区域代理公司客户', 'id': 55}}, {'_domain': [['customerId', '=', 86]], '_total': 1, 'customerId': {'displayName': '96999', 'name': '96999', 'id': 86}}, {'_domain': [['customerId', '=', 14]], '_total': 3, 'customerId': {'displayName': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'name': 'এ᭄ꦿ꯭萌寶এ᭄ꦿ🦋', 'id': 14}}, {'_domain': [['customerId', '=', 9]], '_total': 13, 'customerId': {'displayName': '弘信', 'name': '弘信', 'id': 9}}, {'_domain': [['customerId', '=', 49]], '_total': 1, 'customerId': {'displayName': '8686', 'name': '8686', 'id': 49}}, {'_domain': [['customerId', '=', 28]], '_total': 1, 'customerId': {'displayName': 'yy', 'name': 'yy', 'id': 28}}, {'_domain': [['customerId', '=', 40]], '_total': 1, 'customerId': {'displayName': 'zhao_', 'name': 'zhao_', 'id': 40}}, {'_domain': [['customerId', '=', 7]], '_total': 3, 'customerId': {'displayName': '黄光洪', 'name': '黄光洪', 'id': 7}}, {'_domain': [['customerId', '=', 38]], '_total': 1, 'customerId': {'displayName': 'qwqee', 'name': 'qwqee', 'id': 38}}, {'_domain': [['customerId', '=', 30]], '_total': 2, 'customerId': {'displayName': 'Yccc', 'name': 'Yccc', 'id': 30}}, {'_domain': [['customerId', '=', 11]], '_total': 1, 'customerId': {'displayName': '陈建峰', 'name': '陈建峰', 'id': 11}}, {'_domain': [['customerId', '=', 8]], '_total': 1, 'customerId': {'displayName': '何莹亮', 'name': '何莹亮', 'id': 8}}, {'_domain': [['customerId', '=?', None]], '_total': 33, 'customerId': {}}], 'length': 18}
2022-05-09 18:37:18,510 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,511 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,512 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read_group
2022-05-09 18:37:18,525 INFO [root] [key.py (post:21] - 传的参数是：{"lazy": true, "orderBy": "", "simple": false, "limit": 20, "offset": 1, "model": "customer_card", "domain": [], "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "group": ["allowMoreCharge"]}
2022-05-09 18:37:18,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,526 INFO [root] [key.py (read_group:93] - 分组：模型：customer_card按'allowMoreCharge'分组，响应内容中的data为：{'records': [{'_domain': [['allowMoreCharge', '=', True]], '_total': 6, 'allowMoreCharge': True}, {'_domain': [['allowMoreCharge', '=', False]], '_total': 75, 'allowMoreCharge': False}], 'length': 2}
2022-05-09 18:37:18,539 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:18,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [462]}
2022-05-09 18:37:18,540 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,541 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_card中id为：462的记录
2022-05-09 18:37:18,586 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,587 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,588 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,599 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:18,599 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:37:18,600 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,600 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:37:18,613 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:18,614 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "1568975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u65b0\u589e", "code": "1568975633213"}}
2022-05-09 18:37:18,615 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,615 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：463
2022-05-09 18:37:18,656 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-09 18:37:18,657 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_card", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-09 18:37:18,658 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/default_get
2022-05-09 18:37:18,668 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "fields": ["code", "displayName", "cardNo", "companyId", "customerId", "name", "allowMoreCharge", "customerAllowMoreCharge", "id", "status"], "context": {}}
2022-05-09 18:37:18,669 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,669 INFO [root] [key.py (default_get:78] - 模型：customer_card的默认填充字段信息为：{'allowMoreCharge': False, 'customerAllowMoreCharge': False, 'status': 0}
2022-05-09 18:37:18,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-09 18:37:18,683 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "map": {"allowMoreCharge": false, "customerAllowMoreCharge": false, "status": 0, "cardNo": "7138975633213", "name": "\u5145\u7535\u5361\u6d4b\u8bd5\u4fee\u6539", "code": "7138975633213"}}
2022-05-09 18:37:18,684 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,684 INFO [root] [key.py (create:35] - 新建：创建模型：customer_card新记录，id为：464
2022-05-09 18:37:18,697 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-09 18:37:18,698 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_card", "ids": [463, 464]}
2022-05-09 18:37:18,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-09 18:37:18,699 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_card中id为：463, 464的记录
