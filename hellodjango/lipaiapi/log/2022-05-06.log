2022-05-06 14:14:50,033 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 14:14:50,033 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RN2G"}
2022-05-06 14:14:50,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:14:50,033 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"1f086c9479d74224a566efae058d1851"}
2022-05-06 14:14:50,038 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 14:14:50,038 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 14:14:50,038 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:14:50,046 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 14:14:50,046 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 14:14:50,047 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:14:50,047 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：160
2022-05-06 14:15:23,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 14:15:23,372 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6JQY"}
2022-05-06 14:15:23,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,373 INFO [root] [key.py (login:122] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"ee51428ee0024e6c8369d10f089ce7cb"}
2022-05-06 14:15:23,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 14:15:23,378 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 14:15:23,378 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,387 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 14:15:23,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 14:15:23,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,387 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：161
2022-05-06 14:15:23,418 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 14:15:23,418 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 14:15:23,419 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,425 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 14:15:23,425 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 161}
2022-05-06 14:15:23,425 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,425 INFO [root] [key.py (read:40] - 查看：查看模型customer_car_brand中id为：161的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 161, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 14:15:23,430 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 14:15:23,430 INFO [root] [key.py (post:21] - 传的参数是：{"id": 161, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 14:15:23,430 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,437 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 14:15:23,438 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 161}
2022-05-06 14:15:23,438 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,438 INFO [root] [key.py (edit:46] - 编辑：编辑模型customer_car_brand中id为：161的记录已成功
2022-05-06 14:15:23,467 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 14:15:23,467 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 14:15:23,467 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,476 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 14:15:23,476 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 14:15:23,476 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,476 INFO [root] [key.py (search_read:83] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 14:15:23,483 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 14:15:23,483 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [161]}
2022-05-06 14:15:23,484 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,484 INFO [root] [key.py (delete:53] - 删除：已删除模型customer_car_brand中id为：161的记录
2022-05-06 14:15:23,490 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 14:15:23,490 INFO [root] [key.py (post:21] - 传的参数是：{"id": 161, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 14:15:23,490 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,498 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 14:15:23,498 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 14:15:23,498 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,498 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：162
2022-05-06 14:15:23,506 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 14:15:23,506 INFO [root] [key.py (post:21] - 传的参数是：{"id": 162, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 14:15:23,506 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,514 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 14:15:23,514 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 14:15:23,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,514 INFO [root] [key.py (create:34] - 新建：创建模型：customer_car_brand新记录，id为：163
2022-05-06 14:15:23,522 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 14:15:23,522 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [162, 163]}
2022-05-06 14:15:23,522 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 14:15:23,522 INFO [root] [key.py (delete:55] - 批量删除：已批量删除模型customer_car_brand中id为：162, 163的记录
2022-05-06 15:37:28,020 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 15:37:28,021 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "YP8V"}
2022-05-06 15:37:28,021 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:37:28,036 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:37:28,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,049 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:37:28,050 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:37:28,050 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,088 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:37:28,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:37:28,089 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,099 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 15:37:28,099 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 179}
2022-05-06 15:37:28,100 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:37:28,109 INFO [root] [key.py (post:21] - 传的参数是：{"id": 179, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:37:28,111 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,129 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 15:37:28,129 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 179}
2022-05-06 15:37:28,130 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:37:28,165 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:37:28,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,178 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 15:37:28,178 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 15:37:28,179 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:37:28,192 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [179]}
2022-05-06 15:37:28,193 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:37:28,202 INFO [root] [key.py (post:21] - 传的参数是：{"id": 179, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:37:28,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,212 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:37:28,213 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:37:28,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:37:28,219 INFO [root] [key.py (post:21] - 传的参数是：{"id": 180, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:37:28,219 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,229 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:37:28,229 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 15:37:28,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:37:28,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:37:28,239 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [180, 181]}
2022-05-06 15:37:28,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:31,101 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py changed, reloading.
2022-05-06 15:41:44,166 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 15:41:44,167 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SBM5"}
2022-05-06 15:41:44,167 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,167 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"3cdfc913ec594e40a81a02a206ab5115"}
2022-05-06 15:41:44,176 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:41:44,177 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:41:44,177 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,186 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:41:44,186 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:41:44,187 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,187 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：182
2022-05-06 15:41:44,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:41:44,217 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:41:44,217 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 15:41:44,227 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 182}
2022-05-06 15:41:44,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,227 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：182的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 182, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 15:41:44,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:41:44,233 INFO [root] [key.py (post:21] - 传的参数是：{"id": 182, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:41:44,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,243 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 15:41:44,243 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 182}
2022-05-06 15:41:44,243 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,243 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：182的记录已成功
2022-05-06 15:41:44,276 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:41:44,277 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:41:44,277 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 15:41:44,287 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 15:41:44,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,287 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 15:41:44,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:41:44,297 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [182]}
2022-05-06 15:41:44,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,297 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：182的记录
2022-05-06 15:41:44,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:41:44,303 INFO [root] [key.py (post:21] - 传的参数是：{"id": 182, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:41:44,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,311 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:41:44,312 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:41:44,312 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,312 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：183
2022-05-06 15:41:44,318 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:41:44,319 INFO [root] [key.py (post:21] - 传的参数是：{"id": 183, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:41:44,319 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,327 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:41:44,328 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 15:41:44,328 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,328 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：184
2022-05-06 15:41:44,346 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:41:44,346 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [183, 184]}
2022-05-06 15:41:44,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:41:44,347 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：183, 184的记录
2022-05-06 15:45:26,315 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 15:45:45,674 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 15:45:45,674 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "V9WR"}
2022-05-06 15:45:45,674 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,675 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"4fc5feebbf0c40c7b55804396474bc0b"}
2022-05-06 15:45:45,681 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:45:45,682 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:45:45,682 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,691 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:45:45,691 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:45:45,691 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,692 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：185
2022-05-06 15:45:45,722 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:45:45,723 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:45:45,723 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,731 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 15:45:45,732 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 185}
2022-05-06 15:45:45,732 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,732 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：185的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 185, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 15:45:45,738 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:45:45,738 INFO [root] [key.py (post:21] - 传的参数是：{"id": 185, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:45:45,738 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,747 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 15:45:45,747 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 185}
2022-05-06 15:45:45,748 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,748 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：185的记录已成功
2022-05-06 15:45:45,776 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 15:45:45,776 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 15:45:45,777 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,785 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 15:45:45,786 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 15:45:45,786 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,786 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 15:45:45,798 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:45:45,799 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [185]}
2022-05-06 15:45:45,799 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,799 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：185的记录
2022-05-06 15:45:45,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:45:45,805 INFO [root] [key.py (post:21] - 传的参数是：{"id": 185, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 15:45:45,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,814 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:45:45,814 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 15:45:45,815 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,815 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：186
2022-05-06 15:45:45,821 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 15:45:45,822 INFO [root] [key.py (post:21] - 传的参数是：{"id": 186, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 15:45:45,822 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 15:45:45,835 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 15:45:45,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,835 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：187
2022-05-06 15:45:45,845 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 15:45:45,845 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [186, 187]}
2022-05-06 15:45:45,845 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 15:45:45,846 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：186, 187的记录
2022-05-06 15:46:15,435 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 15:59:54,364 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\utility\getlogger.py changed, reloading.
2022-05-06 16:06:42,599 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\utility\getlogger.py changed, reloading.
2022-05-06 16:06:51,610 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 16:06:51,611 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "228S"}
2022-05-06 16:06:51,611 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,611 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"cd90788e4b8e4493a2fa005f17005549"}
2022-05-06 16:06:51,618 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:06:51,618 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:06:51,618 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,628 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:06:51,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:06:51,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,629 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：188
2022-05-06 16:06:51,659 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:06:51,659 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:06:51,659 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 16:06:51,668 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 188}
2022-05-06 16:06:51,668 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,668 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：188的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 188, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 16:06:51,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:06:51,676 INFO [root] [key.py (post:21] - 传的参数是：{"id": 188, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:06:51,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,690 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 16:06:51,691 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 188}
2022-05-06 16:06:51,692 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,692 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：188的记录已成功
2022-05-06 16:06:51,732 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:06:51,734 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:06:51,735 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 16:06:51,759 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 16:06:51,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,761 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 16:06:51,783 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:06:51,784 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [188]}
2022-05-06 16:06:51,784 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,785 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：188的记录
2022-05-06 16:06:51,792 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:06:51,792 INFO [root] [key.py (post:21] - 传的参数是：{"id": 188, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:06:51,793 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:06:51,814 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:06:51,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,814 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：189
2022-05-06 16:06:51,820 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:06:51,821 INFO [root] [key.py (post:21] - 传的参数是：{"id": 189, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:06:51,821 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:06:51,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 16:06:51,834 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,834 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：190
2022-05-06 16:06:51,847 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:06:51,848 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [189, 190]}
2022-05-06 16:06:51,848 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:06:51,848 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：189, 190的记录
2022-05-06 16:07:23,822 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\utils\deprecation.py", line 133, in __call__
    response = self.process_request(request)
  File "D:\python3.95\lib\site-packages\django\middleware\common.py", line 54, in process_request
    path = self.get_full_path_with_slash(request)
  File "D:\python3.95\lib\site-packages\django\middleware\common.py", line 88, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to 192.168.1.216:8001/lipai/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
2022-05-06 16:08:40,766 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\utils\deprecation.py", line 133, in __call__
    response = self.process_request(request)
  File "D:\python3.95\lib\site-packages\django\middleware\common.py", line 54, in process_request
    path = self.get_full_path_with_slash(request)
  File "D:\python3.95\lib\site-packages\django\middleware\common.py", line 88, in get_full_path_with_slash
    raise RuntimeError(
RuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to 192.168.1.216:8001/lipai/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
2022-05-06 16:10:06,911 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:13:36,358 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:14:45,809 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:15:17,779 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:15:24,210 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:17:11,942 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:18:12,839 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\settings.py changed, reloading.
2022-05-06 16:18:14,020 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:18:17,751 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:18:24,285 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\settings.py changed, reloading.
2022-05-06 16:18:26,565 WARNING [django.security.csrf] [log.py (log_response:241] - Forbidden (CSRF token missing.): /lipai/
2022-05-06 16:19:12,194 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\settings.py changed, reloading.
2022-05-06 16:19:31,920 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:20:09,255 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:20:10,675 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 16:20:10,676 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "8D96"}
2022-05-06 16:20:10,676 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,676 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"aff2d75995824c999722c51d9f5a8573"}
2022-05-06 16:20:10,682 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:20:10,683 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:20:10,683 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,693 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:20:10,694 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:20:10,694 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,694 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：191
2022-05-06 16:20:10,725 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:20:10,725 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:20:10,726 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,733 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 16:20:10,733 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 191}
2022-05-06 16:20:10,734 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,734 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：191的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 191, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 16:20:10,739 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:20:10,740 INFO [root] [key.py (post:21] - 传的参数是：{"id": 191, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:20:10,740 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,750 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 16:20:10,750 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 191}
2022-05-06 16:20:10,751 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,751 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：191的记录已成功
2022-05-06 16:20:10,780 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:20:10,780 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:20:10,781 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,789 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 16:20:10,790 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 16:20:10,790 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,791 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 16:20:10,800 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:20:10,800 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [191]}
2022-05-06 16:20:10,800 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,801 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：191的记录
2022-05-06 16:20:10,807 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:20:10,808 INFO [root] [key.py (post:21] - 传的参数是：{"id": 191, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:20:10,808 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,818 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:20:10,818 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:20:10,819 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,819 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：192
2022-05-06 16:20:10,825 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:20:10,825 INFO [root] [key.py (post:21] - 传的参数是：{"id": 192, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:20:10,826 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:20:10,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 16:20:10,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,835 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：193
2022-05-06 16:20:10,843 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:20:10,844 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [192, 193]}
2022-05-06 16:20:10,844 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:20:10,844 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：192, 193的记录
2022-05-06 16:39:44,811 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:40:33,871 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 16:40:33,872 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "KUTJ"}
2022-05-06 16:40:33,872 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,872 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"7a0a66b19efa429392b49b9e43b1afd6"}
2022-05-06 16:40:33,880 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:40:33,880 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:40:33,881 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,891 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:40:33,892 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:40:33,892 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,893 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：194
2022-05-06 16:40:33,928 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:40:33,929 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:40:33,929 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,936 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 16:40:33,937 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 194}
2022-05-06 16:40:33,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,937 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：194的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 194, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 16:40:33,944 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:40:33,945 INFO [root] [key.py (post:21] - 传的参数是：{"id": 194, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:40:33,945 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,954 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 16:40:33,955 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 194}
2022-05-06 16:40:33,955 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,955 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：194的记录已成功
2022-05-06 16:40:33,985 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:40:33,985 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:40:33,985 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,995 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 16:40:33,996 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 16:40:33,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:33,996 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 16:40:34,005 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:40:34,005 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [194]}
2022-05-06 16:40:34,006 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,006 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：194的记录
2022-05-06 16:40:34,013 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:40:34,013 INFO [root] [key.py (post:21] - 传的参数是：{"id": 194, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:40:34,014 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,025 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:40:34,025 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:40:34,026 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,026 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：195
2022-05-06 16:40:34,033 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:40:34,033 INFO [root] [key.py (post:21] - 传的参数是：{"id": 195, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:40:34,033 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:40:34,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 16:40:34,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,044 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：196
2022-05-06 16:40:34,053 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:40:34,054 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [195, 196]}
2022-05-06 16:40:34,054 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:40:34,054 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：195, 196的记录
2022-05-06 16:41:48,073 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:42:11,928 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:42:17,075 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:42:38,768 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:42:56,297 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:49:35,146 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:49:41,091 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 16:49:41,091 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HSL5"}
2022-05-06 16:49:41,092 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,092 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"a9bd9606d0c34a74b00c348c462d6652"}
2022-05-06 16:49:41,098 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:49:41,098 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:49:41,098 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,107 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:49:41,108 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:49:41,108 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,108 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：197
2022-05-06 16:49:41,137 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:49:41,138 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:49:41,138 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 16:49:41,146 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 197}
2022-05-06 16:49:41,146 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,146 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：197的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 197, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 16:49:41,152 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:49:41,152 INFO [root] [key.py (post:21] - 传的参数是：{"id": 197, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:49:41,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,161 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 16:49:41,161 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 197}
2022-05-06 16:49:41,161 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,162 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：197的记录已成功
2022-05-06 16:49:41,189 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 16:49:41,190 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 16:49:41,190 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,199 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 16:49:41,199 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 16:49:41,199 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,199 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 16:49:41,208 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:49:41,209 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [197]}
2022-05-06 16:49:41,209 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,209 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：197的记录
2022-05-06 16:49:41,215 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:49:41,215 INFO [root] [key.py (post:21] - 传的参数是：{"id": 197, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 16:49:41,216 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,224 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:49:41,224 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 16:49:41,224 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,225 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：198
2022-05-06 16:49:41,230 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 16:49:41,230 INFO [root] [key.py (post:21] - 传的参数是：{"id": 198, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 16:49:41,230 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 16:49:41,239 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 16:49:41,239 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,240 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：199
2022-05-06 16:49:41,248 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 16:49:41,249 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [198, 199]}
2022-05-06 16:49:41,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 16:49:41,249 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：198, 199的记录
2022-05-06 16:56:19,427 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:56:57,701 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 16:59:40,230 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:01:43,028 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:01:55,241 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:01:55,242 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "SS7C"}
2022-05-06 17:01:55,242 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,243 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"940d6766b14249729ce53413b5164fd4"}
2022-05-06 17:01:55,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:01:55,249 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:01:55,250 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,262 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:01:55,263 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:01:55,263 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,263 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：200
2022-05-06 17:01:55,294 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:01:55,295 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:01:55,295 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,302 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:01:55,303 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 200}
2022-05-06 17:01:55,303 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,303 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：200的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 200, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:01:55,310 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:01:55,311 INFO [root] [key.py (post:21] - 传的参数是：{"id": 200, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:01:55,311 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,323 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:01:55,323 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 200}
2022-05-06 17:01:55,324 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,324 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：200的记录已成功
2022-05-06 17:01:55,352 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:01:55,353 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:01:55,353 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,362 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:01:55,362 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:01:55,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,363 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:01:55,390 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:01:55,390 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [200]}
2022-05-06 17:01:55,391 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,391 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：200的记录
2022-05-06 17:01:55,399 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:01:55,399 INFO [root] [key.py (post:21] - 传的参数是：{"id": 200, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:01:55,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,421 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:01:55,421 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:01:55,421 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,422 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：201
2022-05-06 17:01:55,432 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:01:55,432 INFO [root] [key.py (post:21] - 传的参数是：{"id": 201, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:01:55,433 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:01:55,444 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:01:55,444 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,445 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：202
2022-05-06 17:01:55,463 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:01:55,463 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [201, 202]}
2022-05-06 17:01:55,464 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:01:55,464 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：201, 202的记录
2022-05-06 17:03:50,155 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:04:00,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:04:00,805 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "2A7W"}
2022-05-06 17:04:00,806 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,806 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"a597e42855564366af9005496e47d77a"}
2022-05-06 17:04:00,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:04:00,813 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:04:00,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,834 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:04:00,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:04:00,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,835 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：203
2022-05-06 17:04:00,868 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:04:00,868 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:04:00,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,876 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:04:00,876 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 203}
2022-05-06 17:04:00,877 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,877 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：203的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 203, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:04:00,886 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:04:00,886 INFO [root] [key.py (post:21] - 传的参数是：{"id": 203, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:04:00,886 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:04:00,907 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 203}
2022-05-06 17:04:00,908 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,908 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：203的记录已成功
2022-05-06 17:04:00,940 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:04:00,940 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:04:00,940 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,949 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:04:00,950 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:04:00,950 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,950 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:04:00,964 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:04:00,964 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [203]}
2022-05-06 17:04:00,964 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,965 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：203的记录
2022-05-06 17:04:00,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:04:00,976 INFO [root] [key.py (post:21] - 传的参数是：{"id": 203, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:04:00,976 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,989 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:04:00,990 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:04:00,990 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:00,990 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：204
2022-05-06 17:04:00,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:04:00,996 INFO [root] [key.py (post:21] - 传的参数是：{"id": 204, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:04:00,997 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:01,029 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:04:01,029 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:04:01,030 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:01,030 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：205
2022-05-06 17:04:01,044 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:04:01,045 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [204, 205]}
2022-05-06 17:04:01,045 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:04:01,045 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：204, 205的记录
2022-05-06 17:04:54,083 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:05:14,478 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:05:14,479 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WTQA"}
2022-05-06 17:05:14,480 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,480 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"969cd8be75ec41dea4076f074f9ca034"}
2022-05-06 17:05:14,486 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:05:14,486 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:05:14,486 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,495 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:05:14,495 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:05:14,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,496 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：206
2022-05-06 17:05:14,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:05:14,524 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:05:14,524 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,531 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:05:14,531 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 206}
2022-05-06 17:05:14,532 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,532 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：206的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 206, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:05:14,537 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:05:14,537 INFO [root] [key.py (post:21] - 传的参数是：{"id": 206, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:05:14,538 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,548 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:05:14,548 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 206}
2022-05-06 17:05:14,548 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,549 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：206的记录已成功
2022-05-06 17:05:14,576 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:05:14,577 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:05:14,577 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,585 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:05:14,586 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:05:14,586 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,586 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:05:14,597 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:05:14,598 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [206]}
2022-05-06 17:05:14,598 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,598 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：206的记录
2022-05-06 17:05:14,603 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:05:14,603 INFO [root] [key.py (post:21] - 传的参数是：{"id": 206, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:05:14,604 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,612 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:05:14,612 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:05:14,613 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,613 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：207
2022-05-06 17:05:14,619 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:05:14,619 INFO [root] [key.py (post:21] - 传的参数是：{"id": 207, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:05:14,620 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,627 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:05:14,628 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:05:14,628 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,628 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：208
2022-05-06 17:05:14,637 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:05:14,637 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [207, 208]}
2022-05-06 17:05:14,637 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:05:14,638 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：207, 208的记录
2022-05-06 17:06:28,498 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\utility\getlogger.py changed, reloading.
2022-05-06 17:07:31,015 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:07:31,016 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "L4BP"}
2022-05-06 17:07:31,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,017 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"9deed94eba744fc0b9ff8092ec13a922"}
2022-05-06 17:07:31,023 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:07:31,024 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:07:31,024 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,036 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:07:31,036 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:07:31,037 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,037 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：209
2022-05-06 17:07:31,066 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:07:31,066 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:07:31,067 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,073 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:07:31,074 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 209}
2022-05-06 17:07:31,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,074 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：209的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 209, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:07:31,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:07:31,080 INFO [root] [key.py (post:21] - 传的参数是：{"id": 209, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:07:31,080 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,090 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:07:31,091 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 209}
2022-05-06 17:07:31,091 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,091 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：209的记录已成功
2022-05-06 17:07:31,125 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:07:31,125 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:07:31,126 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,134 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:07:31,135 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:07:31,135 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,135 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:07:31,143 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:07:31,144 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [209]}
2022-05-06 17:07:31,144 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,144 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：209的记录
2022-05-06 17:07:31,150 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:07:31,150 INFO [root] [key.py (post:21] - 传的参数是：{"id": 209, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:07:31,150 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,158 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:07:31,158 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:07:31,159 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,159 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：210
2022-05-06 17:07:31,164 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:07:31,165 INFO [root] [key.py (post:21] - 传的参数是：{"id": 210, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:07:31,165 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,173 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:07:31,173 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:07:31,173 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,174 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：211
2022-05-06 17:07:31,182 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:07:31,182 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [210, 211]}
2022-05-06 17:07:31,182 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:07:31,183 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：210, 211的记录
2022-05-06 17:07:35,585 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:07:46,386 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:08:05,669 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:08:30,292 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:08:30,292 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "HJ44"}
2022-05-06 17:08:30,293 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,293 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"522e0b33102d485ab3c1233cb59b65ce"}
2022-05-06 17:08:30,298 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:08:30,299 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:08:30,299 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,308 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:08:30,308 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:08:30,309 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,309 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：212
2022-05-06 17:08:30,337 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:08:30,338 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:08:30,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,345 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:08:30,345 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 212}
2022-05-06 17:08:30,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,346 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：212的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 212, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:08:30,351 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:08:30,351 INFO [root] [key.py (post:21] - 传的参数是：{"id": 212, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:08:30,352 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,360 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:08:30,360 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 212}
2022-05-06 17:08:30,360 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,361 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：212的记录已成功
2022-05-06 17:08:30,389 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:08:30,389 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:08:30,389 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,401 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:08:30,402 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:08:30,402 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,403 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:08:30,413 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:08:30,413 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [212]}
2022-05-06 17:08:30,413 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,414 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：212的记录
2022-05-06 17:08:30,420 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:08:30,420 INFO [root] [key.py (post:21] - 传的参数是：{"id": 212, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:08:30,420 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,433 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:08:30,434 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:08:30,434 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,434 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：213
2022-05-06 17:08:30,440 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:08:30,440 INFO [root] [key.py (post:21] - 传的参数是：{"id": 213, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:08:30,441 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:08:30,449 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:08:30,449 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,450 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：214
2022-05-06 17:08:30,457 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:08:30,458 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [213, 214]}
2022-05-06 17:08:30,458 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:08:30,458 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：213, 214的记录
2022-05-06 17:10:06,465 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:10:49,209 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:10:49,210 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "AS94"}
2022-05-06 17:10:49,210 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,211 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"fabdef2362454da18ad9a43ad81c477b"}
2022-05-06 17:10:49,216 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:10:49,217 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:10:49,217 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:10:49,227 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:10:49,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,227 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：215
2022-05-06 17:10:49,256 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:10:49,256 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:10:49,256 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,263 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:10:49,263 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 215}
2022-05-06 17:10:49,264 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,264 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：215的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 215, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:10:49,269 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:10:49,269 INFO [root] [key.py (post:21] - 传的参数是：{"id": 215, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:10:49,270 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:10:49,279 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 215}
2022-05-06 17:10:49,279 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,279 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：215的记录已成功
2022-05-06 17:10:49,307 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:10:49,307 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:10:49,308 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,317 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:10:49,317 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:10:49,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,318 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:10:49,327 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:10:49,328 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [215]}
2022-05-06 17:10:49,328 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,328 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：215的记录
2022-05-06 17:10:49,333 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:10:49,334 INFO [root] [key.py (post:21] - 传的参数是：{"id": 215, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:10:49,334 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:10:49,343 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:10:49,343 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,343 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：216
2022-05-06 17:10:49,349 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:10:49,349 INFO [root] [key.py (post:21] - 传的参数是：{"id": 216, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:10:49,349 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,357 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:10:49,358 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:10:49,358 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,358 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：217
2022-05-06 17:10:49,366 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:10:49,366 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [216, 217]}
2022-05-06 17:10:49,367 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:10:49,367 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：216, 217的记录
2022-05-06 17:15:09,673 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:15:16,072 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:15:16,073 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "44B8"}
2022-05-06 17:15:16,074 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,074 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"cbba83ac99bf47be94856990ebb116fb"}
2022-05-06 17:15:16,080 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:15:16,080 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:15:16,081 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,151 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:15:16,151 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:15:16,152 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,152 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：218
2022-05-06 17:15:16,185 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:15:16,185 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:15:16,186 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,198 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:15:16,198 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 218}
2022-05-06 17:15:16,198 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,198 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：218的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 218, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:15:16,205 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:15:16,205 INFO [root] [key.py (post:21] - 传的参数是：{"id": 218, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:15:16,206 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:15:16,220 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 218}
2022-05-06 17:15:16,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,220 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：218的记录已成功
2022-05-06 17:15:16,251 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:15:16,252 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:15:16,254 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,267 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:15:16,268 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:15:16,269 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,270 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:15:16,286 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:15:16,286 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [218]}
2022-05-06 17:15:16,287 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,288 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：218的记录
2022-05-06 17:15:16,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:15:16,297 INFO [root] [key.py (post:21] - 传的参数是：{"id": 218, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:15:16,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,308 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:15:16,309 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:15:16,309 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,309 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：219
2022-05-06 17:15:16,316 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:15:16,316 INFO [root] [key.py (post:21] - 传的参数是：{"id": 219, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:15:16,317 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,326 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:15:16,327 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:15:16,327 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,327 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：220
2022-05-06 17:15:16,336 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:15:16,336 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [219, 220]}
2022-05-06 17:15:16,337 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:15:16,337 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：219, 220的记录
2022-05-06 17:16:25,430 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:17:00,885 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:18:09,065 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:18:30,718 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:18:43,601 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:18:43,602 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "CBPG"}
2022-05-06 17:18:43,603 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,603 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2c2f52a2e9904f1fa5ee6a69b1c5ce72"}
2022-05-06 17:18:43,611 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:18:43,611 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:18:43,611 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:18:43,621 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:18:43,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,622 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：221
2022-05-06 17:18:43,652 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:18:43,653 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:18:43,653 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,661 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:18:43,661 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 221}
2022-05-06 17:18:43,661 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,662 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：221的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 221, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:18:43,667 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:18:43,668 INFO [root] [key.py (post:21] - 传的参数是：{"id": 221, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:18:43,668 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,677 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:18:43,677 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 221}
2022-05-06 17:18:43,678 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,678 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：221的记录已成功
2022-05-06 17:18:43,706 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:18:43,707 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:18:43,707 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,716 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:18:43,716 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:18:43,716 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,717 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:18:43,729 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:18:43,730 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [221]}
2022-05-06 17:18:43,730 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,730 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：221的记录
2022-05-06 17:18:43,736 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:18:43,736 INFO [root] [key.py (post:21] - 传的参数是：{"id": 221, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:18:43,736 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,752 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:18:43,752 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:18:43,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,752 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：222
2022-05-06 17:18:43,759 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:18:43,759 INFO [root] [key.py (post:21] - 传的参数是：{"id": 222, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:18:43,760 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:18:43,769 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:18:43,770 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,770 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：223
2022-05-06 17:18:43,779 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:18:43,779 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [222, 223]}
2022-05-06 17:18:43,779 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:18:43,780 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：222, 223的记录
2022-05-06 17:28:14,582 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:28:22,211 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:28:22,212 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "DPMM"}
2022-05-06 17:28:22,212 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,212 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"0e092248ee014b86a64fdfa92c7ccb92"}
2022-05-06 17:28:22,219 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:28:22,219 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:28:22,220 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,233 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:28:22,233 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:28:22,234 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,234 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：224
2022-05-06 17:28:22,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:28:22,266 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:28:22,266 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,275 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:28:22,275 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 224}
2022-05-06 17:28:22,276 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,276 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：224的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 224, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:28:22,282 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:28:22,282 INFO [root] [key.py (post:21] - 传的参数是：{"id": 224, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:28:22,282 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,299 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:28:22,299 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 224}
2022-05-06 17:28:22,300 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,300 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：224的记录已成功
2022-05-06 17:28:22,341 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:28:22,341 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:28:22,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,354 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:28:22,354 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:28:22,355 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,355 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:28:22,364 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:28:22,365 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [224]}
2022-05-06 17:28:22,365 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,366 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：224的记录
2022-05-06 17:28:22,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:28:22,373 INFO [root] [key.py (post:21] - 传的参数是：{"id": 224, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:28:22,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,382 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:28:22,383 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:28:22,383 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,383 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：225
2022-05-06 17:28:22,388 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:28:22,389 INFO [root] [key.py (post:21] - 传的参数是：{"id": 225, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:28:22,389 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,398 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:28:22,399 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:28:22,399 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,399 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：226
2022-05-06 17:28:22,406 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:28:22,407 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [225, 226]}
2022-05-06 17:28:22,407 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:28:22,407 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：225, 226的记录
2022-05-06 17:30:08,724 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:30:15,240 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:30:15,241 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "WVTQ"}
2022-05-06 17:30:15,241 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,241 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"525f5c8662e94af5b2450ab9f7a0022d"}
2022-05-06 17:30:15,246 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:30:15,246 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:30:15,247 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,255 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:30:15,256 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:30:15,256 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,257 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：227
2022-05-06 17:30:15,283 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:30:15,283 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:30:15,284 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,290 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:30:15,290 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 227}
2022-05-06 17:30:15,291 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,291 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：227的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 227, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:30:15,296 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:30:15,296 INFO [root] [key.py (post:21] - 传的参数是：{"id": 227, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:30:15,297 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,305 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:30:15,305 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 227}
2022-05-06 17:30:15,306 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,306 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：227的记录已成功
2022-05-06 17:30:15,332 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:30:15,332 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:30:15,333 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,340 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:30:15,341 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:30:15,341 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,342 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:30:15,350 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:30:15,350 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [227]}
2022-05-06 17:30:15,351 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,351 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：227的记录
2022-05-06 17:30:15,356 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:30:15,356 INFO [root] [key.py (post:21] - 传的参数是：{"id": 227, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:30:15,356 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,363 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:30:15,363 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:30:15,364 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,364 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：228
2022-05-06 17:30:15,368 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:30:15,369 INFO [root] [key.py (post:21] - 传的参数是：{"id": 228, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:30:15,369 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,377 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:30:15,378 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:30:15,378 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,378 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：229
2022-05-06 17:30:15,385 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:30:15,385 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [228, 229]}
2022-05-06 17:30:15,385 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:30:15,386 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：228, 229的记录
2022-05-06 17:32:16,849 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:33:46,655 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:34:17,776 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:38:04,050 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:38:04,051 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "6WLV"}
2022-05-06 17:38:04,051 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 711
2022-05-06 17:38:04,211 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 122, in login
    resp = self.post(lipaiapi.key.login_path, data)
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 30, in post
    raise
RuntimeError: No active exception to reraise
2022-05-06 17:38:38,436 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 22, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:38:50,967 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:38:50,968 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "Q2AH"}
2022-05-06 17:38:50,968 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:50,969 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"fd3ab07cf7f34363b04d7d8881fab1c5"}
2022-05-06 17:38:50,975 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:38:50,975 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:38:50,975 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:50,985 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:38:50,985 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:38:50,986 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:50,986 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：230
2022-05-06 17:38:51,018 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:38:51,018 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:38:51,019 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,026 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:38:51,026 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 230}
2022-05-06 17:38:51,026 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,026 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：230的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 230, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:38:51,031 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:38:51,031 INFO [root] [key.py (post:21] - 传的参数是：{"id": 230, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:38:51,032 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,040 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:38:51,040 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 230}
2022-05-06 17:38:51,041 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,041 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：230的记录已成功
2022-05-06 17:38:51,070 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:38:51,070 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:38:51,071 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,079 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:38:51,079 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:38:51,079 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,080 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:38:51,088 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:38:51,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [230]}
2022-05-06 17:38:51,089 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,089 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：230的记录
2022-05-06 17:38:51,094 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:38:51,095 INFO [root] [key.py (post:21] - 传的参数是：{"id": 230, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:38:51,095 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,103 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:38:51,104 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:38:51,105 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,105 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：231
2022-05-06 17:38:51,110 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:38:51,110 INFO [root] [key.py (post:21] - 传的参数是：{"id": 231, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:38:51,111 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,118 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:38:51,119 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:38:51,119 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,119 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：232
2022-05-06 17:38:51,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:38:51,128 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [231, 232]}
2022-05-06 17:38:51,128 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:38:51,129 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：231, 232的记录
2022-05-06 17:41:03,281 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:42:46,769 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:45:10,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:45:10,388 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "NENF"}
2022-05-06 17:45:10,388 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,389 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"64dece9f92ff46438a1750a13e08a5c8"}
2022-05-06 17:45:10,395 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:10,395 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:45:10,395 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,405 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:10,406 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:45:10,406 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,406 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：233
2022-05-06 17:45:10,436 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:45:10,437 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:45:10,437 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,444 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:45:10,444 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 233}
2022-05-06 17:45:10,444 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,445 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：233的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 233, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:45:10,449 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:10,449 INFO [root] [key.py (post:21] - 传的参数是：{"id": 233, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:45:10,449 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,456 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:45:10,457 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 233}
2022-05-06 17:45:10,457 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,457 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：233的记录已成功
2022-05-06 17:45:10,484 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:45:10,485 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:45:10,485 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,494 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:45:10,495 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:45:10,495 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,496 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:45:10,504 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:45:10,505 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [233]}
2022-05-06 17:45:10,505 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,505 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：233的记录
2022-05-06 17:45:10,513 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:10,514 INFO [root] [key.py (post:21] - 传的参数是：{"id": 233, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:45:10,514 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,524 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:10,524 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:45:10,525 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,525 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：234
2022-05-06 17:45:10,530 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:10,531 INFO [root] [key.py (post:21] - 传的参数是：{"id": 234, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:45:10,531 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,540 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:10,540 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:45:10,541 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,541 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：235
2022-05-06 17:45:10,550 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:45:10,550 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [234, 235]}
2022-05-06 17:45:10,550 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:10,550 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：234, 235的记录
2022-05-06 17:45:26,830 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 17:45:28,739 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:45:28,739 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RG3A"}
2022-05-06 17:45:28,740 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,740 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"13a7474ffac64256a65c7bb414eada88"}
2022-05-06 17:45:28,746 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:28,746 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:45:28,747 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,757 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:28,758 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:45:28,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,758 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：236
2022-05-06 17:45:28,788 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:45:28,788 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:45:28,789 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,796 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:45:28,797 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 236}
2022-05-06 17:45:28,797 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,798 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：236的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 236, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:45:28,803 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:28,804 INFO [root] [key.py (post:21] - 传的参数是：{"id": 236, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:45:28,804 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:45:28,813 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 236}
2022-05-06 17:45:28,814 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,814 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：236的记录已成功
2022-05-06 17:45:28,844 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:45:28,844 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:45:28,844 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,854 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:45:28,855 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:45:28,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,856 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:45:28,867 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:45:28,867 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [236]}
2022-05-06 17:45:28,868 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,868 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：236的记录
2022-05-06 17:45:28,873 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:28,874 INFO [root] [key.py (post:21] - 传的参数是：{"id": 236, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:45:28,874 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,882 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:28,882 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:45:28,883 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,883 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：237
2022-05-06 17:45:28,888 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:45:28,889 INFO [root] [key.py (post:21] - 传的参数是：{"id": 237, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:45:28,889 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,898 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:45:28,898 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:45:28,899 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,899 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：238
2022-05-06 17:45:28,911 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:45:28,911 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [237, 238]}
2022-05-06 17:45:28,912 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:45:28,912 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：237, 238的记录
2022-05-06 17:51:18,019 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 17:51:32,698 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:51:32,698 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "D48Q"}
2022-05-06 17:51:32,699 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,699 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"67b503cdd6aa42d88b787a593270ed61"}
2022-05-06 17:51:32,705 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:51:32,706 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:51:32,706 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,715 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:51:32,715 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:51:32,715 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,716 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：239
2022-05-06 17:51:32,744 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:51:32,745 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:51:32,745 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,751 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:51:32,751 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 239}
2022-05-06 17:51:32,752 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,752 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：239的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 239, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:51:32,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:51:32,758 INFO [root] [key.py (post:21] - 传的参数是：{"id": 239, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:51:32,758 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,775 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:51:32,775 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 239}
2022-05-06 17:51:32,776 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,776 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：239的记录已成功
2022-05-06 17:51:32,804 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:51:32,804 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:51:32,805 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,813 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:51:32,813 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:51:32,813 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,814 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:51:32,826 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:51:32,826 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [239]}
2022-05-06 17:51:32,827 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,827 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：239的记录
2022-05-06 17:51:32,832 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:51:32,832 INFO [root] [key.py (post:21] - 传的参数是：{"id": 239, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:51:32,833 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,841 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:51:32,841 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:51:32,842 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,842 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：240
2022-05-06 17:51:32,846 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:51:32,847 INFO [root] [key.py (post:21] - 传的参数是：{"id": 240, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:51:32,847 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,855 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:51:32,856 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:51:32,856 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,856 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：241
2022-05-06 17:51:32,864 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:51:32,865 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [240, 241]}
2022-05-06 17:51:32,865 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:51:32,865 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：240, 241的记录
2022-05-06 17:51:34,921 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/
2022-05-06 17:52:02,665 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 17:52:08,951 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/
2022-05-06 17:52:18,209 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 17:52:20,184 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/
2022-05-06 17:52:49,245 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 117, in login
    code = self.ocr.classification(image)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 1603, in classification
    image = base64_to_image(img_base64)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 16, in base64_to_image
    img_data = base64.b64decode(img_base64)
  File "D:\python3.95\lib\base64.py", line 80, in b64decode
    s = _bytes_from_decode_data(s)
  File "D:\python3.95\lib\base64.py", line 45, in _bytes_from_decode_data
    raise TypeError("argument should be a bytes-like object or ASCII "
TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'
2022-05-06 17:53:03,678 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 117, in login
    code = self.ocr.classification(image)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 1603, in classification
    image = base64_to_image(img_base64)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 16, in base64_to_image
    img_data = base64.b64decode(img_base64)
  File "D:\python3.95\lib\base64.py", line 80, in b64decode
    s = _bytes_from_decode_data(s)
  File "D:\python3.95\lib\base64.py", line 45, in _bytes_from_decode_data
    raise TypeError("argument should be a bytes-like object or ASCII "
TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'
2022-05-06 17:53:18,702 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 117, in login
    code = self.ocr.classification(image)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 1603, in classification
    image = base64_to_image(img_base64)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 16, in base64_to_image
    img_data = base64.b64decode(img_base64)
  File "D:\python3.95\lib\base64.py", line 80, in b64decode
    s = _bytes_from_decode_data(s)
  File "D:\python3.95\lib\base64.py", line 45, in _bytes_from_decode_data
    raise TypeError("argument should be a bytes-like object or ASCII "
TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'
2022-05-06 17:54:20,176 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 17:54:22,649 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 117, in login
    code = self.ocr.classification(image)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 1603, in classification
    image = base64_to_image(img_base64)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 16, in base64_to_image
    img_data = base64.b64decode(img_base64)
  File "D:\python3.95\lib\base64.py", line 80, in b64decode
    s = _bytes_from_decode_data(s)
  File "D:\python3.95\lib\base64.py", line 45, in _bytes_from_decode_data
    raise TypeError("argument should be a bytes-like object or ASCII "
TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'
2022-05-06 17:54:38,887 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 117, in login
    code = self.ocr.classification(image)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 1603, in classification
    image = base64_to_image(img_base64)
  File "D:\python3.95\lib\site-packages\ddddocr\__init__.py", line 16, in base64_to_image
    img_data = base64.b64decode(img_base64)
  File "D:\python3.95\lib\base64.py", line 80, in b64decode
    s = _bytes_from_decode_data(s)
  File "D:\python3.95\lib\base64.py", line 45, in _bytes_from_decode_data
    raise TypeError("argument should be a bytes-like object or ASCII "
TypeError: argument should be a bytes-like object or ASCII string, not 'NoneType'
2022-05-06 17:55:44,210 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 17:55:47,862 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:55:47,863 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "Y538"}
2022-05-06 17:55:47,863 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:47,863 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"caab732a341548f992e01a5ab0b3d0cb"}
2022-05-06 17:55:48,028 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:55:48,030 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:55:48,031 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,210 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:55:48,211 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:55:48,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,214 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：242
2022-05-06 17:55:48,591 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:55:48,592 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:55:48,594 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,668 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:55:48,669 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 242}
2022-05-06 17:55:48,671 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,673 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：242的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 242, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:55:48,694 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:55:48,696 INFO [root] [key.py (post:21] - 传的参数是：{"id": 242, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:55:48,697 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,758 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:55:48,759 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 242}
2022-05-06 17:55:48,761 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,762 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：242的记录已成功
2022-05-06 17:55:48,833 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:55:48,834 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:55:48,835 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,894 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:55:48,894 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:55:48,895 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,895 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:55:48,951 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:55:48,951 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [242]}
2022-05-06 17:55:48,952 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,953 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：242的记录
2022-05-06 17:55:48,950 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 17:55:48,971 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:55:48,971 INFO [root] [key.py (post:21] - 传的参数是：{"id": 242, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:55:48,972 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:48,999 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:55:49,000 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:55:49,000 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:49,000 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：243
2022-05-06 17:55:49,021 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:55:49,022 INFO [root] [key.py (post:21] - 传的参数是：{"id": 243, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:55:49,022 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:49,052 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:55:49,053 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:55:49,053 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:49,054 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：244
2022-05-06 17:55:49,087 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:55:49,088 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [243, 244]}
2022-05-06 17:55:49,088 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:55:49,089 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：243, 244的记录
2022-05-06 17:56:02,573 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 17:56:02,574 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "4PN9"}
2022-05-06 17:56:02,574 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,575 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"f50f0b92fd664a55b91bedf6d40c9c2d"}
2022-05-06 17:56:02,595 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:56:02,595 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:56:02,595 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,620 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:56:02,621 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:56:02,621 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,622 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：245
2022-05-06 17:56:02,711 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:56:02,712 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:56:02,714 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,742 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 17:56:02,744 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 245}
2022-05-06 17:56:02,745 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,746 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：245的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 245, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 17:56:02,769 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:56:02,770 INFO [root] [key.py (post:21] - 传的参数是：{"id": 245, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:56:02,771 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,805 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 17:56:02,806 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 245}
2022-05-06 17:56:02,807 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,807 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：245的记录已成功
2022-05-06 17:56:02,907 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 17:56:02,908 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 17:56:02,909 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,955 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 17:56:02,956 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 17:56:02,957 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,958 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 17:56:02,994 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:56:02,995 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [245]}
2022-05-06 17:56:02,996 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:02,997 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：245的记录
2022-05-06 17:56:03,014 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:56:03,015 INFO [root] [key.py (post:21] - 传的参数是：{"id": 245, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 17:56:03,016 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:03,058 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:56:03,059 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 17:56:03,060 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:03,061 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：246
2022-05-06 17:56:03,092 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 17:56:03,093 INFO [root] [key.py (post:21] - 传的参数是：{"id": 246, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 17:56:03,094 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:03,128 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 17:56:03,129 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 17:56:03,130 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:03,131 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：247
2022-05-06 17:56:03,161 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 17:56:03,162 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [246, 247]}
2022-05-06 17:56:03,163 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 17:56:03,163 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：246, 247的记录
2022-05-06 17:56:05,449 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/
2022-05-06 17:56:52,154 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /lipai/
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 26, in lipai
    a.login()
  File "C:\Users\chen\PycharmProjects\hellodjango\lipaiapi\key\key.py", line 118, in login
    jsessionid = resp.cookies.get_dict()["JSESSIONID"]
KeyError: 'JSESSIONID'
2022-05-06 18:00:01,390 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 11, in search_form
    return render(request, 'lipai_api.html')
  File "D:\python3.95\lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "D:\python3.95\lib\site-packages\django\template\loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: lipai_api.html
2022-05-06 18:01:17,022 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\settings.py changed, reloading.
2022-05-06 18:01:25,854 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 18:01:25,855 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "JLYU"}
2022-05-06 18:01:25,855 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,855 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"2defa60c5e2f4436859cbe8f2eae2fd3"}
2022-05-06 18:01:25,866 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:01:25,867 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:01:25,867 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,879 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:01:25,879 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:01:25,879 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,880 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：248
2022-05-06 18:01:25,917 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:01:25,918 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:01:25,918 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,928 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 18:01:25,928 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 248}
2022-05-06 18:01:25,929 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,929 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：248的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 248, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 18:01:25,937 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:01:25,937 INFO [root] [key.py (post:21] - 传的参数是：{"id": 248, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:01:25,937 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,949 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 18:01:25,949 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 248}
2022-05-06 18:01:25,950 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:25,950 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：248的记录已成功
2022-05-06 18:01:25,996 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:01:25,997 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:01:25,998 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,011 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 18:01:26,012 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 18:01:26,012 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,013 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 18:01:26,043 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:01:26,044 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [248]}
2022-05-06 18:01:26,044 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,045 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：248的记录
2022-05-06 18:01:26,053 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:01:26,053 INFO [root] [key.py (post:21] - 传的参数是：{"id": 248, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:01:26,054 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,070 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:01:26,071 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:01:26,071 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,072 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：249
2022-05-06 18:01:26,086 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:01:26,086 INFO [root] [key.py (post:21] - 传的参数是：{"id": 249, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:01:26,087 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,111 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:01:26,111 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 18:01:26,112 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,112 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：250
2022-05-06 18:01:26,139 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:01:26,139 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [249, 250]}
2022-05-06 18:01:26,140 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:01:26,140 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：249, 250的记录
2022-05-06 18:01:27,427 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/
2022-05-06 18:02:21,584 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\urls.py changed, reloading.
2022-05-06 18:03:13,119 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 18:03:13,120 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "RESU"}
2022-05-06 18:03:13,121 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,121 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"b9694977d5ab4f70a388a325ff1a2ee2"}
2022-05-06 18:03:13,129 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:03:13,129 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:03:13,130 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,145 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:03:13,145 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:03:13,145 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,146 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：251
2022-05-06 18:03:13,192 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:03:13,193 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:03:13,193 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,202 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 18:03:13,203 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 251}
2022-05-06 18:03:13,203 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,203 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：251的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 251, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 18:03:13,213 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:03:13,213 INFO [root] [key.py (post:21] - 传的参数是：{"id": 251, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:03:13,213 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,226 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 18:03:13,226 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 251}
2022-05-06 18:03:13,227 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,227 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：251的记录已成功
2022-05-06 18:03:13,264 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:03:13,264 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:03:13,265 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,278 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 18:03:13,279 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 18:03:13,280 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,281 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 18:03:13,303 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:03:13,304 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [251]}
2022-05-06 18:03:13,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,305 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：251的记录
2022-05-06 18:03:13,317 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:03:13,317 INFO [root] [key.py (post:21] - 传的参数是：{"id": 251, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:03:13,318 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,342 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:03:13,342 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:03:13,342 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,343 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：252
2022-05-06 18:03:13,356 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:03:13,356 INFO [root] [key.py (post:21] - 传的参数是：{"id": 252, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:03:13,356 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,372 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:03:13,373 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 18:03:13,373 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,373 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：253
2022-05-06 18:03:13,388 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:03:13,388 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [252, 253]}
2022-05-06 18:03:13,389 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:03:13,389 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：252, 253的记录
2022-05-06 18:03:15,090 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:03:15,092 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:03:15,092 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:03:15,093 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:03:15,094 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:03:15,094 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:03:25,872 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:03:25,873 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:03:25,874 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:03:25,874 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:03:25,875 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:03:25,875 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:05:04,214 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:07:01,618 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:07:01,619 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:07:01,621 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:07:01,623 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:07:01,623 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:07:01,624 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:17:18,377 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:17:18,378 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:17:18,379 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:17:18,381 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:17:18,383 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:17:18,386 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:17:47,430 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:17:47,430 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:17:51,021 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:17:51,021 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:17:51,022 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:17:51,023 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:17:51,023 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:17:51,024 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:18:25,179 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/login
2022-05-06 18:18:25,179 INFO [root] [key.py (post:21] - 传的参数是：{"loginCode": "admin", "plantPassword": "12345qwert", "imageCode": "3ULY"}
2022-05-06 18:18:25,180 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,180 INFO [root] [key.py (login:123] - 请求登录的响应返回内容是：{"code":200,"msg":"成功","data":"8f41f84b7dbf4225963d7b3f44b775ad"}
2022-05-06 18:18:25,189 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:18:25,189 INFO [root] [key.py (post:21] - 传的参数是：{"id": "", "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:18:25,190 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,201 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:18:25,202 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:18:25,202 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,203 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：254
2022-05-06 18:18:25,239 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:18:25,239 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:18:25,240 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,249 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/read
2022-05-06 18:18:25,249 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "id": 254}
2022-05-06 18:18:25,249 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,249 INFO [root] [key.py (read:41] - 查看：查看模型customer_car_brand中id为：254的内容： {'carModelIds': [], 'companyId': {'displayName': 'hx', 'name': 'hx', 'id': 1}, 'pinyin': 'BIYADI', 'displayName': '比亚迪', 'name': '比亚迪', 'carModelCount': 0, 'id': 254, 'logoUrl': 'https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png'}
2022-05-06 18:18:25,256 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:18:25,256 INFO [root] [key.py (post:21] - 传的参数是：{"id": 254, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:18:25,256 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,265 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/write
2022-05-06 18:18:25,265 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}, "id": 254}
2022-05-06 18:18:25,265 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,265 INFO [root] [key.py (edit:47] - 编辑：编辑模型customer_car_brand中id为：254的记录已成功
2022-05-06 18:18:25,304 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/load_views
2022-05-06 18:18:25,305 INFO [root] [key.py (post:21] - 传的参数是：{"model": "base_view", "resModel": "customer_car_brand", "kwargs": {"context": {"lang": "zh_CN"}, "views": [[false, "tree"], [false, "form"], [false, "search"]]}}
2022-05-06 18:18:25,305 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,319 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/search_read
2022-05-06 18:18:25,320 INFO [root] [key.py (post:21] - 传的参数是：{"offset": 1, "limit": 20, "sort": "", "model": "customer_car_brand", "fields": ["carModelIds", "companyId", "pinyin", "displayName", "name", "carModelCount", "id", "logoUrl"], "domain": [["name", "ilike", "\u6bd4\u4e9a\u8fea\u6c49"]]}
2022-05-06 18:18:25,320 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,320 INFO [root] [key.py (search_read:84] - 快捷搜索：模型：customer_car_brand快捷搜索条件按'name'搜索 '比亚迪汉'符合的记录数是：1条
2022-05-06 18:18:25,337 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:18:25,337 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [254]}
2022-05-06 18:18:25,338 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,338 INFO [root] [key.py (delete:54] - 删除：已删除模型customer_car_brand中id为：254的记录
2022-05-06 18:18:25,346 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:18:25,346 INFO [root] [key.py (post:21] - 传的参数是：{"id": 254, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea"}, "method": "pinyinOnchange"}
2022-05-06 18:18:25,346 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,362 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:18:25,363 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea", "pinyin": "BIYADI"}}
2022-05-06 18:18:25,363 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,363 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：255
2022-05-06 18:18:25,371 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/onchange
2022-05-06 18:18:25,372 INFO [root] [key.py (post:21] - 传的参数是：{"id": 255, "model": "customer_car_brand", "field": "name", "map": {"name": "\u6bd4\u4e9a\u8fea\u6c49"}, "method": "pinyinOnchange"}
2022-05-06 18:18:25,372 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,386 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/create
2022-05-06 18:18:25,387 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "map": {"logoUrl": "https://test3.gcevc.net/oss/customer_car_brand/logoUrl/1651026599188.png", "name": "\u6bd4\u4e9a\u8fea\u6c49", "pinyin": "BIYADIHAN"}}
2022-05-06 18:18:25,387 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,387 INFO [root] [key.py (create:35] - 新建：创建模型：customer_car_brand新记录，id为：256
2022-05-06 18:18:25,398 INFO [root] [key.py (post:20] - 正在测试的接口是：http://192.168.1.61/api/unlink
2022-05-06 18:18:25,398 INFO [root] [key.py (post:21] - 传的参数是：{"model": "customer_car_brand", "ids": [255, 256]}
2022-05-06 18:18:25,398 INFO [root] [key.py (post:22] - 接口返回的响应内容中的code是： 200
2022-05-06 18:18:25,398 INFO [root] [key.py (delete:56] - 批量删除：已批量删除模型customer_car_brand中id为：255, 256的记录
2022-05-06 18:18:40,678 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/styles.css
2022-05-06 18:18:40,680 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/styles.css
2022-05-06 18:18:40,681 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/packages/index.js
2022-05-06 18:18:40,681 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/screen-diff/index.js
2022-05-06 18:18:40,684 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/plugins/behaviors/index.js
2022-05-06 18:18:40,685 WARNING [django.request] [log.py (log_response:241] - Not Found: /lipai/allure_result/app.js
2022-05-06 18:23:21,940 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:24:47,503 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:24,518 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:36,986 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:43,291 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:46,564 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:53,977 INFO [django.utils.autoreload] [autoreload.py (trigger_reload:266] - C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py changed, reloading.
2022-05-06 18:27:59,508 ERROR [django.request] [log.py (log_response:241] - Internal Server Error: /
Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\selenium\webdriver\common\service.py", line 71, in start
    self.process = subprocess.Popen(cmd, env=self.env,
  File "D:\python3.95\lib\subprocess.py", line 951, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "D:\python3.95\lib\subprocess.py", line 1420, in _execute_child
    hp, ht, pid, tid = _winapi.CreateProcess(executable, args,
FileNotFoundError: [WinError 2] 系统找不到指定的文件。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\python3.95\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\python3.95\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\chen\PycharmProjects\hellodjango\hellodjango\search.py", line 13, in search_form
    driver = webdriver.Chrome()
  File "D:\python3.95\lib\site-packages\selenium\webdriver\chrome\webdriver.py", line 70, in __init__
    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], "goog",
  File "D:\python3.95\lib\site-packages\selenium\webdriver\chromium\webdriver.py", line 89, in __init__
    self.service.start()
  File "D:\python3.95\lib\site-packages\selenium\webdriver\common\service.py", line 81, in start
    raise WebDriverException(
selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home

